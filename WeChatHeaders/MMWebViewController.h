//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "EnterpriseConnectorLogicDelegate-Protocol.h"
#import "ForwardMessageLogicDelegate-Protocol.h"
#import "H5GameScrollActionSheetDelegate-Protocol.h"
#import "ISysCallCheckExt-Protocol.h"
#import "IUiUtilExt-Protocol.h"
#import "MMJSApiVerifyMgrDelegate-Protocol.h"
#import "MMLongImagePreviewViewControllerDelegate-Protocol.h"
#import "MMScrollActionSheetDelegate-Protocol.h"
#import "MMTipsViewControllerDelegate-Protocol.h"
#import "MMWebLiveTitleViewDelegate-Protocol.h"
#import "MMWebMProfileTitleViewDelegate-Protocol.h"
#import "MMWebMenuHeaderViewDelegate-Protocol.h"
#import "MMWebSearchViewDelegate-Protocol.h"
#import "MMWebTopBarDelegate-Protocol.h"
#import "MMWebViewDelegate-Protocol.h"
#import "MMWebViewFontFloatViewDelegate-Protocol.h"
#import "MMWebViewOAuthSnapShotDelegate-Protocol.h"
#import "MMWebViewPresetUILogicDelegate-Protocol.h"
#import "MPPageFastLoadCustomSchemeHandlerDelegate-Protocol.h"
#import "MinimizationTransitionControllerDelegate-Protocol.h"
#import "RecentForwardScrollViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WAWxMaterialRefreshExt-Protocol.h"
#import "WCActionSheetDelegate-Protocol.h"
#import "WCCommitViewResultDelegate-Protocol.h"
#import "WCForceTouchPopProtocol-Protocol.h"
#import "WXCustomWebViewControllerProtocol-Protocol.h"
#import "WebPrefetcherJSApiLogicDelegate-Protocol.h"
#import "WebViewA8KeyLogicDelegate-Protocol.h"
#import "WebViewJSLogicDelegate-Protocol.h"
#import "WebViewSanboxSessionLogicDelegate-Protocol.h"
#import "YYWebViewDelegate-Protocol.h"

@class CAGradientLayer, CContact, EnterpriseConnectorLogic, FixDocumentPresent, ForwardMessageLogicController, GameWebReporter, MMJSApiVerifyMgr, MMLoadingView, MMScrollActionSheet, MMTimer, MMTipsViewController, MMUIButton, MMURLHandler, MMWebBottomToolBar, MMWebCoreConfig, MMWebCustomLog, MMWebLiveTitleView, MMWebMProfileTitleView, MMWebNaviErrorView, MMWebProgressBar, MMWebTopBar, MMWebTransHelpButton, MMWebViewFontFloatView, MMWebViewPageInfoModel, MMWebViewPerformance, MMWebViewPluginScheduler, MMWebViewPresetUI, MMWebViewPresetUILogic, MMWebViewSpaAuthContext, MMWebviewOAuthRemindHalfScreenView, MMWebviewPrefetchResult, MiniRecTransitionController, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL, NSURLRequest, TipsView, UIImageView, UILabel, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView, UIViewController, WCDeepLinkHandler, WCWebNavigationEventsStore, WKNavigation, WKWebView, WebPrefetcherJSApiLogic, WebViewA8KeyLogicImpl, WebViewJSLogicImpl, WebViewMenuCustomizeLogic, WebViewOAuthLogic, WebViewSanboxSessionLogic, WebViewTimeProfileData;
@protocol MMWebViewDelegate, MMWebViewOAuthSnapShotDelegate, MMWebViewPreloadContentHandler, YYWebViewInterface;

@interface MMWebViewController : MMUIViewController <WCForceTouchPopProtocol, MMScrollActionSheetDelegate, EnterpriseConnectorLogicDelegate, H5GameScrollActionSheetDelegate, MMWebMenuHeaderViewDelegate, RecentForwardScrollViewDelegate, MMWebViewDelegate, MMWebViewOAuthSnapShotDelegate, MPPageFastLoadCustomSchemeHandlerDelegate, MMLongImagePreviewViewControllerDelegate, MinimizationTransitionControllerDelegate, MMWebMProfileTitleViewDelegate, MMWebLiveTitleViewDelegate, MMWebTopBarDelegate, MMWebSearchViewDelegate, UIGestureRecognizerDelegate, IUiUtilExt, MMTipsViewControllerDelegate, ISysCallCheckExt, WAWxMaterialRefreshExt, WebPrefetcherJSApiLogicDelegate, MMWebViewPresetUILogicDelegate, WCActionSheetDelegate, MMWebViewFontFloatViewDelegate, WebViewA8KeyLogicDelegate, WebViewJSLogicDelegate, UIScrollViewDelegate, MMJSApiVerifyMgrDelegate, ForwardMessageLogicDelegate, WCCommitViewResultDelegate, WebViewSanboxSessionLogicDelegate, WXCustomWebViewControllerProtocol, YYWebViewDelegate>
{
    _Bool m_hasInitSameLayerSwitch;
    NSDictionary *m_sameLayerSwitchDict;
    id <MMWebViewPreloadContentHandler> _preloadContentHandler;
    NSString *_preloadFrameUrl;
    NSString *_preloadPageUrl;
    NSString *_preloadPageDataKeyUrl;
    NSString *_preloadForceUrl;
    NSString *_preloadGoH5Url;
    NSString *_preloadPageDataString;
    _Bool _isPreloadPageDataLoaded;
    _Bool _isPreloadPageLoadedForceUrl;
    _Bool _isUsePreloadWebView;
    _Bool _isPreloadStartLoadPageData;
    _Bool _isPreloadFirstGetA8KeyFail;
    _Bool _isPreloadPageLoadFinish;
    _Bool _isPreloadSyncGetPageData;
    _Bool _isPreloadGoH5;
    _Bool _isPreloadPageDataResultNotified;
    NSString *_preloadA8KeyFullUrl;
    unsigned int _preloadWebViewFontLevel;
    unsigned int _preloadScene;
    unsigned long long _preloadInitStartTime;
    unsigned long long _preloadLoadPageFrameCostTime;
    unsigned long long _preloadStartLoadPageTime;
    unsigned long long _preloadGetPageDataCostTime;
    unsigned long long _preloadReceivePageDataTime;
    unsigned long long _preloadWebReceivePageDataTime;
    unsigned long long _preloadWebCompileCostTime;
    unsigned long long _preloadFirstScreenRenderCostTime;
    unsigned long long _preloadFirstScreenRenderTime;
    unsigned long long _preloadGetA8KeyCostTime;
    unsigned long long _preloadA8KeyFinishTime;
    unsigned int _preloadPageDataSize;
    NSString *_preloadReportSessionId;
    unsigned int _preloadReportEnterScene;
    unsigned int _preloadReportEnterSubscene;
    unsigned int _preloadReportClickTime;
    NSString *_preloadReportSendUserName;
    unsigned int _preloadReportMsgCreateTime;
    unsigned int _preloadReportEnterId;
    _Bool m_isPageLoadFail;
    _Bool m_bFullScreen;
    _Bool m_hasExitFullScreenWhenViewWillPush;
    _Bool m_isShowingSSLErrorAlert;
    UILongPressGestureRecognizer *m_longPressGestureRecognizer;
    WKWebView<YYWebViewInterface> *webView;
    WebViewA8KeyLogicImpl *m_a8KeyLogicImpl;
    WebViewJSLogicImpl *m_jsLogicImpl;
    WebViewSanboxSessionLogic *m_sanboxLogicImpl;
    MMURLHandler *m_urlHandler;
    _Bool m_isPageDidLoaded;
    vector_0827168c _pIDKeyList;
    _Bool _bIsDraggingScroll;
    NSMutableSet *m_jsTempAllowApiCalls;
    WebViewTimeProfileData *m_webTimeProfileData;
    NSString *m_initUrl;
    unsigned int m_uiBackCount;
    _Bool m_nsBackFlag;
    MMScrollActionSheet *m_scrollActionSheet;
    _Bool m_haveMaterialButton;
    WebViewMenuCustomizeLogic *m_menuCustomizeLogic;
    NSMutableDictionary *m_jsInitInfo;
    WCDeepLinkHandler *m_deepLinkHandler;
    EnterpriseConnectorLogic *m_enterpriseConnectorLogic;
    _Bool m_isScrollMenuScroll;
    MMJSApiVerifyMgr *m_apiVerifyMgr;
    CDUnknownBlockType _OnInitReadyNotifyBlock;
    CDUnknownBlockType m_blockOnWebViewWillReturn;
    UILabel *m_previewTopBar;
    UIView *m_previewTopBarBg;
    _Bool m_isPreviewing;
    _Bool m_isFinishLoaded;
    UIView *_previewSourceView;
    UIViewController *_previewFromController;
    _Bool m_bShowOnNewMainFrameBanner;
    _Bool m_bReadingArticleBanner;
    _Bool m_bPreloadInMem;
    ForwardMessageLogicController *m_forwardMsgLogic;
    id <MMWebViewDelegate> m_delegate;
    _Bool m_bAutoSetTitle;
    _Bool m_bShouldForcedRotationToPortrait;
    unsigned long long m_lockOrientation;
    unsigned int m_stat_enterTime;
    long long m_loadingCount;
    _Bool m_openAllPermission;
    NSString *m_jump;
    _Bool m_viewDidAppear;
    _Bool m_viewHasAppeared;
    NSString *m_oLoadingUrl;
    _Bool m_bHasAnimated;
    _Bool m_bIFrame;
    NSString *m_mainFrameReqUrl;
    double _fLastStartOffsetY;
    NSMutableArray *_arrRouteUrl;
    unsigned int _startTime;
    _Bool _bIsBackForwardNavigationType;
    _Bool _bIsViewHasAppeared;
    NSString *_lastURL;
    MMTipsViewController *tipsAlertJumpAppstoreVC;
    _Bool _bIsAutoLoginMode;
    _Bool _alwayIntercept;
    _Bool _bHasInitNotification;
    _Bool _newWebLoading;
    unsigned long long _loadMode;
    NSMutableArray *_ignoredPageUrlList;
    _Bool _hasDidStartLoadOnce;
    _Bool m_bIsPortraitBeforeOpenUrl;
    _Bool _m_bDeepLink;
    _Bool _m_bUserHasClickLink;
    _Bool _m_bIsDelayPushWebView;
    _Bool _m_bIsRestrictAppstore;
    _Bool _m_isLanscape;
    _Bool _m_bIsJsapiUploadVideoUploading;
    _Bool _reportInstantly;
    _Bool _isPreloadEnded;
    _Bool _terminatedFlagForSnapshot;
    _Bool _bBridgedAndAuthedInNewMode;
    _Bool _bUseOneBridge;
    _Bool _hasPreloadLoadFail;
    _Bool _shouldHandleShrink;
    _Bool _isMarkedForDeallocReleaseTrancation;
    _Bool _bIsForceShowCloseButton;
    _Bool _m_isDisableShareMenu;
    _Bool _shouldShowBottom;
    _Bool _canSetMPTitleByOut;
    _Bool _unableAutoSetStatusBar;
    _Bool _isLockDownModeOn;
    _Bool _bIgnoreLongPressGestureEvent;
    _Bool _bLongPressingWebContentImage;
    _Bool _hasCurrentOauthWebPageClicked;
    _Bool _isContentShowingSnapShot;
    _Bool _isShowHalfScreenView;
    _Bool _isHalfScreenViewAnimating;
    _Bool _hasSnapShotPageLoadFinished;
    _Bool _bHasTriggerOpenUrl;
    _Bool _bIsReportSchemeWickedAlready;
    _Bool _m_bIsStatusBarBlack;
    _Bool _m_bForceDisableInterativePop;
    _Bool _bIsAlreadyReloadWebviewFromJsapi;
    _Bool _m_bHasFinishLoadOnce;
    _Bool _hasFetchPerformance;
    _Bool _isMovingToOtherScene;
    _Bool _m_bForbidShowMinimizationEntryInMenu;
    _Bool _bWebContentInAppStoreControl;
    _Bool _bIsStartFirstLoadWithHTML;
    _Bool _bDidStartFirstLoadWithHTML;
    _Bool _bShouldDelayShowHTMLloading;
    _Bool _bHasReportPrefetchInfo;
    _Bool _shareUrlWithTextLinkEnable;
    _Bool _reloadFromLoadHtmlString;
    unsigned int _navigationTitleType;
    unsigned int _webFirstGetA8KeyRule;
    unsigned int _m_webviewCurrentMaxFontLevel;
    unsigned int _optimizeOption;
    unsigned int _linkChainOption;
    unsigned int _secCtrlMode;
    NSMutableDictionary *m_extraInfo;
    MMWebViewPluginScheduler *_pluginScheduler;
    NSString *_m_webTaskKey;
    NSString *_m_handoffKey;
    CContact *_brandContact;
    MMWebProgressBar *_m_progressBar;
    UILabel *_m_addressLabel;
    MMWebViewPresetUI *_presetUI;
    MMWebCustomLog *_customLog;
    CDUnknownBlockType _callbackWebViewDidReturn;
    CDUnknownBlockType _callbackWebViewDidFinishLoad;
    CDUnknownBlockType _callbackWebViewDidReceiveNavResp;
    long long _reportId;
    NSMutableArray *_reportFormatDataList;
    unsigned long long _reportBeginTime;
    unsigned long long _reportDesinatedBeginTime;
    NSMutableArray *_visibleStateArray;
    MMTimer *_wepkgLoadingTimer;
    CDUnknownBlockType _interceptCloseBlock;
    NSMutableDictionary *_dictBrandInfo;
    GameWebReporter *_gameWebReporter;
    double _initTimeInterval;
    FixDocumentPresent *_presentProxy;
    UIView *_halfAdapterHeaderView;
    CDUnknownBlockType _halfAdapterCloseAction;
    CDUnknownBlockType _halfAdapterMoreAction;
    MMLoadingView *_snapshotLoadingView;
    MMUIButton *_fullSnapshotBtn;
    CAGradientLayer *_bottomGradientLayer;
    CDUnknownBlockType _finishLoadSnapshotCallback;
    NSString *_snapshotSessionId;
    MMWebViewSpaAuthContext *_currentAuthContext;
    WCWebNavigationEventsStore *_navigationEventStore;
    NSMutableDictionary *_prefetchJsApiPermissionDict;
    MMWebViewPresetUILogic *_presetUIConfigLogic;
    NSString *_preloadDefaultShareTitle;
    NSString *_preloadDefaultShareDescription;
    double _lastContentOffsetY;
    double _lastSecondContentOffsetY;
    long long _unTrackScrollingNum;
    double _beiginContentOffsetY;
    double _navBarShrinkRemainHeight;
    long long _scrollNavBarState;
    MiniRecTransitionController *_minimizationTransitionController;
    MMWebViewFontFloatView *_fontFloatView;
    MMTipsViewController *_universalLinkAlertTipsView;
    unsigned long long _eFullScreenOptions;
    MMWebViewPageInfoModel *_curPageInfoModel;
    UIView *_tailBgView;
    UIImageView *_m_addressBarView;
    UILabel *_m_deeplinkRedirecting;
    MMWebBottomToolBar *_bottomBar;
    MMWebTopBar *_topBar;
    CAGradientLayer *_maskTitleLayer;
    UILabel *_tempLabel;
    MMWebMProfileTitleView *_profileTitleView;
    MMWebTransHelpButton *_transHelpButtonView;
    MMWebLiveTitleView *_liveTitleView;
    TipsView *_dagerTipsView;
    UIView *_customNavigationLoadingView;
    UIView *_navShadowView;
    UIImageView *_snapshotImgView;
    MMWebNaviErrorView *_naviFailView;
    UIView *_invisibleTitleView;
    unsigned long long _longPressingWebContentImageEndTimeStamp;
    WebViewOAuthLogic *_oauthLogic;
    NSString *_currentOAuthUrl;
    UITapGestureRecognizer *_oAuthTapGestureRecognizer;
    MMWebViewController *_snapShotOauthPageVC;
    NSString *_currentOAuthPageTitle;
    NSString *_touristOauthTitleWording;
    UIView *_oauthBottomRemindView;
    UIView *_oauthContainerView;
    UILabel *_oauthRemindTextLabel;
    UIView *_oauthArrowView;
    UIView *_oauthBroseFullContentBtn;
    UIImageView *_warnIconView;
    MMWebviewOAuthRemindHalfScreenView *_halfScreenRemindView;
    id <MMWebViewOAuthSnapShotDelegate> _snapShotPageDelegate;
    MMWebCoreConfig *_webCoreConfig;
    NSString *_jumpAppStoreUrl;
    NSString *_encodeSchemeStr;
    long long _useSchemeCount;
    MMWebViewPerformance *_performance;
    NSURL *_allowOnceUniversalLinkUrl;
    NSURL *_wkLastCommitingNavigationUrl;
    WKNavigation *_blankNavigationAction;
    MMWebviewPrefetchResult *_prefetchResult;
    WebPrefetcherJSApiLogic *_prefetcherJSApiLogic;
    NSString *_a8keyUrlForPageFeature;
    struct CGPoint _lastWebviewClickedPoint;
}

+ (_Bool)isKeyJsapi:(id)arg1;
+ (_Bool)isWebviewOpTypeMinimizeViewIdleTimeRelated:(unsigned int)arg1;
+ (_Bool)isWebviewOpTypeMinimizeRelated:(unsigned int)arg1;
+ (id)dnsQueryQueue;
+ (int)delayTouchesDurantionForLongPressingWebImage;
+ (id)preloadAppendParameter:(id)arg1 toUrl:(id)arg2;
+ (unsigned int)genSnapshotSessionId;
+ (_Bool)shouldInjectVConsole;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *a8keyUrlForPageFeature; // @synthesize a8keyUrlForPageFeature=_a8keyUrlForPageFeature;
@property(nonatomic) unsigned int secCtrlMode; // @synthesize secCtrlMode=_secCtrlMode;
@property(nonatomic) _Bool reloadFromLoadHtmlString; // @synthesize reloadFromLoadHtmlString=_reloadFromLoadHtmlString;
@property(nonatomic) _Bool shareUrlWithTextLinkEnable; // @synthesize shareUrlWithTextLinkEnable=_shareUrlWithTextLinkEnable;
@property(retain, nonatomic) WebPrefetcherJSApiLogic *prefetcherJSApiLogic; // @synthesize prefetcherJSApiLogic=_prefetcherJSApiLogic;
@property(nonatomic) _Bool bHasReportPrefetchInfo; // @synthesize bHasReportPrefetchInfo=_bHasReportPrefetchInfo;
@property(nonatomic) unsigned int linkChainOption; // @synthesize linkChainOption=_linkChainOption;
@property(nonatomic) unsigned int optimizeOption; // @synthesize optimizeOption=_optimizeOption;
@property(retain, nonatomic) MMWebviewPrefetchResult *prefetchResult; // @synthesize prefetchResult=_prefetchResult;
@property(nonatomic) __weak WKNavigation *blankNavigationAction; // @synthesize blankNavigationAction=_blankNavigationAction;
@property(nonatomic) _Bool bShouldDelayShowHTMLloading; // @synthesize bShouldDelayShowHTMLloading=_bShouldDelayShowHTMLloading;
@property(nonatomic) _Bool bDidStartFirstLoadWithHTML; // @synthesize bDidStartFirstLoadWithHTML=_bDidStartFirstLoadWithHTML;
@property(nonatomic) _Bool bIsStartFirstLoadWithHTML; // @synthesize bIsStartFirstLoadWithHTML=_bIsStartFirstLoadWithHTML;
@property(nonatomic) _Bool bWebContentInAppStoreControl; // @synthesize bWebContentInAppStoreControl=_bWebContentInAppStoreControl;
@property(nonatomic) _Bool m_bForbidShowMinimizationEntryInMenu; // @synthesize m_bForbidShowMinimizationEntryInMenu=_m_bForbidShowMinimizationEntryInMenu;
@property(nonatomic) _Bool isMovingToOtherScene; // @synthesize isMovingToOtherScene=_isMovingToOtherScene;
@property(nonatomic) unsigned int m_webviewCurrentMaxFontLevel; // @synthesize m_webviewCurrentMaxFontLevel=_m_webviewCurrentMaxFontLevel;
@property(retain, nonatomic) NSURL *wkLastCommitingNavigationUrl; // @synthesize wkLastCommitingNavigationUrl=_wkLastCommitingNavigationUrl;
@property(retain, nonatomic) NSURL *allowOnceUniversalLinkUrl; // @synthesize allowOnceUniversalLinkUrl=_allowOnceUniversalLinkUrl;
@property(nonatomic) _Bool hasFetchPerformance; // @synthesize hasFetchPerformance=_hasFetchPerformance;
@property(retain, nonatomic) MMWebViewPerformance *performance; // @synthesize performance=_performance;
@property(nonatomic) _Bool m_bHasFinishLoadOnce; // @synthesize m_bHasFinishLoadOnce=_m_bHasFinishLoadOnce;
@property(nonatomic) _Bool bIsAlreadyReloadWebviewFromJsapi; // @synthesize bIsAlreadyReloadWebviewFromJsapi=_bIsAlreadyReloadWebviewFromJsapi;
@property(nonatomic) unsigned int webFirstGetA8KeyRule; // @synthesize webFirstGetA8KeyRule=_webFirstGetA8KeyRule;
@property(nonatomic) _Bool m_bForceDisableInterativePop; // @synthesize m_bForceDisableInterativePop=_m_bForceDisableInterativePop;
@property(nonatomic) _Bool m_bIsStatusBarBlack; // @synthesize m_bIsStatusBarBlack=_m_bIsStatusBarBlack;
@property(nonatomic) _Bool bIsReportSchemeWickedAlready; // @synthesize bIsReportSchemeWickedAlready=_bIsReportSchemeWickedAlready;
@property(nonatomic) _Bool bHasTriggerOpenUrl; // @synthesize bHasTriggerOpenUrl=_bHasTriggerOpenUrl;
@property(nonatomic) long long useSchemeCount; // @synthesize useSchemeCount=_useSchemeCount;
@property(retain, nonatomic) NSString *encodeSchemeStr; // @synthesize encodeSchemeStr=_encodeSchemeStr;
@property(retain, nonatomic) NSString *jumpAppStoreUrl; // @synthesize jumpAppStoreUrl=_jumpAppStoreUrl;
@property(retain, nonatomic) MMWebCoreConfig *webCoreConfig; // @synthesize webCoreConfig=_webCoreConfig;
@property(nonatomic) _Bool hasSnapShotPageLoadFinished; // @synthesize hasSnapShotPageLoadFinished=_hasSnapShotPageLoadFinished;
@property(nonatomic) __weak id <MMWebViewOAuthSnapShotDelegate> snapShotPageDelegate; // @synthesize snapShotPageDelegate=_snapShotPageDelegate;
@property(nonatomic) _Bool isHalfScreenViewAnimating; // @synthesize isHalfScreenViewAnimating=_isHalfScreenViewAnimating;
@property(nonatomic) _Bool isShowHalfScreenView; // @synthesize isShowHalfScreenView=_isShowHalfScreenView;
@property(retain, nonatomic) MMWebviewOAuthRemindHalfScreenView *halfScreenRemindView; // @synthesize halfScreenRemindView=_halfScreenRemindView;
@property(nonatomic) struct CGPoint lastWebviewClickedPoint; // @synthesize lastWebviewClickedPoint=_lastWebviewClickedPoint;
@property(retain, nonatomic) UIImageView *warnIconView; // @synthesize warnIconView=_warnIconView;
@property(retain, nonatomic) UIView *oauthBroseFullContentBtn; // @synthesize oauthBroseFullContentBtn=_oauthBroseFullContentBtn;
@property(retain, nonatomic) UIView *oauthArrowView; // @synthesize oauthArrowView=_oauthArrowView;
@property(retain, nonatomic) UILabel *oauthRemindTextLabel; // @synthesize oauthRemindTextLabel=_oauthRemindTextLabel;
@property(retain, nonatomic) UIView *oauthContainerView; // @synthesize oauthContainerView=_oauthContainerView;
@property(retain, nonatomic) UIView *oauthBottomRemindView; // @synthesize oauthBottomRemindView=_oauthBottomRemindView;
@property(retain, nonatomic) NSString *touristOauthTitleWording; // @synthesize touristOauthTitleWording=_touristOauthTitleWording;
@property(retain, nonatomic) NSString *currentOAuthPageTitle; // @synthesize currentOAuthPageTitle=_currentOAuthPageTitle;
@property(retain, nonatomic) MMWebViewController *snapShotOauthPageVC; // @synthesize snapShotOauthPageVC=_snapShotOauthPageVC;
@property(nonatomic) _Bool isContentShowingSnapShot; // @synthesize isContentShowingSnapShot=_isContentShowingSnapShot;
@property(nonatomic) _Bool hasCurrentOauthWebPageClicked; // @synthesize hasCurrentOauthWebPageClicked=_hasCurrentOauthWebPageClicked;
@property(retain, nonatomic) UITapGestureRecognizer *oAuthTapGestureRecognizer; // @synthesize oAuthTapGestureRecognizer=_oAuthTapGestureRecognizer;
@property(retain, nonatomic) NSString *currentOAuthUrl; // @synthesize currentOAuthUrl=_currentOAuthUrl;
@property(retain, nonatomic) WebViewOAuthLogic *oauthLogic; // @synthesize oauthLogic=_oauthLogic;
@property(nonatomic) unsigned long long longPressingWebContentImageEndTimeStamp; // @synthesize longPressingWebContentImageEndTimeStamp=_longPressingWebContentImageEndTimeStamp;
@property(nonatomic) _Bool bLongPressingWebContentImage; // @synthesize bLongPressingWebContentImage=_bLongPressingWebContentImage;
@property(nonatomic) _Bool bIgnoreLongPressGestureEvent; // @synthesize bIgnoreLongPressGestureEvent=_bIgnoreLongPressGestureEvent;
@property(nonatomic) unsigned int navigationTitleType; // @synthesize navigationTitleType=_navigationTitleType;
@property(retain, nonatomic) UIView *invisibleTitleView; // @synthesize invisibleTitleView=_invisibleTitleView;
@property(nonatomic) _Bool isLockDownModeOn; // @synthesize isLockDownModeOn=_isLockDownModeOn;
@property(retain, nonatomic) MMWebNaviErrorView *naviFailView; // @synthesize naviFailView=_naviFailView;
@property(retain, nonatomic) UIImageView *snapshotImgView; // @synthesize snapshotImgView=_snapshotImgView;
@property(retain, nonatomic) UIView *navShadowView; // @synthesize navShadowView=_navShadowView;
@property(nonatomic) _Bool unableAutoSetStatusBar; // @synthesize unableAutoSetStatusBar=_unableAutoSetStatusBar;
@property(nonatomic) _Bool canSetMPTitleByOut; // @synthesize canSetMPTitleByOut=_canSetMPTitleByOut;
@property(nonatomic) __weak UIView *customNavigationLoadingView; // @synthesize customNavigationLoadingView=_customNavigationLoadingView;
@property(nonatomic) __weak TipsView *dagerTipsView; // @synthesize dagerTipsView=_dagerTipsView;
@property(retain, nonatomic) MMWebLiveTitleView *liveTitleView; // @synthesize liveTitleView=_liveTitleView;
@property(retain, nonatomic) MMWebTransHelpButton *transHelpButtonView; // @synthesize transHelpButtonView=_transHelpButtonView;
@property(retain, nonatomic) MMWebMProfileTitleView *profileTitleView; // @synthesize profileTitleView=_profileTitleView;
@property(retain, nonatomic) UILabel *tempLabel; // @synthesize tempLabel=_tempLabel;
@property(retain, nonatomic) CAGradientLayer *maskTitleLayer; // @synthesize maskTitleLayer=_maskTitleLayer;
@property(nonatomic) _Bool shouldShowBottom; // @synthesize shouldShowBottom=_shouldShowBottom;
@property(retain, nonatomic) MMWebTopBar *topBar; // @synthesize topBar=_topBar;
@property(retain, nonatomic) MMWebBottomToolBar *bottomBar; // @synthesize bottomBar=_bottomBar;
@property(retain, nonatomic) UILabel *m_deeplinkRedirecting; // @synthesize m_deeplinkRedirecting=_m_deeplinkRedirecting;
@property(retain, nonatomic) UIImageView *m_addressBarView; // @synthesize m_addressBarView=_m_addressBarView;
@property(retain, nonatomic) UIView *tailBgView; // @synthesize tailBgView=_tailBgView;
@property(nonatomic) _Bool m_isDisableShareMenu; // @synthesize m_isDisableShareMenu=_m_isDisableShareMenu;
@property(nonatomic) _Bool bIsForceShowCloseButton; // @synthesize bIsForceShowCloseButton=_bIsForceShowCloseButton;
@property(retain, nonatomic) MMWebViewPageInfoModel *curPageInfoModel; // @synthesize curPageInfoModel=_curPageInfoModel;
@property(nonatomic) unsigned long long eFullScreenOptions; // @synthesize eFullScreenOptions=_eFullScreenOptions;
@property(nonatomic) _Bool isMarkedForDeallocReleaseTrancation; // @synthesize isMarkedForDeallocReleaseTrancation=_isMarkedForDeallocReleaseTrancation;
@property(nonatomic) __weak MMTipsViewController *universalLinkAlertTipsView; // @synthesize universalLinkAlertTipsView=_universalLinkAlertTipsView;
@property(nonatomic) __weak MMWebViewFontFloatView *fontFloatView; // @synthesize fontFloatView=_fontFloatView;
@property(retain, nonatomic) MiniRecTransitionController *minimizationTransitionController; // @synthesize minimizationTransitionController=_minimizationTransitionController;
@property(nonatomic) long long scrollNavBarState; // @synthesize scrollNavBarState=_scrollNavBarState;
@property(nonatomic) double navBarShrinkRemainHeight; // @synthesize navBarShrinkRemainHeight=_navBarShrinkRemainHeight;
@property(nonatomic) double beiginContentOffsetY; // @synthesize beiginContentOffsetY=_beiginContentOffsetY;
@property(nonatomic) long long unTrackScrollingNum; // @synthesize unTrackScrollingNum=_unTrackScrollingNum;
@property(nonatomic) double lastSecondContentOffsetY; // @synthesize lastSecondContentOffsetY=_lastSecondContentOffsetY;
@property(nonatomic) double lastContentOffsetY; // @synthesize lastContentOffsetY=_lastContentOffsetY;
@property(nonatomic) _Bool shouldHandleShrink; // @synthesize shouldHandleShrink=_shouldHandleShrink;
@property(copy, nonatomic) NSString *preloadDefaultShareDescription; // @synthesize preloadDefaultShareDescription=_preloadDefaultShareDescription;
@property(copy, nonatomic) NSString *preloadDefaultShareTitle; // @synthesize preloadDefaultShareTitle=_preloadDefaultShareTitle;
@property(nonatomic) _Bool hasPreloadLoadFail; // @synthesize hasPreloadLoadFail=_hasPreloadLoadFail;
@property(retain, nonatomic) MMWebViewPresetUILogic *presetUIConfigLogic; // @synthesize presetUIConfigLogic=_presetUIConfigLogic;
@property(retain, nonatomic) NSMutableDictionary *prefetchJsApiPermissionDict; // @synthesize prefetchJsApiPermissionDict=_prefetchJsApiPermissionDict;
@property(retain, nonatomic) WCWebNavigationEventsStore *navigationEventStore; // @synthesize navigationEventStore=_navigationEventStore;
@property(nonatomic) _Bool bUseOneBridge; // @synthesize bUseOneBridge=_bUseOneBridge;
@property(nonatomic) _Bool bBridgedAndAuthedInNewMode; // @synthesize bBridgedAndAuthedInNewMode=_bBridgedAndAuthedInNewMode;
@property(retain, nonatomic) MMWebViewSpaAuthContext *currentAuthContext; // @synthesize currentAuthContext=_currentAuthContext;
@property(copy, nonatomic) NSString *snapshotSessionId; // @synthesize snapshotSessionId=_snapshotSessionId;
@property(copy, nonatomic) CDUnknownBlockType finishLoadSnapshotCallback; // @synthesize finishLoadSnapshotCallback=_finishLoadSnapshotCallback;
@property(nonatomic) _Bool terminatedFlagForSnapshot; // @synthesize terminatedFlagForSnapshot=_terminatedFlagForSnapshot;
@property(retain, nonatomic) CAGradientLayer *bottomGradientLayer; // @synthesize bottomGradientLayer=_bottomGradientLayer;
@property(retain, nonatomic) MMUIButton *fullSnapshotBtn; // @synthesize fullSnapshotBtn=_fullSnapshotBtn;
@property(retain, nonatomic) MMLoadingView *snapshotLoadingView; // @synthesize snapshotLoadingView=_snapshotLoadingView;
@property(copy, nonatomic) CDUnknownBlockType halfAdapterMoreAction; // @synthesize halfAdapterMoreAction=_halfAdapterMoreAction;
@property(copy, nonatomic) CDUnknownBlockType halfAdapterCloseAction; // @synthesize halfAdapterCloseAction=_halfAdapterCloseAction;
@property(retain, nonatomic) UIView *halfAdapterHeaderView; // @synthesize halfAdapterHeaderView=_halfAdapterHeaderView;
@property(retain, nonatomic) FixDocumentPresent *presentProxy; // @synthesize presentProxy=_presentProxy;
@property(nonatomic) double initTimeInterval; // @synthesize initTimeInterval=_initTimeInterval;
@property(retain, nonatomic) GameWebReporter *gameWebReporter; // @synthesize gameWebReporter=_gameWebReporter;
@property(retain, nonatomic) NSMutableDictionary *dictBrandInfo; // @synthesize dictBrandInfo=_dictBrandInfo;
@property(nonatomic) _Bool isPreloadEnded; // @synthesize isPreloadEnded=_isPreloadEnded;
@property(copy, nonatomic) CDUnknownBlockType interceptCloseBlock; // @synthesize interceptCloseBlock=_interceptCloseBlock;
@property(retain, nonatomic) MMTimer *wepkgLoadingTimer; // @synthesize wepkgLoadingTimer=_wepkgLoadingTimer;
@property(retain, nonatomic) NSMutableArray *visibleStateArray; // @synthesize visibleStateArray=_visibleStateArray;
@property(nonatomic) unsigned long long reportDesinatedBeginTime; // @synthesize reportDesinatedBeginTime=_reportDesinatedBeginTime;
@property(nonatomic) unsigned long long reportBeginTime; // @synthesize reportBeginTime=_reportBeginTime;
@property(retain, nonatomic) NSMutableArray *reportFormatDataList; // @synthesize reportFormatDataList=_reportFormatDataList;
@property(nonatomic) _Bool reportInstantly; // @synthesize reportInstantly=_reportInstantly;
@property(nonatomic) long long reportId; // @synthesize reportId=_reportId;
@property(copy, nonatomic) CDUnknownBlockType callbackWebViewDidReceiveNavResp; // @synthesize callbackWebViewDidReceiveNavResp=_callbackWebViewDidReceiveNavResp;
@property(copy, nonatomic) CDUnknownBlockType callbackWebViewDidFinishLoad; // @synthesize callbackWebViewDidFinishLoad=_callbackWebViewDidFinishLoad;
@property(copy, nonatomic) CDUnknownBlockType callbackWebViewDidReturn; // @synthesize callbackWebViewDidReturn=_callbackWebViewDidReturn;
@property(retain, nonatomic) MMWebCustomLog *customLog; // @synthesize customLog=_customLog;
@property(retain, nonatomic) MMWebViewPresetUI *presetUI; // @synthesize presetUI=_presetUI;
@property(nonatomic) _Bool m_bIsJsapiUploadVideoUploading; // @synthesize m_bIsJsapiUploadVideoUploading=_m_bIsJsapiUploadVideoUploading;
@property(nonatomic) _Bool m_isLanscape; // @synthesize m_isLanscape=_m_isLanscape;
@property(nonatomic) _Bool m_bIsRestrictAppstore; // @synthesize m_bIsRestrictAppstore=_m_bIsRestrictAppstore;
@property(nonatomic) _Bool m_bIsDelayPushWebView; // @synthesize m_bIsDelayPushWebView=_m_bIsDelayPushWebView;
@property(retain, nonatomic) UILabel *m_addressLabel; // @synthesize m_addressLabel=_m_addressLabel;
@property(retain, nonatomic) MMWebProgressBar *m_progressBar; // @synthesize m_progressBar=_m_progressBar;
@property(nonatomic) _Bool m_bUserHasClickLink; // @synthesize m_bUserHasClickLink=_m_bUserHasClickLink;
@property(retain, nonatomic) CContact *brandContact; // @synthesize brandContact=_brandContact;
@property(nonatomic) _Bool m_bDeepLink; // @synthesize m_bDeepLink=_m_bDeepLink;
@property(copy, nonatomic) NSString *m_handoffKey; // @synthesize m_handoffKey=_m_handoffKey;
@property(copy, nonatomic) NSString *m_webTaskKey; // @synthesize m_webTaskKey=_m_webTaskKey;
@property(retain, nonatomic) MMWebViewPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
@property(nonatomic) _Bool m_bPreloadInMem; // @synthesize m_bPreloadInMem;
@property(nonatomic) _Bool m_bFullScreen; // @synthesize m_bFullScreen;
@property(nonatomic) _Bool m_bReadingArticleBanner; // @synthesize m_bReadingArticleBanner;
@property(nonatomic) _Bool m_bShowOnNewMainFrameBanner; // @synthesize m_bShowOnNewMainFrameBanner;
@property(nonatomic) _Bool m_bIsPortraitBeforeOpenUrl; // @synthesize m_bIsPortraitBeforeOpenUrl;
@property(readonly, nonatomic) _Bool m_isPreviewing; // @synthesize m_isPreviewing;
@property(readonly, nonatomic) NSString *m_initUrl; // @synthesize m_initUrl;
@property(retain, nonatomic) NSMutableDictionary *m_extraInfo; // @synthesize m_extraInfo;
@property(readonly, nonatomic) WebViewSanboxSessionLogic *m_sanboxLogicImpl; // @synthesize m_sanboxLogicImpl;
@property(readonly, nonatomic) WebViewA8KeyLogicImpl *m_a8KeyLogicImpl; // @synthesize m_a8KeyLogicImpl;
@property(readonly, nonatomic) WebViewJSLogicImpl *m_jsLogicImpl; // @synthesize m_jsLogicImpl;
@property(nonatomic) __weak id <MMWebViewDelegate> m_delegate; // @synthesize m_delegate;
@property(retain, nonatomic) WKWebView<YYWebViewInterface> *webView; // @synthesize webView;
- (void)refreshWAWxMaterialAppInfo:(id)arg1;
- (void)registerYReportSdk;
- (id)fileSizeStrForContentLength:(unsigned long long)arg1;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)onLoadModePreloadClose;
- (void)onLoadModePreloadOpen;
- (void)onLoadModeChangeFromOldValue:(unsigned long long)arg1 toNewValue:(unsigned long long)arg2;
- (unsigned long long)currentLoadMode;
- (void)changeLoadMode:(unsigned long long)arg1;
- (id)loadModeNameWithValue:(unsigned long long)arg1;
- (_Bool)isLoadModeManual;
- (_Bool)isLoadModePreload;
- (_Bool)isCurrentUrlEqualToFirstA8KeyRespUrl;
- (id)getCurrentOfflinePageA8KeyData;
- (id)tagForCurrentPage;
- (void)forceShowCloseButton;
- (void)onSendReadyEvent;
- (void)delayCheckExtractPageFeatureFlag;
- (_Bool)shouldHandleRedirectUrl:(id)arg1 isIFrame:(_Bool)arg2;
- (id)replaceInitUrlInSpecificCondition:(id)arg1 extraInfo:(id *)arg2;
- (_Bool)allowImagePreview;
- (void)enableWebContentImageLongPressingTag;
- (void)interceptClose;
- (_Bool)shouldInterceptClose;
- (void)configInterceptClose:(CDUnknownBlockType)arg1 alwayIntercept:(_Bool)arg2;
- (void)configInterceptClose:(CDUnknownBlockType)arg1;
- (void)setNotifyWillReturnBlock:(CDUnknownBlockType)arg1;
- (void)setDelayLoadActionBlock:(CDUnknownBlockType)arg1;
- (void)tryStartOutlinkDetect;
- (unsigned char)getPermissionWithName:(id)arg1;
- (void)sendGetA8KeyEvent:(id)arg1;
- (void)removeSendAppMessageJsapiTempAllowAuthority;
- (void)sendJsEvent:(id)arg1 params:(id)arg2 invokeContext:(id)arg3;
- (void)sendEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)doJsApiInitEvent;
- (void)setCurrentUrl:(id)arg1;
- (unsigned int)getCurrentWebRequestId;
- (unsigned int)getCurrentScene;
- (_Bool)isContentOriginal;
- (_Bool)isPageDidLoad;
- (id)getCurrentContentContextID;
- (id)getCurrentUrl;
- (void)stopForcedRotationToPortrait;
- (void)startForcedRotationToPortrait;
- (id)getWebViewTimeProfileData;
- (void)permitTempAccessOfJSApi:(id)arg1;
- (void)shareToFB;
- (void)immediateDismissWebViewController;
- (void)dismissWebViewController;
- (void)disMissSelf;
- (void)setDisableWebAlertView:(_Bool)arg1;
- (_Bool)isMenuAction:(id)arg1;
- (id)getRequestingOrCurrentUrl;
- (void)onSelectFont:(unsigned int)arg1;
- (_Bool)shoudDelaySetFont;
- (void)resetLockOrientation;
- (unsigned long long)lockOrientation;
- (unsigned long long)supportedInterfaceOrientations;
- (void)forceRotateToOrientation:(long long)arg1 lock:(_Bool)arg2;
- (_Bool)forcedRotationToPortrait;
- (void)stopWepkgLoadingView;
- (void)delaySetFontsWithSize:(id)arg1;
- (id)getUrlPermission:(id)arg1;
- (_Bool)hasUrlPermission:(id)arg1;
- (id)getLastUrl;
- (id)getRoutUrls;
- (unsigned int)GetGeneralBitSetForUrl:(id)arg1;
- (_Bool)IsBitsetSet:(unsigned int)arg1 forUrl:(id)arg2;
- (_Bool)allowShowAppMsgTailName;
- (_Bool)allowCallJsapiBeforeLoad;
- (_Bool)isBlockShareUrlToTextLink;
- (_Bool)isUnderRiskControl;
- (_Bool)allowFayByImage;
- (_Bool)allowShareByImage;
- (_Bool)allowScanQRCodeByImage;
- (unsigned int)GetPermissionBitSet3;
- (unsigned int)GetPermissionBitSet2;
- (unsigned int)GetPermissionBitSet;
- (unsigned long long)GetDeepLinkBitSet;
@property(readonly, nonatomic) _Bool m_bOfflinePage;
- (id)getOutlinkOriginInitUrlWhenBlockedOnLimitedMode;
- (id)getInitUrl;
- (id)getShareUrl;
- (id)getCurrentAppId;
- (void)shouldShowGoBackBtn;
- (void)setSwipeBackInteractiveEnable:(_Bool)arg1;
- (void)setPublisher:(id)arg1;
- (void)setTitle:(id)arg1;
- (_Bool)isViewDidAppear;
- (id)extraInfo;
- (void)setExtraInfoValue:(id)arg1 forKey:(id)arg2;
- (void)setDisableShareMenu:(_Bool)arg1;
- (void)setAutoSetTitle:(_Bool)arg1;
- (void)setupA8keyWebComptNameList:(id)arg1 appId:(id)arg2 bNotCheckIfUrlMatchToSessionUrl:(_Bool)arg3;
- (void)startupPreVerifyJSAPI:(id)arg1 failHandleBlock:(CDUnknownBlockType)arg2;
- (void)onChangeCurrentContext;
- (void)onWindowFocusChanged:(_Bool)arg1;
- (void)OnClose;
- (void)backToAppIfNeed;
- (void)OnReturn;
- (void)doBackActionCleanWithType:(_Bool)arg1;
- (void)onClickFailView;
- (void)done:(id)arg1;
- (void)restoreWebViewToSubViewStack;
- (_Bool)removeAdvanceRenderWebViewIfNeed;
- (void)advanceRenderWebViewOnVisibleView:(id)arg1;
- (void)notifyToJSBridgeVisibilityChanged:(_Bool)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)manualLoad;
- (void)goToHtml:(id)arg1 withURL:(id)arg2;
- (void)goToURL:(id)arg1;
- (void)goForward;
- (void)goBack;
- (void)stop;
- (void)reloadPreloadPageUrlOnClickFailView;
- (_Bool)reloadPreloadPageUrl;
- (void)reload;
- (void)StartLoadWeb;
- (_Bool)shouldInteractivePop;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)didReceivedWindowDidBecomeHiddenNotification:(id)arg1;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (void)keyboardDidShow:(id)arg1;
- (void)onMenuControllerDidShow:(id)arg1;
- (void)onMenuControllerDidHide:(id)arg1;
- (void)removeNotificationAndObservers;
- (void)initNotificationAndObservers;
- (id)currentContextPageInfo;
- (unsigned int)getA8KeyRequestId;
- (void)onGotWebComptData:(id)arg1 forAppId:(id)arg2 forUrl:(id)arg3 forContext:(id)arg4;
- (void)kvReportJSCall:(id)arg1 withParam:(id)arg2;
- (id)getJSFunctionDef:(id)arg1;
- (void)onSwitchSecCtrlMode:(unsigned int)arg1;
- (void)onReceivedExtractPageFeatureFlagWithUrl:(id)arg1;
- (void)onSwitchToShareTextControl:(id)arg1;
- (_Bool)handleA8keyVerifyPrefetchInfo:(id)arg1 url:(id)arg2;
- (_Bool)canStartGameCenterRender;
- (_Bool)canUseOfflineWepkg;
- (_Bool)isGameCenterDomain;
- (_Bool)isA8KeyGameCenterScene;
- (_Bool)isGameCenterSceneOld;
- (_Bool)needKeepA8KeyResult;
- (unsigned int)a8keyWebviewFontScale;
- (void)onShowAutoOAuthViewWithSchemeUrl:(id)arg1 Success:(_Bool)arg2 Wording:(id)arg3 HeadImgUrl:(id)arg4;
- (void)onStartGetA8Key:(id)arg1;
- (void)saveJSAPIPermissionsInOfflineCache:(id)arg1 url:(id)arg2;
- (void)saveJSAPIPermissions:(id)arg1 url:(id)arg2;
- (void)saveJSAPIAuthInfo:(id)arg1;
- (void)onJumpToEmoticonDetailViewController:(id)arg1;
- (void)onJumpToViewController:(id)arg1;
- (void)onJumpToAppStoreControlWithUrl:(id)arg1;
- (void)onJumpToSafariWithUrl:(id)arg1;
- (void)onUpdatedPermisson;
- (void)onGetA8Key:(_Bool)arg1 ReqUrl:(id)arg2 Reason:(int)arg3;
- (id)getLocalHttpHeadersForA8KeyUrl:(id)arg1;
- (void)onGetA8KeyBeforeGoToUrl:(id)arg1 success:(_Bool)arg2 reason:(int)arg3;
- (void)onGetA8KeyFinishWithRequestUrl:(id)arg1 response:(id)arg2 reason:(int)arg3;
- (void)onGetA8KeyWithRequestUrl:(id)arg1 fullUrl:(id)arg2 header:(id)arg3;
- (id)webviewController;
- (void)voiceoverStatusChanged;
- (void)sendOnScreenShotEvent;
- (void)didTakeScreenshot;
- (void)handleMonitorMessage:(id)arg1 params:(id)arg2;
- (void)onCopy:(id)arg1;
- (_Bool)isTempAccessOfJSApiPermitted:(id)arg1;
- (void)onPageStateChange:(id)arg1;
- (void)changeCurrentAndWebViewUrl:(id)arg1;
- (id)getAuthorizedMonitorEvents:(id)arg1;
- (void)processJSAPICall:(id)arg1 funcDef:(id)arg2 funcBlock:(CDUnknownBlockType)arg3 failHandleBlock:(CDUnknownBlockType)arg4 apiPermission:(unsigned char)arg5;
- (unsigned char)getJSApiPermission:(id)arg1;
- (id)currentWebviewEnvInfo;
- (id)currentPermissionKeyUrlString;
- (_Bool)getJSApiEnvCompatibility:(id)arg1;
- (_Bool)getJSApiFrequncyCheckResult:(id)arg1;
- (_Bool)isGetingA8Key;
- (_Bool)isUseAllOneWXJS;
- (_Bool)isBridgedInNewMode;
- (id)getCurrentWebviewViewController;
- (void)onWebViewDidReturn;
- (void)willDisappear;
- (void)setupDeepLinkConfig;
- (id)getVCWithDeepLinkName:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewWillPop:(_Bool)arg1;
- (void)viewWillPresent:(_Bool)arg1;
- (void)viewDidPush:(_Bool)arg1;
- (void)viewWillPush:(_Bool)arg1;
- (void)viewDidBeDismissed:(_Bool)arg1;
- (void)viewWillBeDismissed:(_Bool)arg1;
- (void)viewDidBePoped:(_Bool)arg1;
- (void)viewWillBePoped:(_Bool)arg1;
- (void)viewWillBePushOrPresent:(_Bool)arg1;
- (void)viewWillBePushed:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didAppear;
- (void)willAppear;
- (void)viewDidAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;
- (_Bool)isDisableWebviewContextMenu;
- (id)customURLSchemeHandlerDictionary;
- (void)webView:(id)arg1 navigationResponse:(id)arg2 didStartDownload:(id)arg3;
- (void)webView:(id)arg1 navigationAction:(id)arg2 didStartDownload:(id)arg3;
- (id)webviewCustomScriptReplyHandlerForConfiguration;
- (id)webviewCustomScriptHandlerForConfiguration;
- (id)webViewUserScriptsForConfiguration;
- (_Bool)isGamePreloadInMen;
- (id)webViewCookiesForConfiguration;
- (_Bool)checkShouldHandlePromptMessage:(id)arg1 defaultText:(id)arg2 sourceFrame:(id)arg3 resultMsg:(id *)arg4;
- (id)getWXHookScriptStr;
- (id)getPreInjectScriptStr;
- (_Bool)allowsAutoMediaPlay;
- (_Bool)allowsInlineMediaPlay;
- (void)openFileDetailViewCtrlWithFileURL:(id)arg1 filePath:(id)arg2 fileName:(id)arg3 fileExtName:(id)arg4 contentLength:(unsigned long long)arg5;
- (void)askIfDownloadWithFileURL:(id)arg1 fileName:(id)arg2 fileExtName:(id)arg3 contentLength:(unsigned long long)arg4;
- (void)webViewDidReceiveNavigationResponseAndDecideResponsePolicy:(id)arg1 andCompletion:(CDUnknownBlockType)arg2;
- (void)webViewDidReceiveNavigationResponse:(id)arg1 andGetIsCancelNavigation:(_Bool *)arg2;
- (void)webviewDidReceiveScriptMessage:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)webviewDidReceiveScriptMessage:(id)arg1 handler:(id)arg2 rawMessage:(id)arg3;
- (_Bool)ignoreReloadWhenWebviewTerminate;
- (void)webViewContentProcessDidTerminate:(id)arg1;
- (void)webViewOnBeforeReload:(id)arg1;
- (void)webView:(id)arg1 onBeforeLoadRequest:(id)arg2;
- (_Bool)shouldHandleWebView:(id)arg1 didFailLoadWithError:(id)arg2 navigation:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 navigation:(id)arg3;
- (void)recordArrRouteUrl:(id)arg1;
- (_Bool)shouldHandleWebViewDidFinishLoad:(id)arg1 navigation:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1 navigation:(id)arg2;
- (void)fetchDocumentTimeIfNeed;
- (void)webViewDidReceiveServerRedirect:(id)arg1 navigation:(id)arg2;
- (_Bool)shouldHandleWebViewDidCommitLoad:(id)arg1 navigation:(id)arg2;
- (void)webViewDidCommitLoad:(id)arg1 navigation:(id)arg2;
- (_Bool)shouldHandleWebViewDidStartLoad:(id)arg1 navigation:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1 navigation:(id)arg2;
- (_Bool)tryHandleHttpRefer:(id)arg1;
- (_Bool)trySyncGetA8KeyRequest:(id)arg1;
- (_Bool)shouldStartLoadWithoutHandleInMainFlow:(id)arg1 webView:(id)arg2 navigationType:(long long)arg3 isMainFrame:(_Bool)arg4;
- (long long)webView:(id)arg1 decidePolicyWithRequest:(id)arg2 navigationType:(long long)arg3 isMainFrame:(_Bool)arg4 navigationAction:(id)arg5;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 isMainFrame:(_Bool)arg4 navigationAction:(id)arg5;
- (id)__permissionKeyStringFromReqeust:(id)arg1;
- (void)removeInitExtraInfoKeysAfterInitWebView;
- (void)initWebViewTaskKey;
- (void)initCustomHandler:(id)arg1;
- (void)initJsInitInfo:(id)arg1;
- (void)initWebView:(id)arg1;
- (void)initWebViewA8key:(id)arg1;
- (void)initCustomParams:(id)arg1;
- (void)recordTimeWhenInitStart;
- (id)getFastLoadInitURLAndExtraInfoWithUrl:(id)arg1 extraInfo:(id *)arg2 webPrefetcherId:(id)arg3;
- (void)internalInitWithUrl:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3 presetUI:(id)arg4;
- (id)initWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3 presetUI:(id)arg4;
- (id)initWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3 presetUI:(id)arg4 config:(id)arg5 delegate:(id)arg6;
- (id)initWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (id)initWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3;
- (void)promptForAuthInfo:(id)arg1;
- (void)checkApiAuthorization:(id)arg1;
- (void)clearWebviewCacheAndCookie:(_Bool)arg1;
- (void)cleanWebCacheFromReloadMenuAction;
- (void)doCleanCookiesForUrl:(id)arg1;
- (void)addNavigationEventAction;
- (void)addEventActionForWebEvents;
- (void)accessDeepLink:(id)arg1 Url:(id)arg2;
- (void)jumpDeepLink:(id)arg1;
- (_Bool)canAccessDeepLink:(id)arg1 Url:(id)arg2;
- (void)setEnterpriseConnectorLogic:(id)arg1;
- (id)getEnterpriseConnectorLogic;
- (void)log3DTouchWebViewActionFeatureWithOpType:(id)arg1;
- (id)previewActionItems;
- (id)initForwardPreviewWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3;
- (void)setPreviewFrame:(struct CGRect)arg1;
- (void)setPreviewTopBar:(id)arg1;
- (id)initForPreviewWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3;
- (void)commitViewController;
- (_Bool)canPop;
@property(nonatomic) __weak UIView *previewSourceView;
@property(nonatomic) __weak UIViewController *previewFromController;
- (void)hideAllNonBaseMenuItem;
- (void)showAllNonBaseMenuItem;
- (void)showMenuitemBatch:(id)arg1;
- (void)hideMenuitemBatch:(id)arg1;
- (void)showJSLog:(id)arg1;
- (id)getMMWebViewController;
- (_Bool)isJSApiFuncPermissionValid:(long long)arg1;
- (id)getCurrentWebViewController;
- (void)checkInjectPrefercherBridge;
- (void)injectConsolePrefetchInfo;
- (void)onShowHTMLLoadingTimeout;
- (void)delayShowHTMLLoadingIfNeeded;
- (void)clearFirstLoadWithHTMLStatus;
- (_Bool)private_handleA8keyVerifyPrefetchInfo:(id)arg1 url:(id)arg2;
- (void)loadPrefetchHTMLString;
- (void)onCheckLoadPrefetchHTMLWhenWebviewURLChange;
- (void)onPrefetchBlankPageDidFailLoadWithError:(id)arg1 error:(id)arg2 navigation:(id)arg3;
- (void)onPrefetchBlankPageDidFinishLoad:(id)arg1 navigation:(id)arg2;
- (void)onPrefetchBlankPageDidCommitLoad:(id)arg1 navigation:(id)arg2;
- (_Bool)isPrefetchBlankWebviewNavigation:(id)arg1;
- (void)onPrefetchBlankPageDidStartLoad:(id)arg1 navigation:(id)arg2;
- (void)onPrefetchBlankPageShouldStartLoad:(id)arg1 request:(id)arg2 isMainFrame:(_Bool)arg3;
- (_Bool)isUrlEqualToPrefetchBlankPlaceHolderUrl:(id)arg1;
- (void)startLoadPrefetchBlankRequest;
- (_Bool)shouldStartLoadPrefetchBlankRequest;
- (_Bool)isStartFirstLoadWithHTML;
- (void)checkAndLoadPrefetchResult;
- (_Bool)isPrefetchEnable;
- (_Bool)isiPadQRCodeAuthorizeScene;
- (void)reportKeyJsapiCall:(id)arg1 initUrl:(id)arg2 currentUrl:(id)arg3 isSuccess:(int)arg4;
- (void)reportFailToLoadCachePage;
- (void)reportLoadPageTime:(double)arg1 url:(id)arg2;
- (void)report21940WhenShouldStarLoadWithNavitionAction:(id)arg1;
- (void)reportDidFailLoadAndShowFailView:(id)arg1 errorCode:(long long)arg2 errorDesc:(id)arg3;
- (void)reportDidFailLoadWebView:(id)arg1 loadingUrl:(id)arg2 error:(id)arg3;
- (void)reportDidFinishedLoadWebView:(id)arg1 loadingUrl:(id)arg2;
- (void)reportShouldStartHttpsUrl:(id)arg1;
- (void)reportJSCall:(id)arg1 withParam:(id)arg2;
- (void)tryReportMonitorMessage:(id)arg1 params:(id)arg2;
- (void)reportCopyContent:(id)arg1;
- (void)reportIDKeyForWKWebViewTerminateBackground;
- (void)reportIDKeyForWKWebViewTerminateForceground;
- (void)reportIDKeyForLoadFinish:(long long)arg1;
- (void)reportIDKeyForSystemError:(long long)arg1;
- (void)reportIDKeyForAllRequest;
- (void)logFeature22999WithNavActionType:(long long)arg1;
- (void)logFeature11576WithOpType:(unsigned int)arg1;
- (void)onLongPressOnWebview:(id)arg1;
- (void)enableLongPressDetect;
- (id)checkAndGetErrorMsgForGifImageData:(id)arg1;
- (id)mpPagePlugin;
- (void)closeMPWowRecommendCommentEditView;
- (void)destoryCommentEditView;
- (void)closeMPCommentEditView;
- (_Bool)isShowMPWowRecommendCommentEditView;
- (_Bool)isShowMPCommentEditView;
- (void)onDoneForwardForForwardView:(id)arg1;
- (void)OnForwardMessageSend:(id)arg1;
- (void)relayoutScrollSheet;
- (void)clickRFItemCallBack:(id)arg1;
- (void)updateRecentForwardArea;
- (_Bool)shouldShowRecentlyForwardView;
- (void)onMenuHeaderViewClick;
@property(copy, nonatomic) NSString *currentHaokanURL;
@property(nonatomic) _Bool shouldShowHaokanButton;
@property(nonatomic) _Bool isAddedToGoodLook;
- (_Bool)shouldShowSendToGoodLookItem;
- (_Bool)shouldShowCustomMenuAction;
- (_Bool)shoudlDisableMenuItem:(id)arg1;
- (_Bool)isAllowedToUseMenuItem:(id)arg1;
- (_Bool)isShowMenuItem:(id)arg1 ignorePermissionCheck:(_Bool)arg2;
- (_Bool)isShowMenuItem:(id)arg1;
- (_Bool)isAuthMonitor:(id)arg1 event:(id)arg2;
- (void)reportWhenClickMenuWithActionType:(unsigned long long)arg1;
- (void)showEnterpriseConnectResult:(id)arg1;
- (void)onEnterpriseConnectFail:(id)arg1;
- (void)onEnterpriseConnectSucceed:(id)arg1;
- (void)onEnterpriseSelectChat:(id)arg1 brand:(id)arg2 logic:(id)arg3;
- (void)onEnterpriseSelectBrand:(id)arg1 logic:(id)arg2;
- (void)onWebViewEditTag;
- (void)onWebViewDelete;
- (void)actionSheetCancel:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)scrollActionSheetWillDismiss:(id)arg1;
- (void)scrollActionSheetDidAppeared:(id)arg1;
- (void)scrollActionSheetDidScroll:(id)arg1;
- (void)logFeature11577WithOpType:(unsigned long long)arg1;
- (void)didSelecteMenuItem:(id)arg1;
- (void)scrollActionSheet:(id)arg1 clickCustomBtn:(id)arg2;
- (void)scrollActionSheet:(id)arg1 didClickUrl:(id)arg2;
- (void)scrollActionSheet:(id)arg1 didSelecteItem:(id)arg2;
- (id)setupRow1;
- (id)setupRow2WithMenuConfig:(id)arg1;
- (id)setupIconActionSheetCellsWithMenuConfig:(id)arg1;
- (void)addWebviewSearchButtonWithArray:(id)arg1;
- (id)setupOAuthSnapShotActionSheet;
- (id)setupHalfIconActionSheetWithConfig:(id)arg1;
- (id)setupPreShowIconActionSheetWithConfig:(id)arg1;
- (void)setupCustomMenuItem:(id)arg1 config:(id)arg2;
- (void)AddMemuData:(id)arg1 toRow:(id)arg2;
- (void)setupCustomMenuForJD:(id)arg1;
- (void)addJSCustomMenuData:(id)arg1;
- (void)showCustomActionSheet:(id)arg1;
- (void)showH5GameCustomMenu:(id)arg1 OrientationLocked:(_Bool)arg2;
- (_Bool)isMenuShowing;
- (_Bool)shouldShowMenuMpInfoHeaderView;
- (void)updateMenuHeaderArea;
- (void)showMenuWithScene:(unsigned long long)arg1 config:(id)arg2 anchorView:(id)arg3;
- (void)onSwitchScene:(id)arg1;
- (void)onOperate:(id)arg1;
- (void)reloadMenuActionSheetWithForceOption:(_Bool)arg1;
- (void)reloadMenuActionSheetIfNeeded;
- (id)buildMenuItems:(unsigned long long *)arg1 menuType:(unsigned long long *)arg2 config:(id)arg3;
- (_Bool)isCanShowAllMenus;
- (_Bool)isShowHalfMenus;
- (_Bool)isGettingPermission;
- (void)addMultiSceneButtonToMenuArray:(id)arg1;
- (_Bool)addWAOpenWxMaterialButton:(id)arg1;
- (void)tryAddWAOpenWxMaterialButtonWhenPopMenu:(_Bool)arg1;
- (void)addH5GameExtraButton:(id)arg1;
- (void)addViewBrandContactButtonWithArrary:(id)arg1;
- (void)addReadArticleButtonWithArrary:(id)arg1;
- (void)addMinimizationButtonWithArray:(id)arg1;
- (void)addCancleOrBackToNewMainFrameButtonWithArrary:(id)arg1;
- (void)addQQBrowserButtonWithArrary:(id)arg1;
- (void)addShareToDeviceButtonWithArray:(id)arg1;
- (void)addShareToQZoneButtonWithArray:(id)arg1;
- (void)addShareToQQButtonWithArray:(id)arg1;
- (void)addShareToWeReadButtonWithArray:(id)arg1;
- (void)addExposeButtonWithArray:(id)arg1;
- (void)addWebConsoleButtonWithArray:(id)arg1;
- (void)addTranslationButtonWithArray:(id)arg1;
- (void)addAdjustFontButtonWithArray:(id)arg1;
- (void)addFavouriteButtonWithArray:(id)arg1;
- (void)addCopyToPasteboardButtonWithArray:(id)arg1;
- (void)addSendToEnterpriseWithArray:(id)arg1;
- (void)addHandoffButtonWithArray:(id)arg1;
- (void)addOpenInSafariButtonWithArray:(id)arg1;
- (id)getOpenWithBrowserTitle;
- (void)addRefreshButtonWithArray:(id)arg1;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3 WithAccessibilityLabel:(id)arg4 disable:(_Bool)arg5 userInfo:(id)arg6;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3 disable:(_Bool)arg4 userInfo:(id)arg5;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3 disable:(_Bool)arg4;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3;
- (void)doSearchInPage;
- (void)hideChangeFont;
- (void)exposeArticleWithSnapshotAllowance:(_Bool)arg1;
- (void)askForExposeArticle;
- (void)revertPageTranslate;
- (void)pageTranslate;
- (void)showChangeFont:(unsigned int)arg1;
- (void)copyToPasteBoard;
- (void)openWithQQBrowser;
- (void)sendHandOffOpenCommand;
- (void)openWithSafari;
- (void)jumpToInstallUrl:(id)arg1;
- (void)doShareWithAppMessage:(id)arg1 shareScene:(unsigned long long)arg2 targretContact:(id)arg3;
- (void)shareToFriendInTextLinkWithTargetContact:(id)arg1;
- (void)shareWithAppMessage:(id)arg1 shareScene:(unsigned long long)arg2 targretContact:(id)arg3;
- (void)shareWithAppMessage:(id)arg1 shareScene:(unsigned long long)arg2;
- (void)shareWithAppMessage:(id)arg1;
- (_Bool)isEnableCustom:(id)arg1 domainPathList:(id)arg2;
- (void)sendToEnterprise;
- (void)sendToDevice;
- (void)shareWithEmail;
- (void)shareToWeWork;
- (void)shareToQZone;
- (void)shareToWeibo;
- (void)shareToQQ;
- (void)shareToWeRead;
- (void)shareToFaceBook;
- (void)cancelShareToGoodLook;
- (void)presentShareToGoodLookDialogWithTitle:(id)arg1 thumbImage:(id)arg2 thumbImageURL:(id)arg3;
- (void)presentShareToGoodLookDialogByJS;
- (void)shareToGoodLookAndShowDialogByJS:(_Bool)arg1;
- (void)shareToGoodLook;
- (void)shareToTimelineWithShareScene:(unsigned long long)arg1;
- (void)shareToTimelineInTextLink;
- (void)shareToTimeline;
- (void)addFavWithUrl:(id)arg1 title:(id)arg2 desc:(id)arg3 imageUrl:(id)arg4 extraDic:(id)arg5;
- (void)shareTimelineFromWxUpdateApiData:(id)arg1;
- (void)shareAppMessageFromWxUpdateApiData:(id)arg1;
- (void)shareToFiendWithUrl:(id)arg1 title:(id)arg2 desc:(id)arg3 thumbData:(id)arg4 contact:(id)arg5;
- (id)getCurrentViewController;
- (void)shareTimelineWithUrl:(id)arg1 title:(id)arg2 desc:(id)arg3 thumbData:(id)arg4 size:(struct CGSize)arg5 extraDic:(id)arg6;
- (void)setupExtraDataForShareToTimeLine;
- (void)setupExtraDataForSendAppMessageWithSendAppScene:(id)arg1 targetContact:(id)arg2;
- (void)setupExtraDataForSendAppMessageWithSendAppScene:(id)arg1;
- (void)setFontWithSize:(long long)arg1;
- (void)startWebSearch:(id)arg1;
- (void)doSearch:(id)arg1;
- (void)buildMenuWithBuilder:(id)arg1;
- (void)removeCustomMenu;
- (void)setCustomMenu;
- (void)updateCustomMenu;
- (void)initSwitchDictIfNeed;
- (_Bool)isSameLayerSwitchOpenWithScene:(unsigned long long)arg1;
- (void)onWebviewScrollWhenShowOAuthSnapshotPage;
- (void)initHalfScreenRemindView;
- (void)relayoutOauthSnapShotView;
- (id)createBroseModeBottomRemindView;
- (void)changeHalfScreenViewShow:(_Bool)arg1;
- (void)onOAuthSnapShotPageClicked;
- (void)onOAuthSnapShotPageLoadFinished;
- (void)exitOAuthSnapShotMode;
- (void)enterOAuthSnapShotModeWithURL:(id)arg1;
- (void)onClickWebView:(id)arg1;
- (void)enableOAuchTapDetect;
- (_Bool)isWebOauthLogicAuthing;
- (void)relayoutOauthPageSheet;
- (void)handleOnShowAutoOAuthViewWithSchemeUrl:(id)arg1 Success:(_Bool)arg2 Wording:(id)arg3 HeadImgUrl:(id)arg4;
- (void)cancelSnapShotPageDelaySelector;
- (void)clearOAuthClickStatus;
- (void)onClickTouristAuth;
- (unsigned int)getCurrentPageAuthType;
- (void)handleOAuth:(id)arg1 authType:(unsigned int)arg2;
- (_Bool)shouldHandleNativeOAuth:(id)arg1 isIFrame:(_Bool)arg2;
- (_Bool)needHandleNativeOAuth:(id)arg1;
- (void)onWebViewContentClick;
- (void)callSnapShotPageFinished;
- (void)callSnapShotPageLoadFinishedWithDelayIfNeed;
- (void)reportPerformance;
- (int)relativeRecordTimeForName:(id)arg1;
- (void)fetchDocumentTime;
- (void)injectWXPerformanceInfo;
- (void)injectConsolePerformanceInfo;
- (void)handlePerformanceInfo;
- (void)recordTimeWithName:(id)arg1 time:(unsigned long long)arg2 newCategory:(_Bool)arg3 detail:(id)arg4;
- (void)recordTimeWithName:(id)arg1 newCategory:(_Bool)arg2 detail:(id)arg3;
- (void)recordTimeWithName:(id)arg1;
- (_Bool)shouldCustomSchemeHandlerWork;
- (id)pageDataKeyUrl;
- (void)addSchemeHandlerToDictForPreload:(id)arg1;
- (id)preloadJSONRepresentationWithObject:(id)arg1;
- (void)alertPreloadInfo;
- (void)injectConsolePreloadInfo;
- (unsigned long long)timeAfterPreloadStartLoad:(unsigned long long)arg1;
- (void)checkPreloadPageFinish;
- (void)preloadGoOnlineH5;
- (void)processPreloadFailWithErrorCode:(unsigned long long)arg1;
- (void)hidePreloadLoading;
- (void)onShowPreloadLoadingTimeout;
- (void)delayShowPreloadLoadingIfNeeded;
- (void)sendEventPreloadMenuSetFontWithSize:(long long)arg1;
- (void)sendEventPreloadPageAuthFail;
- (void)sendEventPreloadPageAuthOK;
- (void)savePreloadA8KeyInfoWithRequestUrl:(id)arg1 fullUrl:(id)arg2 header:(id)arg3;
- (void)getA8KeyForPreloadPageUrl:(id)arg1;
- (void)fetchPreloadPageDataUseOfflineCache:(_Bool)arg1;
- (void)loadPreloadPageData;
- (void)checkPreloadPageFrameOK;
- (void)loadPreloadPageForceUrl;
- (void)loadParentPageForceUrl:(id)arg1;
- (void)onPreloadWebViewDidTerminate;
- (void)onPreloadDidFailLoad;
- (void)onPreloadDidFinishLoad;
- (void)loadPreloadPageFrameHtml;
- (void)removePreloadWebViewKeyInExtraInfo;
- (void)updatePreloadExtraInfo:(id)arg1;
- (id)preloadReloadUrl;
- (Class)preloadContentHandlerClassFromParameterClass:(Class)arg1;
- (void)clearPreloadContentHandler;
- (void)setupPreloadContentHandler;
- (_Bool)hasStartLoadPageData;
- (_Bool)isUsePreloadWebView;
- (id)preloadPerformance;
- (void)preloadReportWithKey:(unsigned long long)arg1;
- (void)onPreloadReceivePagePerformance:(id)arg1;
- (void)onPreloadInjectPageDataNotifyTimeout;
- (void)onPreloadInjectPageDataFail;
- (void)onPreloadInjectPageDataSuccess;
- (id)preloadUpdateA8KeyResult;
- (void)preloadUpdateA8Key:(CDUnknownBlockType)arg1;
- (id)requestPreloadSessionHeader;
- (id)addPreloadSessoinQueryForRequestUrl:(id)arg1;
- (void)loadPreloadPageDataWithParam:(id)arg1 addExtraInfo:(id)arg2;
- (id)getPreloadPageDataKeyUrl;
- (id)getPreloadPageFrameUrl;
- (id)getPreloadTemplateFullVersion;
- (unsigned int)getPreloadTemplateVersion;
- (void)showSearchTextKeyboard;
- (void)removeAllHighlights;
- (void)highlightAllOccurencesOfString:(id)arg1 searchIndex:(unsigned long long)arg2;
- (void)injectSearchInPageJS;
- (_Bool)isBottomBarShowing;
- (double)maxReduceNavibarHeight;
- (id)titleView;
- (double)navigationBarHeight;
- (double)statusBarHeight;
- (_Bool)isScrollViewExceedsBottom;
- (_Bool)isScrollViewExceedsTop;
- (void)makeTitleViewAdaptToGraintMaskLayer;
- (void)setTitleView:(id)arg1;
- (void)setScrollState:(id)arg1;
- (void)setNavigationBarAlpha:(double)arg1 withTitleIncluded:(_Bool)arg2;
- (void)fixScrollViewContentOffset;
- (void)restoreWebContent;
- (void)setFullWebContentSize;
- (void)setWebViewHeightAndLayoutIfNeed:(double)arg1;
- (void)shrinkWebNavigatorBottomBarWithRate:(double)arg1;
- (void)tryHideWebNavigatorBottomBar;
- (void)tryShowWebNavigatorBottomBar;
- (void)layoutBottomBarShrinkRate:(double)arg1;
- (id)pluginShrinkControl;
- (void)reportKv26636EventType:(unsigned int)arg1 mode:(unsigned long long)arg2 isSucc:(_Bool)arg3 errMsg:(id)arg4 performance:(id)arg5 delayTime:(unsigned int)arg6 isDegradeFromRender:(_Bool)arg7;
- (void)reportKv26636EventType:(unsigned int)arg1 mode:(unsigned long long)arg2 isSucc:(_Bool)arg3 errMsg:(id)arg4 performance:(id)arg5 delayTime:(unsigned int)arg6;
- (void)reportKv26496Action:(unsigned int)arg1 webUrl:(id)arg2 hasEdit:(_Bool)arg3;
- (id)getWebUrlFromPreviewContext:(id)arg1;
- (void)onLongImagePreviewActionCancel:(id)arg1;
- (void)onLongImagePreviewActionSaveImage:(id)arg1 image:(id)arg2 isSucc:(_Bool)arg3 error:(id)arg4;
- (void)onLongImagePreviewActionAddFavorite:(id)arg1;
- (void)onLongImagePreviewActionForward:(id)arg1;
- (unsigned long long)getAvailableMemorySize;
- (_Bool)checkMemoryAvailableForContentSize:(struct CGSize)arg1 scale:(double *)arg2 freeMem:(unsigned long long *)arg3 isCompress:(_Bool *)arg4 predictImgMemSize:(unsigned long long *)arg5;
- (struct CGRect)getWebViewTransformValues:(id)arg1;
- (id)trimImageTransparentPixels:(id)arg1;
- (id)addImageWithTopWhitePadding:(id)arg1 padding:(double)arg2;
- (struct CGRect)printPaperRect:(double)arg1;
- (double)snapshotContentHeight;
- (void)__takeSnapshotInPrinterModeWithDelay:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)takeSnapshotInPrinterModeFromDegrade:(_Bool)arg1;
- (void)removeSnapshotOnWindowAndStopLoading;
- (_Bool)extendSnapshotLoadingOnWindowByTimeout:(double)arg1;
- (void)addSnapshotAndLoadingOnWindowWithImage:(id)arg1 timeout:(double)arg2;
- (void)addSnapshotAndLoadingOnWindowByTimeout:(double)arg1;
- (void)__cancelRetrySnapshotInPrinterMode;
- (void)__retrySnapshotInPrinterModeAfterTerminate;
- (void)notifyDidFinishLoadForSnapshot;
- (void)__takeSnapshotInRenderModeForDelay:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)takeSnapshotInRenderMode;
- (double)contentHeightOfWebviewFromTop;
- (void)handleSnapshotImage:(id)arg1 errMsg:(id)arg2;
- (void)onFullSnapshotBtnClick;
- (void)setSnapshotSubviewsHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)delayHideFullSnapshotEntrance;
- (void)animateShowFullSnapshotEntrance;
- (_Bool)shouldShowFullSnapshotEntrance;
- (void)notifyDidTerminateIfDuringSnapshot;
- (void)relayoutFullSnapshotEntrance;
- (void)initFullSnapshotEntranceIfNeed;
- (void)doCallBackWithMsg:(_Bool)arg1 errMsg:(id)arg2 context:(id)arg3;
- (_Bool)isCurrentWebUrlChanged:(id)arg1;
- (_Bool)isCallBackIdChanged:(id)arg1;
- (void)handleCookieSetSuccess:(id)arg1 context:(id)arg2;
- (void)doSetPageCookie:(id)arg1 response:(id)arg2 context:(id)arg3;
- (void)handleHttpResp:(id)arg1 response:(id)arg2 context:(id)arg3;
- (void)doFetchWebPageHeader:(id)arg1 headers:(id)arg2 context:(id)arg3;
- (void)handleGetA8keyResp:(_Bool)arg1 reason:(int)arg2 reqUrl:(id)arg3 resp:(id)arg4 context:(id)arg5;
- (void)doGetA8key:(id)arg1;
- (void)clearLastSpaAuth;
- (void)doSpaPageAuth:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)shouldTaskSnapShotWhenDismissedOrPoped;
- (void)tryUpdateTaskSnapshotWhenLeave;
- (_Bool)shouldBlockMinimizationEntryInInteractivePop;
- (_Bool)minimizationInteractivePopGestureRecognizerShouldBegin;
- (void)minimizationInteractivePopGestureRecognizerDidEndWithCompletion:(_Bool)arg1;
- (void)minimizationInteractivePopToMinimizeTask:(_Bool)arg1;
- (void)minimizationInteractivePopGestureRecognizerDidBegin;
- (id)mmNavigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)mmNavigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)DismissMyWebViewAnimated:(_Bool)arg1;
- (void)setWebViewPopBackInteractTansition;
- (void)updateWebTaskKey:(id)arg1;
- (void)unminimizeViewControler;
- (void)tryMinimizeViewControler;
- (void)miniMizeAniWithDeleLay:(unsigned int)arg1 animated:(_Bool)arg2 minimizeType:(unsigned int)arg3;
- (void)miniMizeAniWithDeleLay:(unsigned int)arg1 animated:(_Bool)arg2;
- (void)miniMizeAniWithDeleLay:(unsigned int)arg1;
- (void)relayoutTopBar;
- (void)onTopBarShouldChangeShowState;
- (void)onWebviewScrollViewDidScrollOnCatagoryUI:(id)arg1;
- (void)reportLiveTitleExpose;
- (void)reportLiveTitleClk;
- (void)didMoveToNewScene:(id)arg1;
- (id)translatePlugin;
- (id)brandLivePlugin;
- (void)removeSnapshotImageOnWindow;
- (void)addSnapshotImageOnWindow:(id)arg1 timeout:(double)arg2;
- (void)relayoutNavShadowView;
- (void)onNavShadowViewTaped:(id)arg1;
- (void)hideNavBarShadow;
- (void)showNavBarShadow:(id)arg1 alpha:(float)arg2 traceId:(id)arg3;
- (unsigned int)webviewCurrentFontScale;
- (unsigned int)webviewCurrentFontLevel;
- (void)initWebviewFontControlParams;
- (void)stopLoadingWithFailText:(id)arg1;
- (void)stopLoadingWithOKText:(id)arg1;
- (void)stopLoading;
- (void)startLoadingWithText:(id)arg1 delayAnimation:(double)arg2 block:(_Bool)arg3;
- (id)navigationController;
- (void)PresentModalViewController:(id)arg1 animated:(_Bool)arg2 forceFullScreen:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)resetViewStatus;
- (void)trySetupWebviewExpandedUIForInnerScene;
- (id)webviewExpandedRequestingLoadingView;
- (unsigned long long)webviewExpandedStatusBarPresetColor;
- (_Bool)isWebviewExpandedToTopForInnerScene;
- (_Bool)isWebviewExpandedToTop;
- (id)pageSheetAdapterPlugin;
- (id)currentPageSheetAdapter;
- (void)bindPageSheetAdapter:(id)arg1;
- (void)onRecieveCloseWindowEvent;
- (void)onRecieveNavEvent:(id)arg1 params:(id)arg2;
- (_Bool)isNeedHandleInterativeGesturerDelegateInChildWebViewMode;
- (_Bool)isChildWebViewMode;
- (_Bool)isNeedShowProgressBar;
- (_Bool)isCurrentCachedWebViewController;
- (_Bool)isCurrentMinimizeWebViewController;
- (_Bool)canSupportBackForwardNavigationGestures;
- (void)initLockDownModeStatus;
- (_Bool)canShowLockDownModeWording;
- (_Bool)canShowTopBar;
- (_Bool)shouldForbidBottomBar;
- (_Bool)canShowBottomBar;
- (_Bool)canShowMultiSceneEntry;
- (_Bool)canShowMinimizationEnrtyInTransition;
- (_Bool)canShowMinimizationEntryInMenu;
- (void)setForbidShowMinimizationEntryInMenu:(_Bool)arg1;
- (void)setDisableWebInterativePop:(_Bool)arg1;
- (double)getWebBottomBarHeight;
- (void)restoreDefaultBackgroundColorAndCleanFooterBounceColor;
- (void)setCustomBackgroundColor:(id)arg1;
- (void)setDisableWebViewScrollViewBounces;
- (void)setPayTitle:(id)arg1;
- (void)onBrandLiveTitleViewSelected;
- (void)onProfileTitleViewSelected;
- (_Bool)goBizProfileWithScene:(unsigned int)arg1;
- (void)relayoutProfileTitleView;
- (void)passTopBarParams:(_Bool)arg1;
- (void)changeNavigationTitleViewFrom:(id)arg1 to:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (unsigned int)decideNavigationTitleType;
- (void)updateNavigationTitleState;
- (void)setCustomTitleViewShowState:(_Bool)arg1;
- (void)updateCustomTitleView;
- (void)resetWebUIWhenWebCommitNewContentIfNeed;
- (void)delayStopCustomNavigationLoading;
- (void)clearCustomNavigationLoadingView;
- (void)startCustomNavigationLoadingViewInForce:(_Bool)arg1;
- (void)relayoutCustomNavigationLoadingView;
- (void)initCustomNavigationLoadingView;
- (void)endContentProgressLoading;
- (void)startContentProgressLoadingInForce:(_Bool)arg1;
- (void)startContentProgressLoading;
- (void)resetStatusBarFromWebSearch;
- (void)setDisableProgressView:(_Bool)arg1;
- (void)setUIDisableShareMenu:(_Bool)arg1;
- (_Bool)isHideBottomBarInFullScreen;
- (_Bool)isKeepStatusBarInFullScreen;
- (void)setEnableFullScreenLayout:(_Bool)arg1;
- (void)exitFullScreenIfNeed:(unsigned long long)arg1;
- (void)setFullScreen:(_Bool)arg1 scene:(unsigned int)arg2 animated:(_Bool)arg3;
- (void)setFullScreen:(_Bool)arg1;
- (void)showSSLErrorAlertWithUrl:(id)arg1;
- (void)hideLoadFailView;
- (void)relayoutLoadFailView;
- (void)showLoadFailView:(unsigned int)arg1 errorCode:(long long)arg2;
- (void)handleUIWillAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)handleUIwillRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)setTailBackGroundColor:(id)arg1;
- (void)restoreToDefaultNavBar;
- (void)__setNavBarBgColor:(id)arg1;
- (void)__updateTitleViewAlpha;
- (void)setTitleAlpha:(double)arg1;
- (void)setTitleColor:(id)arg1;
- (void)restoreFontView;
- (void)restoreTailBGView;
- (void)restoreMainTabBarNavBkgWhenInSplitView;
- (void)restoreAddressBar;
- (void)initCustomTitleView;
- (void)initMaskView;
- (void)initTopBar;
- (void)initBottomBar;
- (void)initAddressBarView;
- (void)initDeeplinkRedirectingView;
- (void)initProgressView;
- (_Bool)useBlackStatusbar;
- (_Bool)showNavigationBarSepLine;
- (id)navigationBarBackgroundColor;
- (_Bool)navigationBarBlurEffect;
- (id)customNavBarPlugin;
- (void)configWebLoadingView;
- (void)configWebviewOpaqueState;
- (void)onCustomRightBarItemAction:(id)arg1;
- (void)updateRightBarButtonWithContextId:(id)arg1;
- (void)updateRightBarButtonInCurrentContext;
- (void)updateNavigationBarColorInCurrentContext;
- (void)configBackCon;
- (void)__configNavItemInOldDays;
- (void)__configNavItemNew;
- (void)configNavigationBarLeftItem;
- (void)configStatusBar;
- (void)onPresetUIChanged;
- (void)setDisableContextMenuInCurPage:(_Bool)arg1;
- (void)onClickWebviewInPos:(struct CGPoint)arg1;
- (void)resetPageInfoInCurrrentContext;
- (long long)overrideUserInterfaceStyle;
- (void)initCommonViewWithUrl:(id)arg1;
- (void)relayoutWhenViewDidLayoutSubviews;
- (void)relayoutWebContent;
- (id)fixRedPacketURL:(id)arg1;
- (_Bool)isBaseWechatScene;
- (void)releaseULControlContext;
- (void)pauseAllWebPlayback;
- (void)clearWebViewContent;
- (id)webviewDomainList;
- (void)voiceTic;
- (_Bool)checkAutoMediaPlayFor:(id)arg1 withRegStr:(id)arg2;
- (id)limitedModePlugin;
- (void)checkAndFixXpcIssue;
- (id)getPublisherUsername;
- (id)getDisplaySourceName;
- (id)getThumbImageUrl;
- (id)genNewWebStatusNotifyItem;
- (id)getCurrentPageTitle;
- (id)getWebMinimizationTitle;
- (id)getCurrentBrandIcon;
- (id)getCurrentMpInfo;
- (id)webviewSecurityContextBuffer;
- (void)doDNS;
- (id)valueForKey:(id)arg1 fromQueryItems:(id)arg2;
- (id)redirectUrlWithInitUrl:(id)arg1;
- (void)setInjectVConsoleSwitch:(_Bool)arg1;
- (_Bool)isWebViewContentCanExpanded;
- (_Bool)shouldRunReleaseTranscationWhenBePopedOrDismissed;
- (_Bool)shouldBlockNavigateActionOnULControl:(id)arg1;
- (_Bool)judgeAllowsAutoMediaPlay;
- (_Bool)containsString:(id)arg1 withRegex:(id)arg2;
- (_Bool)isMPDesignByURL:(id)arg1;
- (_Bool)isWebViewOfflinePackageEnableAllScence;
- (_Bool)isMPArticleByURL:(id)arg1;
- (id)imageWithColor:(id)arg1 origin:(id)arg2;
- (id)getOperationButtonImageNameWithURL:(id)arg1;
- (id)getJumpOutAppStoreAlertTitleWithUrl:(id)arg1;
- (id)getWebviewBannerTitle;
- (id)getAddressBarHostText:(id)arg1;
- (void)onTapBlurEffectView;
- (void)onFinalBackButtonClick:(id)arg1;
- (void)didEndSearch:(id)arg1;
- (void)willEndSearch:(id)arg1;
- (void)didBeginSearch:(id)arg1;
- (void)willBeginSearch:(id)arg1;
- (void)cancelWebSearchAnimated:(_Bool)arg1;
- (_Bool)isWebSearchActive;
- (void)prepareHistoryWebSearchForBrandContact:(id)arg1;
- (id)genSafetyControlReportStr;
- (void)tryLogWebViewJumpOut;
- (void)logUseWebviewSchemeToJumpWithUrl:(id)arg1;
- (void)handleClickTipsBtn:(id)arg1 Index:(long long)arg2 withText:(id)arg3;
- (void)handleClickEmptyBackgroundViewToHideTips;
- (void)showAlertBeforeJumpAppStoreWithUrl:(id)arg1;
- (void)delayPopForAppStore;
- (void)delayHandleUrl:(id)arg1;
- (void)handleScanQrCodeUrl:(id)arg1;
- (_Bool)shouldHandleScanQrCodeUrl:(id)arg1;
- (void)handleJumpUrl:(id)arg1;
- (_Bool)shouldHandleJumpUrl:(id)arg1;
- (void)handleJumpProfileUrl:(id)arg1;
- (_Bool)shouldHandleJumpProfileUrl:(id)arg1;
- (void)handleUrlHandler:(id)arg1;
- (void)handleAppStroeUrlString:(id)arg1;
- (void)handleFeedBackWithUrlString:(id)arg1;
- (_Bool)shouldHandleDlFeedBackRange:(id)arg1;
- (void)handleDeepLinkWithUrlString:(id)arg1;
- (unsigned long long)getOneSectionTime:(unsigned long long)arg1 EndTime:(unsigned long long)arg2 ReportEndTime:(unsigned long long)arg3;
- (unsigned long long)calcAllVisibleTimeDuration:(unsigned long long)arg1;
- (long long)getTimeToAdd:(id)arg1;
- (id)processingPlaceHolder:(id)arg1 PlaceHolder:(id)arg2 TimeDuration:(unsigned long long)arg3;
- (void)reportTimeEnd;
- (_Bool)addWebviewVisibleState:(_Bool)arg1 Reason:(id)arg2;
- (void)reportTimeBegin;
- (_Bool)isGamePage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSURLRequest *request;
@property(readonly) Class superclass;

@end

