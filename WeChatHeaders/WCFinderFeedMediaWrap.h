//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WCPlayerHttpMediaWrap.h"

@class FinderMediaAndPlayerQoEInfo, FinderMediaSpec, FinderObjectScalingInfo, NSMutableArray, NSString, WCFinderFullScreenEditRectModel, WCPlayerReporter;

@interface WCFinderFeedMediaWrap : WCPlayerHttpMediaWrap
{
    _Bool _isHLS;
    _Bool _isPlayUnifiedURL;
    _Bool _hotFlag;
    _Bool _isOnPlayState;
    _Bool _hadDownloadSuccessfulInLocal;
    _Bool _hasCache;
    _Bool _hasAddPreloadArray;
    _Bool _isUseSystemPlayer;
    int _videoPlayDuration;
    int _preloadDuration;
    int _qualityScore;
    int _preloadDurationQoE;
    int _useQoEControl;
    NSString *_mediaURL;
    NSString *_thumbURL;
    unsigned long long _mediaType;
    NSString *_hashKey;
    NSString *_thumbHashKey;
    NSString *_fileformatHashKey;
    double _createTime;
    NSString *_tid;
    NSMutableArray *_specsArray;
    NSMutableArray *_hlsSpecsArray;
    NSMutableArray *_hdrSpecsArray;
    NSString *_coverURL;
    NSString *_coverHashKey;
    NSString *_decodeKey;
    NSString *_fullThumbURL;
    NSString *_fullThumbHashKey;
    NSString *_urlToken;
    NSString *_thumbUrlToken;
    NSString *_coverUrlToken;
    NSString *_fullThumbUrlToken;
    NSString *_fileFormat;
    double _mediaWidth;
    double _mediaHeight;
    WCFinderFullScreenEditRectModel *_editRectModel;
    unsigned long long _currentMaxBitrate;
    WCPlayerReporter *_reporter;
    FinderMediaAndPlayerQoEInfo *_playerInfo;
    double _limitBufferCountQoE;
    unsigned long long _setMaxBitrate;
    NSString *_fileformatChangeInfoQoE;
    FinderObjectScalingInfo *_scalingInfo;
    unsigned long long _scene;
    FinderMediaSpec *_suggestMediaSpec;
    NSString *_currentLocalFileFormat;
    unsigned long long _currentLocalFileDownloadPercent;
    unsigned long long _preloadIndex;
    NSString *_currentTempVideoPath;
    NSString *_currentVideoPath;
    FinderMediaSpec *_currentMediaSpec;
    NSMutableArray *_arrDataSource;
    NSString *_targetSpecH266InfoStr;
}

+ (id)hashStringWithMediaInfo:(id)arg1;
+ (id)hashStringWithKey:(id)arg1;
+ (id)mediaWrapWithParam:(id)arg1;
+ (id)mediaWrapWith:(id)arg1 liveCoverPreferredAspectRatio:(unsigned long long)arg2 scene:(unsigned long long)arg3;
+ (id)mediaWrapWith:(id)arg1 useSystemPlayer:(_Bool)arg2 scene:(unsigned long long)arg3;
+ (id)mediaWrapWith:(id)arg1 currentMediaPath:(id)arg2 scene:(unsigned long long)arg3;
+ (id)mediaWrapWith:(id)arg1 ignoreCache:(_Bool)arg2 scene:(unsigned long long)arg3;
+ (id)mediaWrapWith:(id)arg1 scene:(unsigned long long)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *targetSpecH266InfoStr; // @synthesize targetSpecH266InfoStr=_targetSpecH266InfoStr;
@property(retain, nonatomic) NSMutableArray *arrDataSource; // @synthesize arrDataSource=_arrDataSource;
@property(nonatomic) _Bool isUseSystemPlayer; // @synthesize isUseSystemPlayer=_isUseSystemPlayer;
@property(retain, nonatomic) FinderMediaSpec *currentMediaSpec; // @synthesize currentMediaSpec=_currentMediaSpec;
@property(retain, nonatomic) NSString *currentVideoPath; // @synthesize currentVideoPath=_currentVideoPath;
@property(retain, nonatomic) NSString *currentTempVideoPath; // @synthesize currentTempVideoPath=_currentTempVideoPath;
@property(nonatomic) unsigned long long preloadIndex; // @synthesize preloadIndex=_preloadIndex;
@property(nonatomic) unsigned long long currentLocalFileDownloadPercent; // @synthesize currentLocalFileDownloadPercent=_currentLocalFileDownloadPercent;
@property(retain, nonatomic) NSString *currentLocalFileFormat; // @synthesize currentLocalFileFormat=_currentLocalFileFormat;
@property(retain, nonatomic) FinderMediaSpec *suggestMediaSpec; // @synthesize suggestMediaSpec=_suggestMediaSpec;
@property(nonatomic) unsigned long long scene; // @synthesize scene=_scene;
@property(retain, nonatomic) FinderObjectScalingInfo *scalingInfo; // @synthesize scalingInfo=_scalingInfo;
@property(retain, nonatomic) NSString *fileformatChangeInfoQoE; // @synthesize fileformatChangeInfoQoE=_fileformatChangeInfoQoE;
@property(nonatomic) unsigned long long setMaxBitrate; // @synthesize setMaxBitrate=_setMaxBitrate;
@property(nonatomic) int useQoEControl; // @synthesize useQoEControl=_useQoEControl;
@property(nonatomic) _Bool hasAddPreloadArray; // @synthesize hasAddPreloadArray=_hasAddPreloadArray;
@property(nonatomic) int preloadDurationQoE; // @synthesize preloadDurationQoE=_preloadDurationQoE;
@property(nonatomic) double limitBufferCountQoE; // @synthesize limitBufferCountQoE=_limitBufferCountQoE;
@property(retain, nonatomic) FinderMediaAndPlayerQoEInfo *playerInfo; // @synthesize playerInfo=_playerInfo;
@property(nonatomic) __weak WCPlayerReporter *reporter; // @synthesize reporter=_reporter;
@property(nonatomic) _Bool hasCache; // @synthesize hasCache=_hasCache;
@property(nonatomic) _Bool hadDownloadSuccessfulInLocal; // @synthesize hadDownloadSuccessfulInLocal=_hadDownloadSuccessfulInLocal;
@property(nonatomic) _Bool isOnPlayState; // @synthesize isOnPlayState=_isOnPlayState;
@property(nonatomic) unsigned long long currentMaxBitrate; // @synthesize currentMaxBitrate=_currentMaxBitrate;
@property(retain, nonatomic) WCFinderFullScreenEditRectModel *editRectModel; // @synthesize editRectModel=_editRectModel;
@property(nonatomic) double mediaHeight; // @synthesize mediaHeight=_mediaHeight;
@property(nonatomic) double mediaWidth; // @synthesize mediaWidth=_mediaWidth;
@property(nonatomic) _Bool hotFlag; // @synthesize hotFlag=_hotFlag;
@property(nonatomic) _Bool isPlayUnifiedURL; // @synthesize isPlayUnifiedURL=_isPlayUnifiedURL;
@property(nonatomic) _Bool isHLS; // @synthesize isHLS=_isHLS;
@property(nonatomic) int qualityScore; // @synthesize qualityScore=_qualityScore;
@property(copy, nonatomic) NSString *fileFormat; // @synthesize fileFormat=_fileFormat;
@property(retain, nonatomic) NSString *fullThumbUrlToken; // @synthesize fullThumbUrlToken=_fullThumbUrlToken;
@property(retain, nonatomic) NSString *coverUrlToken; // @synthesize coverUrlToken=_coverUrlToken;
@property(retain, nonatomic) NSString *thumbUrlToken; // @synthesize thumbUrlToken=_thumbUrlToken;
@property(retain, nonatomic) NSString *urlToken; // @synthesize urlToken=_urlToken;
@property(copy, nonatomic) NSString *fullThumbHashKey; // @synthesize fullThumbHashKey=_fullThumbHashKey;
@property(retain, nonatomic) NSString *fullThumbURL; // @synthesize fullThumbURL=_fullThumbURL;
@property(copy, nonatomic) NSString *decodeKey; // @synthesize decodeKey=_decodeKey;
@property(copy, nonatomic) NSString *coverHashKey; // @synthesize coverHashKey=_coverHashKey;
@property(copy, nonatomic) NSString *coverURL; // @synthesize coverURL=_coverURL;
@property(retain, nonatomic) NSMutableArray *hdrSpecsArray; // @synthesize hdrSpecsArray=_hdrSpecsArray;
@property(retain, nonatomic) NSMutableArray *hlsSpecsArray; // @synthesize hlsSpecsArray=_hlsSpecsArray;
@property(retain, nonatomic) NSMutableArray *specsArray; // @synthesize specsArray=_specsArray;
@property(retain, nonatomic) NSString *tid; // @synthesize tid=_tid;
@property(nonatomic) double createTime; // @synthesize createTime=_createTime;
@property(retain, nonatomic) NSString *fileformatHashKey; // @synthesize fileformatHashKey=_fileformatHashKey;
@property(retain, nonatomic) NSString *thumbHashKey; // @synthesize thumbHashKey=_thumbHashKey;
@property(retain, nonatomic) NSString *hashKey; // @synthesize hashKey=_hashKey;
@property(nonatomic) int preloadDuration; // @synthesize preloadDuration=_preloadDuration;
@property(nonatomic) int videoPlayDuration; // @synthesize videoPlayDuration=_videoPlayDuration;
@property(nonatomic) unsigned long long mediaType; // @synthesize mediaType=_mediaType;
@property(copy, nonatomic) NSString *thumbURL; // @synthesize thumbURL=_thumbURL;
@property(copy, nonatomic) NSString *mediaURL; // @synthesize mediaURL=_mediaURL;
- (void)updatePlayerInfo:(id)arg1 playbackInfo:(id)arg2;
- (id)getFormatInfo;
- (void)switchTargetFileFormat;
- (id)mediaURLWithToken;
- (id)sortDescendingWith:(id)arg1;
- (id)genFinderMediaSpecFrom:(id)arg1;
- (id)getTargetMediaSpecWithMaxBitRate:(unsigned long long)arg1 codingFormat:(id)arg2 onlyUseVideoBR:(_Bool)arg3 correspondingH265LevelOrder:(unsigned long long)arg4;
- (_Bool)checkMediaSpecHasVideoBitrate;
- (id)getMaxMediaSpecWithCodingFormat:(id)arg1;
- (unsigned int)getH266MaxCap:(id)arg1;
- (id)getCurrentMediaSpecWithFormat:(id)arg1;
- (id)findTargetMediaSpecWithFormat:(id)arg1;
- (id)getMaxDownloadFormatByGlobalInfo:(long long)arg1;
- (id)getH266MediaSpec:(id)arg1 maxBitrate:(int)arg2;
- (unsigned long long)getH266MediaSpecHighestBitrate;
- (_Bool)specHasHigherOrEqualHdrPriority:(id)arg1 over:(id)arg2;
- (id)getOptimalFileFormatWithCurrentDownloadFileFormat:(id)arg1;
- (id)currentPreloadInLocalFormat;
- (id)currentDownloadInLocalFormat;
- (id)getOptimalFileFormat;
- (unsigned long long)getH266MediaSpecHighestLevelOrder;
- (_Bool)getMediaSpecHasLevelOrder;
- (int)getQualityScore:(id)arg1;
- (id)imageDownloadPathArray;
- (id)downloadImageTempPath;
- (id)downloadCoverTempPath;
- (id)downloadFullScreenThumbTempPath;
- (id)downloadPreviewTempPath;
- (id)getMediaWrapUrl;
- (unsigned int)getPreloadPercent;
- (id)getFormatVideoPath;
- (id)getTempVideoPath;
- (id)getThumbIdentifier;
- (id)getMediaWrapThumbIdentifier;
- (id)getMediaWrapIdentifier;
@property(readonly, nonatomic) unsigned long long currentDownloadBitrate;
- (id)printMediaWrapInfo;
- (id)description;
- (_Bool)isDownloadH266File;
- (_Bool)isDownloadH265File;
- (long long)getPreloadVideoSize;
- (long long)getDownloadVideoSize;
- (_Bool)isFormatVideoExist;
- (_Bool)mediaWrapIdentifierHashIsEqual:(id)arg1;
- (id)getMediaWrapFullThumbHash;
- (id)getMediaWrapCoverHash;
- (id)getMediaWrapThumbHash;
- (id)getMediaWrapIdentifierHash;
- (_Bool)isUploadFinishFeed;
- (_Bool)needForceUseSystemPlayer:(id)arg1;
- (_Bool)parseNeedToUpdateFinderLevel:(id)arg1;
- (id)getPlayerIsMute:(_Bool)arg1 notExistPlayMode:(unsigned long long)arg2 andPlayerScene:(unsigned long long)arg3;
- (void)setPlayerExperimentalParameters:(id)arg1;
- (id)genArrDataSourceWith:(id)arg1;
- (void)wcfStopDownload;
- (void)wcfStartDownloadWithType:(long long)arg1;
- (void)wcfStartDownloadFullScreenThumbWithPriority:(_Bool)arg1;
- (void)wcfStartDownloadWithPriority:(_Bool)arg1 isThumb:(_Bool)arg2;
- (void)wcfCancelCurrentImageLoad;
- (id)wcfImageLoadOperation;
- (void)wcfSetImageLoadOperation:(id)arg1;

@end

