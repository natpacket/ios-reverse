//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUserService.h"

#import "MMServiceProtocol-Protocol.h"

@class MemoryMappedKV, NSDictionary, NSMutableDictionary, NSRecursiveLock, NSString, WAAppBrandNotifyStorage, WAAppBrandPluginNotifyStorage, WAEnableCopyPathMenuNotifyStorage, WAPackageSweeperLogic;

@interface WAConfigMgr : MMUserService <MMServiceProtocol>
{
    NSMutableDictionary *_dicAppID2ConfigJSON;
    NSMutableDictionary *_dicAppID2ConfigDarkJSON;
    NSMutableDictionary *_dicAppID2ContactAttribute;
    NSMutableDictionary *_dicAppID2CertDic;
    NSMutableDictionary *_dicAppIDDebugType2PackageConfig;
    NSMutableDictionary *_dicAppID2GameExtraInfo;
    NSMutableDictionary *_dicAppIDOrUsername2PreHotPermission;
    WAAppBrandNotifyStorage *m_notifyStorage;
    WAAppBrandPluginNotifyStorage *m_pluginNotifyStorage;
    WAEnableCopyPathMenuNotifyStorage *m_enableCopyPathMenuNotifyStorage;
    NSMutableDictionary *dicUseVConsoleApp;
    NSMutableDictionary *dicAppRenderType;
    NSMutableDictionary *_userWeAppMonitor;
    _Bool _useCommandBuffer;
    _Bool _useWCWSS;
    _Bool _useCronetRequest;
    _Bool _useCronetDownload;
    _Bool _useCronetUpload;
    _Bool _useWxAudio;
    long long _weakNetNotify;
    long long _useCommandBufferScene;
    _Bool _shouldSupportAutoTest;
    _Bool _mpShortLinkGlobalHighLightEnabled;
    NSRecursiveLock *_notifyInfolock;
    NSRecursiveLock *_pluginNotifyInfolock;
    CDUnknownBlockType _getDebugInfoCompleteBlock;
    MemoryMappedKV *_useVConsoleAppKv;
    _Bool _forceReportGamePerf;
    NSDictionary *_dicSystemConfig;
    WAPackageSweeperLogic *_pkgSweeperLogic;
    NSString *_mmUserAgent;
    NSMutableDictionary *_cacheChannelMsgs;
}

+ (_Bool)isSettingStorageClearShouldUseContactRecordTime;
+ (id)extensionIMsgExtRegisterKeyList;
+ (_Bool)isJsDirectInvokeOc;
+ (_Bool)isDirectInvokeJs;
+ (_Bool)isOpenWeAppJSMemoryStat;
+ (_Bool)isOpenWeAppSplitPlugin;
+ (_Bool)isOpenABTestCheck:(_Bool)arg1;
+ (_Bool)isOpenIsolatePluginCheck;
+ (_Bool)isCloseWeGameMultiSplitPlugin;
+ (_Bool)isOpenWeGameMultiSplitPlugin;
+ (_Bool)isOpenWeGameSplitPlugin;
+ (_Bool)isOpenImageSearchEntry;
+ (_Bool)isClosePubDelayUnpack;
+ (_Bool)isCloseSearchEntry;
+ (_Bool)isOpenMainFrameTaskBarBatchAttrSync;
+ (_Bool)isOpenMainFrameTaskBar;
+ (_Bool)isOpenFTSSearchWeappGameSection;
+ (_Bool)isOpenGameEntry;
+ (_Bool)isDeviceSupportWeApp;
+ (int)benchMarkLevel;
+ (_Bool)isOverSeaUser;
- (void).cxx_destruct;
@property(retain) NSMutableDictionary *cacheChannelMsgs; // @synthesize cacheChannelMsgs=_cacheChannelMsgs;
@property(retain) NSString *mmUserAgent; // @synthesize mmUserAgent=_mmUserAgent;
@property(retain, nonatomic) WAPackageSweeperLogic *pkgSweeperLogic; // @synthesize pkgSweeperLogic=_pkgSweeperLogic;
@property(retain) NSDictionary *dicSystemConfig; // @synthesize dicSystemConfig=_dicSystemConfig;
@property _Bool forceReportGamePerf; // @synthesize forceReportGamePerf=_forceReportGamePerf;
- (void)processOpConfigWithAppID:(id)arg1 exptInfo:(id)arg2;
- (void)processOpConfigWithAppID:(id)arg1 opConfig:(id)arg2;
- (void)updateOpConfigWithContact:(id)arg1;
- (id)getOpConfigWithAppID:(id)arg1;
- (void)unRegisterPackageSweeperIgnoreAppid:(id)arg1;
- (void)registerPacakgeSweeperIgnoreAppid:(id)arg1 aboveVersion:(unsigned long long)arg2;
- (void)supportAutoTest;
- (void)getDebugNotifyInfoWithDevuin:(long long)arg1 appid:(id)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (void)onResponseGetAppInfoList:(id)arg1;
- (void)onResponseGetDebugInfo:(id)arg1;
- (void)onResponseGetUserSwitch:(id)arg1;
- (void)onCgiResponse:(id)arg1 forEvent:(unsigned int)arg2;
- (id)createSemverWithVersionStr:(id)arg1;
- (_Bool)isOpenWeAppWeakNetCgiRouteToService;
- (_Bool)isOpenLatestPluginJsonMerge;
- (_Bool)isOpenPrivacyAuthorizationEntry;
- (_Bool)enableWeAppEarlyLoading;
- (_Bool)shouldOpenSkylineResizeImage;
- (_Bool)shouldOpenSkyline;
- (_Bool)shouldSystemInfoRemoveBlue;
- (_Bool)canUserManageDiscoverWeAppEntryReddot;
- (unsigned long long)usrSpaceTraceScanFrequency;
- (_Bool)isOpenUsrSpaceTrace;
- (_Bool)gameEnableMultiThread;
- (_Bool)isWeGamePreserveDrawingBufferDoClear;
- (_Bool)isUseSetCurrentContextRefactor;
- (_Bool)isOpenMiniTask;
- (_Bool)isOpenCameraScanWxCodePreload;
- (_Bool)isOpenMPShortLinkGlobalHighLight;
- (_Bool)isOpenMPShortLinkMenuEntry;
- (_Bool)canWeAppCustomServiceSendVideo;
- (_Bool)isOpenShoppingCartEntry;
- (id)weappQRCodePrefix;
- (_Bool)isOpenWalletPrefetch;
- (_Bool)isCloseSilentOpen;
- (_Bool)isOpenLocalVersionFallback;
- (_Bool)isOpenPerformanceIndexReport;
- (_Bool)isColdLaunchUseWeakLoading;
- (_Bool)isOpenLaunchTimeAxisKV;
- (_Bool)isOpenLaunchDownloadInPrecheckerThread;
- (_Bool)isOpenWeGameSplashScreen;
- (_Bool)isOpenWeGamePredownload;
- (void)setUseWXAUDIO:(_Bool)arg1;
- (_Bool)isUseWXAUDIO;
- (void)setWeakNetInterval:(long long)arg1;
- (long long)isWeakNetInterval;
- (void)setUseCronetUpload:(_Bool)arg1;
- (_Bool)isUseCronetUpload;
- (void)setUseCronetDownload:(_Bool)arg1;
- (_Bool)isUseCronetDownload;
- (void)setUseCronetRequest:(_Bool)arg1;
- (_Bool)isUseCronetRequest;
- (_Bool)canAddWeAppPageToWCFavorite;
- (void)setUseWCWSS:(_Bool)arg1;
- (_Bool)isUseWCWSS;
- (long long)useCommandBufferScene;
- (void)setUseGameCommandBuffer:(_Bool)arg1 scene:(long long)arg2;
- (_Bool)isUseGameCommandBuffer;
- (_Bool)isInsertToWebLayer:(unsigned int)arg1;
- (void)doGetAppConfigCgiWithItems:(id)arg1;
- (void)asyncUpdateWeAppConfigInfo:(id)arg1;
- (id)mpShortLinkInvalidURLWithTitle:(id)arg1 content:(id)arg2;
- (id)overseasForbbidenUrlWithAppid:(id)arg1;
- (id)scanQrCodeOffLineForbbidenUrlWithAppid:(id)arg1;
- (id)waappBanSceneWithAppid:(id)arg1 banScene:(unsigned long long)arg2;
- (id)waappDetailInfoViewURLWithAppid:(id)arg1;
- (id)lowVersionWithAppid:(id)arg1 updateType:(unsigned long long)arg2;
- (id)forbbidenUrlWithAppid:(id)arg1 offShelfType:(unsigned long long)arg2;
- (id)exposeURLForKFSessionWithAppid:(id)arg1 businessAppid:(id)arg2 pageId:(id)arg3;
- (id)exposeURLWithUsername:(id)arg1 msgid:(id)arg2 templateid:(id)arg3 screenshotId:(id)arg4;
- (id)exposeURLWithAppid:(id)arg1 msgid:(id)arg2 from:(unsigned long long)arg3;
- (id)exposeURLWithAppid:(id)arg1 pageid:(id)arg2 from:(unsigned long long)arg3 debugMode:(unsigned long long)arg4 appVersion:(unsigned int)arg5 exposeExtraInfo:(id)arg6;
- (id)feedbackURLWithAppid:(id)arg1;
- (void)clearCacheChannelMsgsForAppid:(id)arg1;
- (id)fetchCacheChannelMsgsForAppid:(id)arg1;
- (void)handleUpdateWxaUserSwitchNotify:(id)arg1;
- (void)parseUpdateWxaUserSwitchNotify:(id)arg1;
- (void)parseWeAppMsgChannelNotify:(id)arg1;
- (void)parseWeAppUpdateWxaUsageListNotify:(id)arg1;
- (void)parseForceOpenAppNotifyMsg:(id)arg1;
- (void)deleteDebugModeAppInfo:(id)arg1 debugType:(unsigned long long)arg2;
- (void)insertDebugModeAppInfo:(id)arg1;
- (void)parseNotifyMsg:(id)arg1;
- (id)getSaveInfoKeyWithAppid:(id)arg1 debugType:(unsigned int)arg2;
- (void)parseConfigNotify:(id)arg1;
- (void)markOpenWeappDestop;
- (_Bool)shouldShowCopyPathMenu:(id)arg1;
- (_Bool)shouldShowLiveAppMenu;
- (_Bool)jitModeEnableXHR:(id)arg1;
- (_Bool)jitModeForAppID:(id)arg1 forPreload:(_Bool)arg2;
- (_Bool)jitModeForAppID:(id)arg1;
- (_Bool)gameLiveForAppID:(id)arg1 versionType:(int)arg2;
- (_Bool)isPkgEncryptLibUseBatchInject;
- (_Bool)usePkgEncrypt:(_Bool)arg1 appId:(id)arg2;
- (double)durationInShowToastWhenPasteFor16;
- (_Bool)showToastWhenPasteFor16;
- (_Bool)openEvaluate;
- (_Bool)useNewPopWhenSwitchTab;
- (_Bool)parallelDownloadSubPackage;
- (_Bool)useSimulatedNativeProfile;
- (void)handleUpdateWxaListNotify:(id)arg1;
- (void)parseUpdateWxaUsageListNotify:(id)arg1;
- (id)parseCopyPathMenuInfoList:(struct XmlReaderNode_t *)arg1;
- (void)parsePushComand:(id)arg1;
- (void)parseDebugAppCodeUpdated:(id)arg1;
- (void)parseWeAppSyncCommand:(id)arg1;
- (void)onGetNewXmlMsg:(id)arg1 type:(id)arg2 msgContent:(id)arg3 msgSendTime:(unsigned long long)arg4;
- (void)saveEnableCopyPathMenuNotifyStorage:(id)arg1;
- (void)loadEnableCopyPathMenuNotifyStorage;
- (void)loadMPShortLinkGlobalHighLightSwitch;
- (_Bool)savePluginNotifyStorage:(id)arg1;
- (void)loadPluginNotifyStorage;
- (_Bool)deleteDebugModePluginAppInfo:(id)arg1 versionDesc:(id)arg2;
- (void)setDebugModeDownloadPluginPkgCompleteWithAppid:(id)arg1 versionDesc:(id)arg2 value:(_Bool)arg3;
- (_Bool)isDebugModeAlreadyUpdatePluginPkgWithAppid:(id)arg1 versionDesc:(id)arg2;
- (id)getAllDebugModePluginInfo;
- (id)getAllDebugModePluginInfoDic;
- (id)getDeubgModePluginAppInfoByAppid:(id)arg1 versionDesc:(id)arg2;
- (id)getSavePluginInfoKeyWithAppid:(id)arg1 versionDesc:(id)arg2;
- (void)insertDebugModePluginAppInfo:(id)arg1;
- (void)saveDebugModePluginAppInfo:(id)arg1;
- (void)saveNotifyStorage:(id)arg1;
- (void)loadNotifyStorage;
- (void)clearDebugModeDownloadStateWithAppid:(id)arg1;
- (void)setDebugModeDownloadPkgCompleteWithAppid:(id)arg1 debugType:(unsigned long long)arg2 packageType:(unsigned long long)arg3 moduleName:(id)arg4 checkSum:(id)arg5 downloadUrl:(id)arg6 value:(_Bool)arg7;
- (_Bool)isDebugModeAlreadyUpdatePkgWithAppid:(id)arg1 debugType:(unsigned long long)arg2 packageType:(unsigned long long)arg3 moduleName:(id)arg4;
- (id)getAllDebugModeAppInfo;
- (id)getAllDebugModeAppInfoForceSave:(_Bool)arg1;
- (id)getDeubgModeAppInfoByName:(id)arg1 debugType:(unsigned long long)arg2;
- (id)getPublicResDebugModeAppInfo;
- (_Bool)isEnableWeAppMonitor:(id)arg1;
- (void)enableWeAppMonitor:(id)arg1 enable:(_Bool)arg2;
- (void)setRenderType:(long long)arg1 forAppId:(id)arg2;
- (long long)appRenderType:(id)arg1;
- (_Bool)closeUseVConsoleWithAppID:(id)arg1;
- (_Bool)openUseVConsoleWithAppID:(id)arg1;
- (_Bool)pageIsUseVConsoleForAppID:(id)arg1;
- (id)getMMUserAgent;
- (void)updateMMUserAgent;
- (id)getAppWebPageFullUrlWithAppid:(id)arg1 version:(unsigned long long)arg2 relativePath:(id)arg3 isDebugMode:(unsigned long long)arg4;
- (id)getCdnBaseUrlStrWithAppContact:(id)arg1;
- (id)getCdnBaseUrlStrIsDebugMode:(unsigned long long)arg1;
- (_Bool)isOpenFindFriendEntry;
- (void)onServiceEnterForeground;
- (void)onServiceEnterBackground;
- (void)onServiceClearData;
- (void)onServiceInit;
- (void)dealloc;
- (id)init;
- (void)handleCheckPrehot:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (unsigned long long)tryGetPreHotCheckResultWithAppid:(id)arg1 username:(id)arg2;
- (void)requestSilentOpenPermissionForAppid:(id)arg1 username:(id)arg2 scene:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (id)darkObjectForAppID:(id)arg1 andPaths:(id)arg2;
- (id)darkArrayForAppID:(id)arg1 andPaths:(id)arg2;
- (id)darkDictionaryForAppID:(id)arg1 andPaths:(id)arg2;
- (_Bool)darkBoolForAppID:(id)arg1 andPath:(id)arg2;
- (id)darkStringForAppID:(id)arg1 andPaths:(id)arg2;
- (_Bool)darkHasKeyForAppID:(id)arg1 andPath:(id)arg2;
- (void)appendAppConfigDarkJSON:(id)arg1 key:(id)arg2 forAppID:(id)arg3;
- (void)setAppConfigDarkJSON:(id)arg1 forAppID:(id)arg2;
- (id)pageDarkAttributesForAppID:(id)arg1 path:(id)arg2;
- (id)getGlobalConfigDark:(id)arg1 appId:(id)arg2;
- (id)tabDarkAttributesForAppID:(id)arg1;
- (id)pageWindowDarkAttributesForAppID:(id)arg1;
- (id)pageWindowDarkAttributesForAppID:(id)arg1 page:(id)arg2;
- (void)loadPluginConfigDarkWithHostAppID:(id)arg1 pluginAppID:(id)arg2 data:(id)arg3;
- (void)loadAppConfigDarkWithAppID:(id)arg1 data:(id)arg2;
- (_Bool)isDarkmodeConfigAvailableForAppID:(id)arg1;
- (void)appConfigDarkJSONCategoryOnServiceClearData;
- (void)appConfigDarkJSONCategoryOnServiceInit;
- (void)contactAttributeCategoryOnServiceClearData;
- (void)contactAttributeCategoryOnServiceInit;
- (void)setContactAttributeWithAppID:(id)arg1 appBrandInfo:(id)arg2;
- (id)contactAttributeWithAppID:(id)arg1;
- (id)getGameExtraInfoWithAppID:(id)arg1;
- (void)gameExtraInfoCategoryOnServiceClearData;
- (void)gameExtraInfoCategoryOnServiceInit;
- (id)genKeyForAppID:(id)arg1 appVersion:(unsigned long long)arg2 debugModeType:(unsigned int)arg3;
- (void)clearPackageConfigForAppid:(id)arg1;
- (id)getPackageConfigWithContact:(id)arg1 debugModeType:(unsigned int)arg2 getError:(id *)arg3;
- (void)packageConfigCategoryOnServiceClearData;
- (void)packageConfigCategoryOnServiceInit;
- (id)getCertificateDataListWithAppID:(id)arg1 appVersion:(unsigned int)arg2;
- (void)setCertificateDataList:(id)arg1 withAppID:(id)arg2 appVersion:(unsigned int)arg3;
- (void)loadCertificateDataListFromData:(id)arg1 withAppID:(id)arg2 appVersion:(unsigned int)arg3;
- (void)networkCertificateCategoryOnServiceClearData;
- (void)networkCertificateCategoryOnServiceInit;
- (void)updateStorageMinMB:(unsigned int)arg1;
- (void)onInitWXAFlagshipTags:(id)arg1;
- (void)onInitWXARelievedBuyTags:(id)arg1;
- (void)updateSystemSettingData:(id)arg1;
- (void)loadSystemSettingData;
- (id)systemSetting;
- (void)systemSettingCategoryOnServiceClearData;
- (void)systemSettingCategoryOnServiceInit;
- (void)replaceOrDeleteObjectInOldDictionary:(id)arg1 withObjectInNewDictionary:(id)arg2 key:(id)arg3 defaultValue:(id)arg4;
- (id)replaceNormalAttrWithSinglePageAttr:(id)arg1;
- (id)objectForAppID:(id)arg1 andPaths:(id)arg2;
- (id)arrayForAppID:(id)arg1 andPaths:(id)arg2;
- (id)dictionaryForAppID:(id)arg1 andPaths:(id)arg2;
- (_Bool)boolForAppID:(id)arg1 andPath:(id)arg2;
- (id)stringForAppID:(id)arg1 andPaths:(id)arg2;
- (_Bool)hasKeyForAppID:(id)arg1 andPath:(id)arg2;
- (void)appendAppConfigJSON:(id)arg1 key:(id)arg2 forAppID:(id)arg3;
- (void)setAppConfigJSON:(id)arg1 forAppID:(id)arg2;
- (id)preloadRuleAttributesForAppID:(id)arg1 path:(id)arg2;
- (id)pageAttributesForAppID:(id)arg1 path:(id)arg2;
- (unsigned int)getRequiredPrivateInfosBitsetForAppID:(id)arg1;
- (_Bool)useSkylineForAppId:(id)arg1 path:(id)arg2;
- (_Bool)useSkylineDefaultForAppId:(id)arg1;
- (_Bool)useSkylineForAppId:(id)arg1;
- (id)getGlobalConfig:(id)arg1 appId:(id)arg2;
- (void)makeNativeConfig:(id)arg1;
- (void)trimPages:(id)arg1;
- (void)trimPermission:(id)arg1;
- (void)trimPreloadRule:(id)arg1;
- (void)trimPage:(id)arg1;
- (void)trimTabbar:(id)arg1;
- (void)trimSubPackage:(id)arg1 byKeyName:(id)arg2;
- (void)trimSubPackagesChildNodePages:(id)arg1;
- (id)appConfigJsonTextForAppID:(id)arg1 pruneWxConfigByPage:(_Bool)arg2 isForWebView:(_Bool)arg3;
- (id)appConfigJsonDicForAppID:(id)arg1 pruneWxConfigByPage:(_Bool)arg2 isForWebView:(_Bool)arg3;
- (id)preloadSubPackagesAttributesForAppID:(id)arg1;
- (id)preloadResourcesAttributesForAppID:(id)arg1;
- (_Bool)manualHideSplashForAppID:(id)arg1;
- (id)networkTimeoutAttributeForAppID:(id)arg1;
- (id)entryPagePathForAppID:(id)arg1;
- (id)tabAttributesForAppID:(id)arg1;
- (_Bool)isTabPageWithPagePath:(id)arg1 appID:(id)arg2;
- (id)singlePageModeAttributesForAppID:(id)arg1;
- (id)pageWindowAttributesForAppID:(id)arg1;
- (_Bool)customOpenPage:(id)arg1 page:(id)arg2;
- (id)singlePageModeAttributesForAppID:(id)arg1 page:(id)arg2;
- (id)pageWindowAttributesForAppID:(id)arg1 page:(id)arg2;
- (id)appConfigDicForAppID:(id)arg1;
- (void)loadPluginConfigWithHostAppID:(id)arg1 pluginAppID:(id)arg2 data:(id)arg3;
- (void)loadAppConfigWithAppID:(id)arg1 data:(id)arg2;
- (void)appConfigJSONCategoryOnServiceClearData;
- (void)appConfigJSONCategoryOnServiceInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

