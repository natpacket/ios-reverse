//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMTabBarBaseViewController.h"

#import "BrandTimelineMsgMgrExt-Protocol.h"
#import "CreateChatLogicDelegate-Protocol.h"
#import "IAutoSetRemarkExt-Protocol.h"
#import "IChatBoxMgrExt-Protocol.h"
#import "IWCDeviceBrandMgrExt-Protocol.h"
#import "IWXTalkPresentExt-Protocol.h"
#import "MMConfigMgrExt-Protocol.h"
#import "MMKernelExt-Protocol.h"
#import "MMLimitedModeExt-Protocol.h"
#import "MMTableViewDelegate-Protocol.h"
#import "MMUIViewControllerExt-Protocol.h"
#import "MainFrameHeaderDelegate-Protocol.h"
#import "MainFrameLogicControllerDelegate-Protocol.h"
#import "MainFrameSectionFoldViewDelegate-Protocol.h"
#import "MainSessionEditingLogicDelegate-Protocol.h"
#import "MainTableDelegate-Protocol.h"
#import "MiniTaskUIMgrExt-Protocol.h"
#import "MuteBrandMgrExt-Protocol.h"
#import "NewMainFrameRightTopMenuBtnDelegate-Protocol.h"
#import "SelectContactsViewControllerDelegate-Protocol.h"
#import "TextStateMgrExt-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UISearchBarDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "WAMainFrameTaskBarLogicDelegate-Protocol.h"
#import "WCActionSheetDelegate-Protocol.h"
#import "WCLazyInitObjectProtocol-Protocol.h"
#import "contactInfoDelegate-Protocol.h"

@class CreateChatLogic, MFTitleView, MMLoadingView, MMSessionInfo, MMTimer, MMUIViewController, MainFrameHeaderLogic, MainFrameLogicController, MainFrameSectionFoldView, MainFrameTableView, MainFrameUnreadReporter, MainSessionEditingLogic, NSIndexPath, NSString, UIColor, UIDynamicAnimator, UIImageView, UIView, WAMainFrameTaskBarLogic, WAMainFrameTaskBarView, WAMainFrameTopHeaderView, WCSearchBar;
@protocol BrandTLViewControllerProtocol, UIViewControllerPreviewing;

@interface NewMainFrameViewController : MMTabBarBaseViewController <SelectContactsViewControllerDelegate, WAMainFrameTaskBarLogicDelegate, MMUIViewControllerExt, MMConfigMgrExt, BrandTimelineMsgMgrExt, TextStateMgrExt, NewMainFrameRightTopMenuBtnDelegate, MMTableViewDelegate, MMLimitedModeExt, MiniTaskUIMgrExt, MainFrameSectionFoldViewDelegate, MainSessionEditingLogicDelegate, IChatBoxMgrExt, MuteBrandMgrExt, MainFrameLogicControllerDelegate, UITableViewDelegate, UITableViewDataSource, UISearchBarDelegate, WCActionSheetDelegate, contactInfoDelegate, CreateChatLogicDelegate, MMKernelExt, IWXTalkPresentExt, IAutoSetRemarkExt, UIGestureRecognizerDelegate, MainTableDelegate, IWCDeviceBrandMgrExt, MainFrameHeaderDelegate, WCLazyInitObjectProtocol>
{
    MainFrameLogicController *m_mainFrameLogicController;
    MainFrameTableView *m_tableView;
    UIImageView *m_logoImageView;
    MFTitleView *m_titleView;
    MMLoadingView *m_loadingView;
    struct CGPoint m_tableContentOffset;
    unsigned int m_uiTipStatus;
    CreateChatLogic *m_createChatLogic;
    _Bool m_tableViewReady;
    MainFrameHeaderLogic *m_headerLogic;
    NSString *m_nsTitle;
    int m_voiceSearchLevelNumber;
    double m_tableViewOffset;
    _Bool m_bIsLastViewStatusBarHidden;
    _Bool m_needResetTableViewOffset;
    MMSessionInfo *_peekedSession;
    _Bool m_firstLoadFinished;
    double m_messageCellHeight;
    WAMainFrameTaskBarLogic *m_taskBarLogic;
    WAMainFrameTopHeaderView *m_tableHeaderTopView;
    WAMainFrameTaskBarView *m_taskBarView;
    struct CGPoint m_tableViewStartDraggingContentOffset;
    struct CGPoint m_tableViewLastContentOffset;
    _Bool m_isDraggingDown;
    _Bool m_isScrollingDown;
    _Bool m_isShowTableHeaderTopView;
    _Bool m_isSettingShowTableHeaderTopView;
    _Bool m_isSettingHideTableHeaderTopView;
    _Bool m_dragCancelPreviousShowTableHeaderTopView;
    _Bool m_dragCancelPreviousHideTableHeaderTopView;
    _Bool m_isChangingTableHeaderTopViewHeight;
    _Bool m_shouldReloadOnAppear;
    UIColor *m_navBGOriginColor;
    double m_originWindowLevel;
    long long m_lastRowNum;
    NSString *m_confirmingSessionName;
    MMSessionInfo *m_swipedSession;
    MMSessionInfo *m_selectedSession;
    _Bool m_firstDoMainLazyThing;
    double lastScreenHeight;
    UIView *m_inviteFriendFooterView;
    MMUIViewController<BrandTLViewControllerProtocol> *m_brandTimelineViewController;
    MMTimer *m_brandTimelineCacheTimer;
    id <UIViewControllerPreviewing> _previewingContext;
    NSIndexPath *_peekedIndexPath;
    _Bool haveLazyInit;
    _Bool _disableTableAnimation;
    _Bool _isAppear;
    _Bool _willAppearFromFailedMiniTaskPushAnimation;
    WCSearchBar *_searchBar;
    MainFrameUnreadReporter *_unreadReporter;
    UIDynamicAnimator *_animator;
    MainFrameSectionFoldView *_topSessionFoldView;
    double _foldViewFloatingOffset;
    MainSessionEditingLogic *_sessionEditingLogic;
    unsigned long long _lastReloadTableTime;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool willAppearFromFailedMiniTaskPushAnimation; // @synthesize willAppearFromFailedMiniTaskPushAnimation=_willAppearFromFailedMiniTaskPushAnimation;
@property(nonatomic) _Bool isAppear; // @synthesize isAppear=_isAppear;
@property(nonatomic) unsigned long long lastReloadTableTime; // @synthesize lastReloadTableTime=_lastReloadTableTime;
@property(retain, nonatomic) MainSessionEditingLogic *sessionEditingLogic; // @synthesize sessionEditingLogic=_sessionEditingLogic;
@property(nonatomic) double foldViewFloatingOffset; // @synthesize foldViewFloatingOffset=_foldViewFloatingOffset;
@property(nonatomic) _Bool disableTableAnimation; // @synthesize disableTableAnimation=_disableTableAnimation;
@property(retain, nonatomic) MainFrameSectionFoldView *topSessionFoldView; // @synthesize topSessionFoldView=_topSessionFoldView;
@property(retain, nonatomic) UIDynamicAnimator *animator; // @synthesize animator=_animator;
@property(retain, nonatomic) MainFrameUnreadReporter *unreadReporter; // @synthesize unreadReporter=_unreadReporter;
@property(retain, nonatomic) WCSearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) MainFrameTableView *m_tableView; // @synthesize m_tableView;
@property(nonatomic) _Bool haveLazyInit; // @synthesize haveLazyInit;
@property(retain, nonatomic) NSString *m_nsTitle; // @synthesize m_nsTitle;
@property(retain, nonatomic) CreateChatLogic *m_createChatLogic; // @synthesize m_createChatLogic;
- (void)registerYReportSdk;
- (_Bool)isUnexpectedClickAtIndexPath:(id)arg1;
- (_Bool)accessibilityScroll:(long long)arg1;
- (void)setTableViewAccessibilityElementExceptTaskBar:(_Bool)arg1;
- (void)onMainFrameShowChatBoxGuideAnimation;
- (_Bool)shouldShowFoldSectionTopSep;
- (void)onSelectAtSectionFoldView;
- (id)curViewController;
- (void)mmTableViewDidFinishedLoading:(id)arg1;
- (void)didEnterBackground:(id)arg1;
- (void)willEnterForeground:(id)arg1;
- (void)onRedDotShowed:(_Bool)arg1;
- (void)onTextStateDataUpdated;
- (void)onTextStateDataLoaded;
- (void)onDeleteBrandSessionHolder;
- (void)checkReleaseBrandTLWithNewExptConfig:(id)arg1;
- (void)onBrandTLExptStatusChange;
- (void)onChangeBizTimelineDisplayMode;
- (void)onMigrateBrandMsgFinish:(unsigned long long)arg1;
- (void)onBrandTimelineCacheTimeOut;
- (void)onBrandTimelineReturn;
- (void)MMUIViewControllerDidBeRemoved:(id)arg1;
- (void)onLastChat;
- (void)onNextChat;
- (void)closeCurChat;
- (void)newChat;
- (void)onNextUnreadChat;
- (void)onSearch;
- (void)setSearchBarToTableHeaderView;
- (id)tagForCurrentPage;
- (void)traitCollectionDidChange:(id)arg1;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (void)setupDeepLinkConfig;
- (id)getVCWithDeepLinkName:(id)arg1;
- (void)openMassSend;
- (void)onMiniTaskEntryShowStateChanged;
- (void)onLimitedModeBizLevelChange:(long long)arg1 bizType:(long long)arg2;
- (void)onLimitedModeChanged;
- (void)onMMDynamicConfigUpdated;
- (_Bool)checkIsMainFrameScrollView:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)onSetStrangerRemark:(id)arg1;
- (void)OnTrackRoomMemberChange:(id)arg1 withNewMemberList:(id)arg2;
- (void)OnRoomMemberChange:(id)arg1 withNewMemberList:(id)arg2;
- (void)updateItem:(id)arg1;
- (void)onAuthOK;
- (void)SearchBarBecomeUnActive;
- (_Bool)shouldShowTabbar;
- (void)updateViewWhenSelectTab:(_Bool)arg1;
- (void)changeNetworkStatus:(unsigned int)arg1;
- (unsigned int)getAppIconTotalUnreadCount;
- (unsigned int)getTotalUnreadCount;
- (void)clearResource;
- (void)newMessageByContact:(id)arg1 msgWrapToAdd:(id)arg2;
- (void)newMessageByContact:(id)arg1 msgWrapToAdd:(id)arg2 animated:(_Bool)arg3;
- (void)newMessageByContact:(id)arg1 msgWrapToAdd:(id)arg2 animated:(_Bool)arg3 FromOtherTab:(_Bool)arg4;
- (void)newMessageByContact:(id)arg1 msgWrapToAdd:(id)arg2 animated:(_Bool)arg3 FromOtherTab:(_Bool)arg4 reuse:(_Bool)arg5 extraInfo:(id)arg6 navigationController:(id)arg7 completion:(CDUnknownBlockType)arg8;
- (void)newMessageByContact:(id)arg1 msgWrapToAdd:(id)arg2 animated:(_Bool)arg3 FromOtherTab:(_Bool)arg4 reuse:(_Bool)arg5 extraInfo:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)newMessageByContact:(id)arg1 msgWrapToAdd:(id)arg2 animated:(_Bool)arg3 FromOtherTab:(_Bool)arg4 reuse:(_Bool)arg5 extraInfo:(id)arg6;
- (void)resetTableViewOffset:(id)arg1;
- (void)newMessageFromContactInfo:(id)arg1;
- (void)stopLoading;
- (void)startLoading;
- (void)stopLoadingForSessionRebuild;
- (void)startLoadingForSessionRebuild;
- (void)initLoadingView;
- (void)deleteSessionCell:(unsigned int)arg1 atSection:(long long)arg2 withUser:(id)arg3;
- (void)selectCellForName:(id)arg1;
- (void)cancelSelectedCell;
- (void)updateAllItemTimeLabel;
- (void)updateSession:(id)arg1;
- (void)clearSessionCache;
- (void)reloadSessions;
- (void)insertSessionCellAtIndexes:(id)arg1;
- (void)deleteSessionCellAtIndexes:(id)arg1;
- (void)doGlobalSearchPrepareWork;
- (void)cancelSearch;
- (void)setSearchBarActive:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isSearching;
- (void)onLogicOpenSession:(id)arg1;
- (void)onLogicDeleteSessionByUsername:(id)arg1;
- (void)onLogicHideSession:(id)arg1;
- (long long)logicGetCountForSection:(long long)arg1;
- (void)logicUpdateSession:(id)arg1;
- (id)logicGetCellDataAtIndexPath:(id)arg1;
- (id)logicGetSessionAtIndexPath:(id)arg1;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)shouldDeselectCellByUsername:(id)arg1 indexPath:(id)arg2;
- (void)updateSelectCellByUsername:(id)arg1 indexPath:(id)arg2 cell:(id)arg3;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)handleSelectIndexPath:(id)arg1 tableView:(id)arg2;
- (void)openContactInfoView:(id)arg1;
- (_Bool)isNeedShowProfileInVoiceSearch:(long long)arg1;
- (_Bool)isOpenPluginContactInfoView:(id)arg1;
- (void)openPluginContactInfoView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (void)tryOpenMessageContentView:(id)arg1 startSendMessage:(_Bool)arg2 msgWrapToAdd:(id)arg3 animated:(_Bool)arg4 jumpToFirstUnreadNode:(_Bool)arg5 indexPath:(id)arg6 reuse:(_Bool)arg7 extraInfo:(id)arg8 navigationController:(id)arg9 firstUnreadMessageWrap:(id)arg10 completion:(CDUnknownBlockType)arg11;
- (void)openMessageContentView:(id)arg1 startSendMessage:(_Bool)arg2 msgWrapToAdd:(id)arg3 animated:(_Bool)arg4 jumpToFirstUnreadNode:(_Bool)arg5 indexPath:(id)arg6 reuse:(_Bool)arg7 extraInfo:(id)arg8 navigationController:(id)arg9 completion:(CDUnknownBlockType)arg10;
- (void)openMessageContentView:(id)arg1 startSendMessage:(_Bool)arg2 msgWrapToAdd:(id)arg3 animated:(_Bool)arg4 jumpToFirstUnreadNode:(_Bool)arg5 indexPath:(id)arg6 reuse:(_Bool)arg7 extraInfo:(id)arg8;
- (void)tryMoveToMainFrameTab;
- (void)openMessageContentView:(id)arg1 startSendMessage:(_Bool)arg2 msgWrapToAdd:(id)arg3 animated:(_Bool)arg4 jumpToFirstUnreadNode:(_Bool)arg5 indexPath:(id)arg6;
- (void)openEnterpriseChatSessionListView:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)openEnterpriseBrandSessionView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)openWWKFSessionView:(CDUnknownBlockType)arg1;
- (void)openWeAppSessionView:(CDUnknownBlockType)arg1;
- (void)internalOpenBrandSessionViewFromSource:(unsigned long long)arg1 sessionInfo:(id)arg2 indexPath:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)openBrandSessionViewFromSource:(unsigned long long)arg1 sessionInfo:(id)arg2 indexPath:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)openBrandSessionViewFromSource:(unsigned long long)arg1 sessionInfo:(id)arg2 indexPath:(id)arg3;
- (void)openBrandSessionViewFromSource:(unsigned long long)arg1;
- (void)openWeSportView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateNearMode;
- (void)onCreateChatContactReturn:(id)arg1;
- (_Bool)isTopRightMenuShowID:(id)arg1;
- (void)backToSplitViewEmptyViewController:(id)arg1;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)resetViewStatus;
- (void)unLoadView;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidPop:(_Bool)arg1;
- (void)viewWillPop:(_Bool)arg1;
- (void)removeMainFrameTip;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)initView;
- (void)showInviteFriendList;
- (id)getViewController;
- (void)OpenContactInfo:(id)arg1;
- (void)PopViewContoller;
- (void)PushViewController:(id)arg1;
- (void)removeRow:(unsigned int)arg1;
- (void)insertRow:(unsigned int)arg1;
- (_Bool)checkHeaderRowValid:(unsigned int)arg1;
- (void)reloadAll;
- (void)refreshAfterMuteFlagChange;
- (void)updateFoldViewFloatingOffset;
- (void)updateTopSessionFoldView;
- (void)forceReInitTableView;
- (void)initFooterView;
- (void)initHeaderLogicAndHeaderView;
- (void)initTableView;
- (void)initNavigationTitileView;
- (void)initTitle;
- (void)tryDoLazyInitThing;
- (void)initData;
- (void)viewDidLayoutSubviews;
- (void)viewDidTransitionToNewSize;
- (void)reLayoutSubviews;
- (void)updateTitleView;
- (void)updateUnReadCount;
- (void)willAppear;
- (void)onClickAtMainFrameTab;
- (void)setNewMainFrameTableViewContentOffsetToTheFirstUnreadSessionAndOpen:(_Bool)arg1;
- (void)setNewMainFrameTableViewContentOffset:(struct CGPoint)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (long long)maxSessionCountInOneScreen;
- (_Bool)isViewControllerVisible;
- (id)firstSessionIndexPath;
- (void)appBecomeActive;
- (void)doMainLazyThing;
- (void)delayToLoadMainTableViewData;
- (void)goToLazyInitObject;
- (double)timeToLazyInitAfterOpenFirstView;
- (_Bool)shouldShowQuickReplyPush:(id)arg1;
- (void)onMiniTaskPushGestureEnded:(_Bool)arg1;
- (void)notifyMiniTaskEntryStateChanegd;
- (void)notifyMiniTaskEntryWhenViewDidDisappear;
- (void)notifyMiniTaskEntryWhenViewWillDisappear;
- (void)notifyMiniTaskEntryWhenViewDidAppear;
- (void)notifyMiniTaskEntryWhenViewWillAppear;
- (void)notifyToLazyInitMiniTaskVC;
- (void)openSelectHKReceiveOrPayMoneyFromShortcut;
- (void)openSelectReceiveOrPayMoneyFromShortcut;
- (void)openSelectReceiveOrPayMoney;
- (void)openOverseaSelectReceiveOrPayMoney;
- (void)openOverseaFacingReceiveMoney;
- (void)openFace2FaceReceiveMoney;
- (void)onRadar;
- (void)onMassSend;
- (void)showQRInfoView;
- (void)showEmoticonStoreView;
- (void)showWCPayView;
- (void)showMyWCView;
- (void)onSelectContactReturn:(id)arg1 atScene:(unsigned int)arg2;
- (_Bool)onFilterContactCandidate:(id)arg1;
- (void)createVideoVOIPChat;
- (void)createVoiceVOIPChat;
- (void)onCreateScanCamera;
- (void)onCreateNewMessage;
- (void)notifyTaskBarUpdateLiveInfo;
- (_Bool)shouldMiniTaskGestureBegin;
- (void)notifyLimitedModeUpdated;
- (void)notifyTaskBarOnRightBtnRedDotShow:(_Bool)arg1;
- (void)notifyTaskBarOnUpdateTitleViewNearMode;
- (void)notifyTaskBarOnUpdateTitleView:(unsigned int)arg1 title:(id)arg2;
- (unsigned long long)handleTouchesShouldBegin:(id)arg1 withEvent:(id)arg2 inContentView:(id)arg3;
- (unsigned long long)handleTouchesShouldCancelInContentView:(id)arg1;
- (_Bool)checkShouldBlockMainFrameScrollView;
- (void)checkTaskBarViewWidth;
- (void)setTableViewContentOffset:(struct CGPoint)arg1;
- (void)willOpenMainListVC;
- (id)getLeftBarButton;
- (id)getRightBarButton;
- (id)getTaskBarView;
- (void)onEnterForeground;
- (void)didOpenWeapp:(id)arg1 isSuccess:(_Bool)arg2;
- (void)willOpenWeapp:(id)arg1;
- (_Bool)isTaskBarNeedHideTabBar;
- (void)onTapOnFakeRightMenuButton;
- (void)onTapOnFoldButton;
- (void)willEndSearch;
- (void)didEnterWeappSearchPage;
- (void)onSearchPageClickCancel;
- (void)onTapOnSearchButton;
- (void)onStarNodeShowStatusDidChangedTo:(_Bool)arg1;
- (void)didRotateToInterfaceOrientation:(long long)arg1;
- (void)onTaskBarHeightDidChangeTo:(double)arg1;
- (void)onDeleteToEmptyTaskBar;
- (void)onReceiveVisibleTick;
- (void)doUpdateTaskBarData;
- (void)updateTaskBarDataIfNeeded;
- (void)onTaskBarSectionShouldRemove:(id)arg1;
- (void)onTaskBarDataUpdated:(_Bool)arg1;
- (void)taskBarDidDragUpToClose;
- (_Bool)useWhiteStatusBarColorWhenShown;
- (_Bool)isXDevice;
- (void)showStatusBar;
- (void)hideStatusBar;
- (double)getFullScreenHeight;
- (_Bool)useBlackStatusbar;
- (struct UIEdgeInsets)changeContentInsetTopTo:(double)arg1;
- (void)changeTaskBarViewHeightTo:(double)arg1;
- (_Bool)isNeedAnimateNavigationBarBeforeSettingContentOffSet;
- (void)checkTaskBarHiddenState;
- (void)hideNavigationBarForTaskBarCloseScene:(unsigned long long)arg1;
- (void)setTableViewContentInsetOffsetWithoutScrollWithContentInset:(struct UIEdgeInsets)arg1 contentOffset:(struct CGPoint)arg2;
- (void)setTableViewContentInsetAndOffsetWithIsTopViewShow:(_Bool)arg1 fromScene:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3 canceled:(CDUnknownBlockType)arg4;
- (void)showTableHeaderTopView:(_Bool)arg1 fromScene:(unsigned long long)arg2;
- (void)endSetHideTableHeaderTopView;
- (void)beginSetHideTableHeaderTopView;
- (void)endSetShowTableHeaderTopView;
- (void)beginSetShowTableHeaderTopView;
- (_Bool)navigationBarBlurEffect;
- (id)navigationBarBackgroundColor;
- (void)initFakeNavigatioBackgroundIfNeeded;
- (void)changeNavigationFakeBackgroundColor;
- (void)endDragToShow;
- (void)startDragToShow;
- (id)getAddBarButton;
- (void)notifyTaskBarOnViewDidTransitionToNewSize;
- (void)notifyToLazyInit;
- (void)setTableHeaderTopViewHiddenIfNotLimitedMode:(_Bool)arg1;
- (void)initTableHeaderTopView;
- (void)resetNavBarButtonAlpha;
- (unsigned long long)checkDisappearScene;
- (void)notifyTaskBarOnViewDidDisappear;
- (void)notifyTaskBarOnViewWillDisappear;
- (void)notifyTaskBarOnViewWillAppear;
- (void)notifyTaskBarOnViewDidAppear;
- (void)notifyTaskBarOnWillFocusOnFirstUnreadSession;
- (void)notifyTaskBarOnDidEndSearch;
- (void)notifyTaskBarOnWillBeginSearch;
- (void)updateTabbarOffset:(double)arg1;
- (void)mainTableViewOffsetDidChangeTo:(struct CGPoint)arg1;
- (void)notifyTaskBarOnMainTableViewDidScroll:(id)arg1;
- (void)notifyTaskBarOnMainTableViewDidEndDragging:(id)arg1;
- (void)notifyTaskBarOnMainTableViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)notifyTaskBarOnMainTableViewWillBeginDragging:(id)arg1;
- (void)notifyTaskBarOnMainTableViewInitReady;
- (_Bool)needFixMaxIssueForiOS14_2Plus;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

