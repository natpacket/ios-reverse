//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WCFlexBaseView.h"

#import "TingBlurBackgroundImageViewDelegate-Protocol.h"
#import "TingProgressBarDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class CAGradientLayer, MMListenCommentInfo, MMListenRoomHeartBeatResponse, MMUIButton, MMUILabel, NSMutableArray, NSString, TingAnimatedButton, TingBlurBackgroundImageView, TingButton, TingItem, TingListenRoomInteractionView, TingPageControl, TingPlayBottomToolsContainerView, TingPlayButton, TingPlayListButton, TingPlayRateButton, TingPlayerCoverView, TingProgressBar, TingRecommendInfoDisplayView, UIColor, UIControl, UIImageView, UIPanGestureRecognizer, UIScrollView, UITapGestureRecognizer, UIView, UIViewPropertyAnimator, WCMarqueeLabel;
@protocol TingPlayerViewDelegate;

@interface TingPlayerView : WCFlexBaseView <TingProgressBarDelegate, TingBlurBackgroundImageViewDelegate, UIGestureRecognizerDelegate>
{
    _Bool _hasAuthorPage;
    _Bool _isTingItemPlayable;
    _Bool _isVipMusic;
    _Bool _contentAnimating;
    _Bool _isGestureAnimating;
    _Bool _hasScrollToTop;
    id <TingPlayerViewDelegate> _delegate;
    TingItem *_item;
    unsigned long long _mode;
    unsigned long long _style;
    UIColor *_linkColor;
    UIView *_headerView;
    WCMarqueeLabel *_titleMarqueeLabel;
    UIControl *_authorInfoContainer;
    WCMarqueeLabel *_authorNameMarqueeLabel;
    UIImageView *_authorIconImageView;
    TingPlayerCoverView *_mvCoverView;
    TingPageControl *_pageControl;
    MMUIButton *_musicSourceButton;
    UIView *_recommendContainerView;
    TingRecommendInfoDisplayView *_recommendInfoDisplayView;
    TingListenRoomInteractionView *_listenRoomView;
    MMListenRoomHeartBeatResponse *_heartBeatResponse;
    MMUIButton *_jumpCategoryButton;
    TingButton *_forwardButton;
    TingButton *_likeButton;
    MMUIButton *_miniProgramCloseButton;
    TingProgressBar *_progressBar;
    TingAnimatedButton *_previousButton;
    TingPlayButton *_playPauseButton;
    TingAnimatedButton *_nextButton;
    TingAnimatedButton *_lastPlayListButton;
    TingAnimatedButton *_forward30Button;
    TingAnimatedButton *_backward15Button;
    TingPlayRateButton *_playRateButton;
    TingPlayListButton *_playListButton;
    TingPlayBottomToolsContainerView *_bottomToolsContainerView;
    UIView *_bottomBarContainerView;
    UIView *_bottomBarCommentAreaBackgroundView;
    TingBlurBackgroundImageView *_bottomBarContainerBgView;
    TingBlurBackgroundImageView *_backgroundView;
    UIView *_commentAreaBackgroundView;
    UIView *_contentView;
    UIView *_contentContainerView;
    UIView *_contentContainerTopDividingLine;
    UIView *_contentContainerDividingLine;
    UIView *_bottomBarPlayerContainerView;
    WCMarqueeLabel *_bottomBarTitleMarqueeLabel;
    WCMarqueeLabel *_bottomBarAuthorMarqueeLabel;
    TingPlayButton *_bottomBarPlayPauseButton;
    TingAnimatedButton *_bottomBarNextButton;
    TingAnimatedButton *_bottomBarForward30Button;
    WCMarqueeLabel *_landscapeTitleMarqueeLabel;
    WCMarqueeLabel *_landscapeAuthorMarqueeLabel;
    CAGradientLayer *_landscapeCoverMaskLayer;
    UIViewPropertyAnimator *_propertyAnimator;
    MMUIButton *_changeModeLineButton;
    MMUILabel *_noCopyRightLabel;
    MMUIButton *_noCopyRightButton;
    MMUIButton *_vipButton;
    MMUILabel *_guideLabel;
    UITapGestureRecognizer *_tapToCloseGestureRecognizer;
    MMListenCommentInfo *_commentInfo;
    NSString *_replaceListenId;
    NSMutableArray *_pendingLayoutBlocks;
    UIScrollView *_dragToCloseInstallScrollView;
    double _lastPanTransitionYValue;
    UIPanGestureRecognizer *_dragToCloseContentGestureRecognizer;
    struct CGPoint _lastTransition;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool hasScrollToTop; // @synthesize hasScrollToTop=_hasScrollToTop;
@property(retain, nonatomic) UIPanGestureRecognizer *dragToCloseContentGestureRecognizer; // @synthesize dragToCloseContentGestureRecognizer=_dragToCloseContentGestureRecognizer;
@property(nonatomic) double lastPanTransitionYValue; // @synthesize lastPanTransitionYValue=_lastPanTransitionYValue;
@property(nonatomic) struct CGPoint lastTransition; // @synthesize lastTransition=_lastTransition;
@property(nonatomic) _Bool isGestureAnimating; // @synthesize isGestureAnimating=_isGestureAnimating;
@property(nonatomic) _Bool contentAnimating; // @synthesize contentAnimating=_contentAnimating;
@property(nonatomic) __weak UIScrollView *dragToCloseInstallScrollView; // @synthesize dragToCloseInstallScrollView=_dragToCloseInstallScrollView;
@property(retain, nonatomic) NSMutableArray *pendingLayoutBlocks; // @synthesize pendingLayoutBlocks=_pendingLayoutBlocks;
@property(nonatomic) _Bool isVipMusic; // @synthesize isVipMusic=_isVipMusic;
@property(retain, nonatomic) NSString *replaceListenId; // @synthesize replaceListenId=_replaceListenId;
@property(nonatomic) _Bool isTingItemPlayable; // @synthesize isTingItemPlayable=_isTingItemPlayable;
@property(nonatomic) _Bool hasAuthorPage; // @synthesize hasAuthorPage=_hasAuthorPage;
@property(retain, nonatomic) MMListenCommentInfo *commentInfo; // @synthesize commentInfo=_commentInfo;
@property(retain, nonatomic) UITapGestureRecognizer *tapToCloseGestureRecognizer; // @synthesize tapToCloseGestureRecognizer=_tapToCloseGestureRecognizer;
@property(retain, nonatomic) MMUILabel *guideLabel; // @synthesize guideLabel=_guideLabel;
@property(retain, nonatomic) MMUIButton *vipButton; // @synthesize vipButton=_vipButton;
@property(retain, nonatomic) MMUIButton *noCopyRightButton; // @synthesize noCopyRightButton=_noCopyRightButton;
@property(retain, nonatomic) MMUILabel *noCopyRightLabel; // @synthesize noCopyRightLabel=_noCopyRightLabel;
@property(retain, nonatomic) MMUIButton *changeModeLineButton; // @synthesize changeModeLineButton=_changeModeLineButton;
@property(retain, nonatomic) UIViewPropertyAnimator *propertyAnimator; // @synthesize propertyAnimator=_propertyAnimator;
@property(retain, nonatomic) CAGradientLayer *landscapeCoverMaskLayer; // @synthesize landscapeCoverMaskLayer=_landscapeCoverMaskLayer;
@property(retain, nonatomic) WCMarqueeLabel *landscapeAuthorMarqueeLabel; // @synthesize landscapeAuthorMarqueeLabel=_landscapeAuthorMarqueeLabel;
@property(retain, nonatomic) WCMarqueeLabel *landscapeTitleMarqueeLabel; // @synthesize landscapeTitleMarqueeLabel=_landscapeTitleMarqueeLabel;
@property(retain, nonatomic) TingAnimatedButton *bottomBarForward30Button; // @synthesize bottomBarForward30Button=_bottomBarForward30Button;
@property(retain, nonatomic) TingAnimatedButton *bottomBarNextButton; // @synthesize bottomBarNextButton=_bottomBarNextButton;
@property(retain, nonatomic) TingPlayButton *bottomBarPlayPauseButton; // @synthesize bottomBarPlayPauseButton=_bottomBarPlayPauseButton;
@property(retain, nonatomic) WCMarqueeLabel *bottomBarAuthorMarqueeLabel; // @synthesize bottomBarAuthorMarqueeLabel=_bottomBarAuthorMarqueeLabel;
@property(retain, nonatomic) WCMarqueeLabel *bottomBarTitleMarqueeLabel; // @synthesize bottomBarTitleMarqueeLabel=_bottomBarTitleMarqueeLabel;
@property(retain, nonatomic) UIView *bottomBarPlayerContainerView; // @synthesize bottomBarPlayerContainerView=_bottomBarPlayerContainerView;
@property(retain, nonatomic) UIView *contentContainerDividingLine; // @synthesize contentContainerDividingLine=_contentContainerDividingLine;
@property(retain, nonatomic) UIView *contentContainerTopDividingLine; // @synthesize contentContainerTopDividingLine=_contentContainerTopDividingLine;
@property(retain, nonatomic) UIView *contentContainerView; // @synthesize contentContainerView=_contentContainerView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIView *commentAreaBackgroundView; // @synthesize commentAreaBackgroundView=_commentAreaBackgroundView;
@property(retain, nonatomic) TingBlurBackgroundImageView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) TingBlurBackgroundImageView *bottomBarContainerBgView; // @synthesize bottomBarContainerBgView=_bottomBarContainerBgView;
@property(retain, nonatomic) UIView *bottomBarCommentAreaBackgroundView; // @synthesize bottomBarCommentAreaBackgroundView=_bottomBarCommentAreaBackgroundView;
@property(retain, nonatomic) UIView *bottomBarContainerView; // @synthesize bottomBarContainerView=_bottomBarContainerView;
@property(retain, nonatomic) TingPlayBottomToolsContainerView *bottomToolsContainerView; // @synthesize bottomToolsContainerView=_bottomToolsContainerView;
@property(retain, nonatomic) TingPlayListButton *playListButton; // @synthesize playListButton=_playListButton;
@property(retain, nonatomic) TingPlayRateButton *playRateButton; // @synthesize playRateButton=_playRateButton;
@property(retain, nonatomic) TingAnimatedButton *backward15Button; // @synthesize backward15Button=_backward15Button;
@property(retain, nonatomic) TingAnimatedButton *forward30Button; // @synthesize forward30Button=_forward30Button;
@property(retain, nonatomic) TingAnimatedButton *lastPlayListButton; // @synthesize lastPlayListButton=_lastPlayListButton;
@property(retain, nonatomic) TingAnimatedButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) TingPlayButton *playPauseButton; // @synthesize playPauseButton=_playPauseButton;
@property(retain, nonatomic) TingAnimatedButton *previousButton; // @synthesize previousButton=_previousButton;
@property(retain, nonatomic) TingProgressBar *progressBar; // @synthesize progressBar=_progressBar;
@property(retain, nonatomic) MMUIButton *miniProgramCloseButton; // @synthesize miniProgramCloseButton=_miniProgramCloseButton;
@property(retain, nonatomic) TingButton *likeButton; // @synthesize likeButton=_likeButton;
@property(retain, nonatomic) TingButton *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(retain, nonatomic) MMUIButton *jumpCategoryButton; // @synthesize jumpCategoryButton=_jumpCategoryButton;
@property(retain, nonatomic) MMListenRoomHeartBeatResponse *heartBeatResponse; // @synthesize heartBeatResponse=_heartBeatResponse;
@property(retain, nonatomic) TingListenRoomInteractionView *listenRoomView; // @synthesize listenRoomView=_listenRoomView;
@property(retain, nonatomic) TingRecommendInfoDisplayView *recommendInfoDisplayView; // @synthesize recommendInfoDisplayView=_recommendInfoDisplayView;
@property(retain, nonatomic) UIView *recommendContainerView; // @synthesize recommendContainerView=_recommendContainerView;
@property(retain, nonatomic) MMUIButton *musicSourceButton; // @synthesize musicSourceButton=_musicSourceButton;
@property(retain, nonatomic) TingPageControl *pageControl; // @synthesize pageControl=_pageControl;
@property(retain, nonatomic) TingPlayerCoverView *mvCoverView; // @synthesize mvCoverView=_mvCoverView;
@property(retain, nonatomic) UIImageView *authorIconImageView; // @synthesize authorIconImageView=_authorIconImageView;
@property(retain, nonatomic) WCMarqueeLabel *authorNameMarqueeLabel; // @synthesize authorNameMarqueeLabel=_authorNameMarqueeLabel;
@property(retain, nonatomic) UIControl *authorInfoContainer; // @synthesize authorInfoContainer=_authorInfoContainer;
@property(retain, nonatomic) WCMarqueeLabel *titleMarqueeLabel; // @synthesize titleMarqueeLabel=_titleMarqueeLabel;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) UIColor *linkColor; // @synthesize linkColor=_linkColor;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(retain, nonatomic) TingItem *item; // @synthesize item=_item;
@property(nonatomic) __weak id <TingPlayerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)updateBottomBarContainerBgViewAndBackgroundImage:(id)arg1 blurImage:(id)arg2;
- (void)tingBlurBackgroundImageView:(id)arg1 didLoadImage:(id)arg2 blurImage:(id)arg3;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)willTransitionToSize:(struct CGSize)arg1;
- (_Bool)canTransitionOrientationToLandscape;
- (void)setGuideLabelHidden:(_Bool)arg1;
- (void)updatePlayerElementAlphaWhenChangeRate:(_Bool)arg1;
- (void)updateDisplayWithSpamFlag:(unsigned int)arg1;
- (void)refreshUserInterfaceStyle;
- (void)refreshBottomToolsButtonEnableStatus;
- (void)refreshBottomToolsContainerViewDisplay;
- (void)refreshCommentAreaBackgroundViewAlpha;
- (void)refreshPlayListHeaderForegroundAlpha:(double)arg1;
- (void)refreshContainerViewAlpha;
- (void)refreshBottomBarAlpha;
- (void)refreshPlayControlAreaElementsAlpha;
- (void)refreshInterationsAreaAlpha;
- (void)refreshMusicSourceButtonAlpha;
- (void)refreshPageControlAlpha;
- (void)refreshTitleAndAuthorAlpha;
- (void)refreshTopAreaElementsAlpha;
- (id)landscapeModeButtons;
- (id)bottomBarModeButtons;
- (id)topBarModeButtons;
- (id)normalModeButtons;
- (void)tingProgressBar:(id)arg1 didEndSeekingWithProgress:(double)arg2 offset:(double)arg3;
- (void)tingProgressBar:(id)arg1 onSeekingWithProgress:(double)arg2 offset:(double)arg3;
- (void)tingProgressBarDidStartSeeking:(id)arg1;
- (void)forceRefreshTopAreaElementsAlpha:(double)arg1;
- (void)playerViewLayoutIfNeeded;
- (void)playerViewSetNeedsLayout:(CDUnknownBlockType)arg1;
- (void)refreshPlayerViewInfoAreaWithPlayable:(_Bool)arg1;
- (void)reloadWithItemDisplayElement:(id)arg1 tingItem:(id)arg2 coverUrl:(id)arg3 onlyRefreshCell:(_Bool)arg4;
- (void)onDisplayViewMTKViewCreated:(id)arg1;
- (void)onItemDisplayElementAvailable:(id)arg1 displayElement:(id)arg2;
- (void)reloadMVList:(id)arg1;
- (void)updateVipButtonHidden:(_Bool)arg1;
- (void)updateWithIsTryListening:(_Bool)arg1;
- (void)updateCurrentTime:(double)arg1 duration:(double)arg2;
- (void)updateIsReplacingUnplayableItem:(_Bool)arg1;
- (void)updateBottomPlayPauseButtonStatus:(_Bool)arg1 isLoading:(_Bool)arg2;
- (void)updatePlayPauseButtonStatus:(_Bool)arg1 isLoading:(_Bool)arg2;
- (void)updateIsPlaying:(_Bool)arg1 isLoading:(_Bool)arg2 canPlayPrevious:(_Bool)arg3 canPlayNext:(_Bool)arg4 event:(int)arg5;
- (void)updateRecommendInfoDisplayViewRightValue;
- (double)getRecommendInfoDisplayViewMaxWidth;
- (void)updateRecommendContainerDisplay;
- (void)updateRecommendInfoTextColor;
- (_Bool)shouldShowRecommendReeason:(id)arg1;
- (void)updateListenRoomHeartbeatResponse:(id)arg1;
- (void)updateAudioQuality:(int)arg1;
- (void)updateAuthorInfo:(id)arg1;
- (void)reloadLinkColor;
- (void)updateWithCommentInfo:(id)arg1;
- (void)updatePlayerViewInfoAreaWithIsPlayable:(_Bool)arg1 replaceListenId:(id)arg2;
- (void)updateDisplayWithCategoryItem:(id)arg1;
- (void)updateLikeButtonDisplay;
- (void)updatePlayRateBtnSelectedRate:(double)arg1;
- (void)updatePlayControlAreaDisplay:(id)arg1;
- (void)updateProgressBarDisplayWithCurrentTime:(float)arg1 duration:(float)arg2 shouldHidden:(_Bool)arg3;
- (void)updateMusicSourceButtonDisplay:(id)arg1;
- (void)updateBackgroundViewImageWhenPlayingMV;
- (void)clearBackgroundViewImage;
- (void)updateCoverDisplay:(id)arg1 itemAppId:(id)arg2 tingItem:(id)arg3;
- (void)updateTitleDisplay:(id)arg1;
- (id)playerViewItemAppIdWithTingItem:(id)arg1;
- (id)playerViewCoverWithTingItem:(id)arg1;
- (id)playerViewTitleWithTingItem:(id)arg1;
- (void)updateDisplayWhenTingItemListenItemUpdate:(id)arg1;
- (void)updateDisplay:(id)arg1;
- (void)updateStyleInternal;
- (void)updateStyle:(unsigned long long)arg1 forceUpdate:(_Bool)arg2;
- (void)onMusicSourceButtonClicked:(id)arg1;
- (void)onMiniProgramCloseButtonClicked:(id)arg1;
- (void)onClickChangeModeLineButton:(id)arg1;
- (void)onAudioQualityButtonClicked:(id)arg1;
- (void)onTrailButtonClicked:(id)arg1;
- (void)likeClicked:(id)arg1;
- (void)forwardClicked:(id)arg1;
- (void)listenLaterClicked:(id)arg1;
- (void)playForward30Clicked:(id)arg1;
- (void)playLastListClicked:(id)arg1;
- (void)playNextClicked:(id)arg1;
- (void)playPauseClicked:(id)arg1;
- (void)playReverse15Clicked:(id)arg1;
- (void)playPreviousClicked:(id)arg1;
- (void)updateBottomBarModeAndContentAreaBgViewWithAlpha:(double)arg1;
- (void)updateBottomBarModeElementDisplayWithAlpha:(double)arg1;
- (void)layoutBottomBarModeElementInViewInMode:(unsigned long long)arg1;
- (void)addBottomBarModeElementInView;
- (void)setPlayerViewElementWithTranslation:(double)arg1 isToModeNormal:(_Bool)arg2;
- (double)gestureLimitValueForPlayerViewElement;
- (void)resetWhenModeChangedOrBottomToolsChanged;
- (void)resetPropertyAnimatorWithPercent:(double)arg1;
- (void)forceEndProgressAnimationWithPercent:(double)arg1;
- (void)changeMode:(_Bool)arg1 withPercent:(double)arg2;
- (void)changeNewMode:(unsigned long long)arg1 withAnimated:(_Bool)arg2 animationBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (_Bool)setContentViewShowing:(_Bool)arg1 dragToCloseInstallScrollView:(id)arg2 animated:(_Bool)arg3 configBlock:(CDUnknownBlockType)arg4 alphaAnimationBlock:(CDUnknownBlockType)arg5 animationBlock:(CDUnknownBlockType)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (void)updateContentContainerViewAndDividingLineFrame;
- (struct CGRect)contentViewFrame;
- (struct CGSize)contentVisibleSize;
- (double)contentViewTop;
- (struct CGSize)bottomBarCoverSize;
- (struct CGSize)smallCoverSize;
- (void)setIsExpandingContentContainer:(_Bool)arg1;
- (_Bool)replaceContentViewWithanimated:(_Bool)arg1 dragToCloseInstallScrollView:(id)arg2 configBlock:(CDUnknownBlockType)arg3 animationBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)onVipButtonClicked:(id)arg1;
- (void)onNoCopyRightButtonClicked:(id)arg1;
- (void)onTitleLabelClicked;
- (void)authorClicked:(id)arg1;
- (void)hideContentViewFromDelegate;
- (void)jumpCategoryButtonClicked:(id)arg1;
- (void)recommendClicked:(id)arg1;
- (void)sourceClicked:(id)arg1;
- (void)clearUnPlayableRelatedData;
- (void)resetDataIfNeeded;
- (void)layoutSubviews;
- (void)setPlaceHolder:(struct CGSize)arg1 withStyle:(id)arg2;
- (void)configureControlAreaButtonWithStyle:(id)arg1 mode:(unsigned long long)arg2;
- (void)configurePlayerInfoAreaWithStyle:(id)arg1 mode:(unsigned long long)arg2;
- (void)configureLandscapeLayout;
- (void)configureBottomBarLayout;
- (void)configureTopBarLayout;
- (void)configureNormalLayout;
- (double)bottomToolsContainerViewHeight;
- (double)bottomToolsContentContainerViewWidth;
- (double)constrainedWidth;
- (double)edgePadding;
- (_Bool)isLandscapeLayout;
- (void)changeToRestoreMode;
- (_Bool)judgeIfNeedToChangeToRestoreMode;
- (void)configureLayout;
- (void)configureLayout:(unsigned long long)arg1;
- (void)setupGestureRecgnizers;
- (void)setup;
- (void)updateNoCopyRightButtonWithColor:(id)arg1;
- (id)genConfigWithStyle:(unsigned long long)arg1;
- (struct CGSize)lastListButtonSize;
- (struct CGSize)previousAndNextButtonSize;
- (struct CGSize)backwardAndForwardSize;
- (struct CGSize)playPauseButtonSize;
- (id)makeInteractionButton:(id)arg1;
- (id)interactionIconWeakColor;
- (id)interactionIconNormalColor;
- (double)interactionIconMargin;
- (struct CGSize)forwardIconSize;
- (struct CGSize)likeIconSize;
- (struct CGSize)interactionIconSize;
- (void)_autoDelayShowMv;
- (void)autoDelayShowMv;
- (void)cancelAutoDelayShowMv;
- (id)authorColor;
- (_Bool)shouldShowAuthorIcon;
- (double)landscapeAuthorMarqueeLabelMaxWidth;
- (double)landscapeTitleMarqueeLabelMaxWidth;
- (double)topBarAuthorMarqueeLabelMaxWidth;
- (double)bottomBarAuthorMarqueeLabelMaxWidth;
- (double)topBarTitleMarqueeLabelMaxWidth;
- (double)bottomBarTitleMarqueeLabelMaxWidth;
- (double)authorNameMarqueeLabelMaxWidth;
- (double)titleMarqueeLabelMaxWidth;
- (double)vipButtonLeftMargin;
- (double)marqueeLabelRightGradientWidth;
- (double)marqueeLabelLeftGradientWidth;
- (struct CGSize)playRateButtonSize;
- (id)playerViewController;
- (void)dealloc;
- (id)playerVC;
- (_Bool)isDragToCloseInstallScrollViewScrollToTop;
- (void)handlePanGesture:(id)arg1;
- (void)installDragToCloseGestureRecognizer:(id)arg1;
- (void)initWithDragWithDragToCloseInstallScrollView:(id)arg1;
- (_Bool)isCommentSecureBitCloseCommentIcon:(unsigned long long)arg1 hasBitInfo:(_Bool)arg2;
- (_Bool)isCommentSecureBitCloseJumpSinger:(unsigned long long)arg1 hasBitInfo:(_Bool)arg2;
- (_Bool)isListenItemSecureBitCloseLike:(unsigned long long)arg1 hasItemSecureBits:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

