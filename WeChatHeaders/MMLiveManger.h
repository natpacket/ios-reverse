//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MMAVCameraCapturerDelegate-Protocol.h"
#import "MMVideoRenderViewDelegate-Protocol.h"
#import "MMViewCaptureDelegate-Protocol.h"
#import "WCLoopMetricsCollectorDelegate-Protocol.h"

@class CIContext, MMAVCameraCapture, MMLiveMangerProxy, MMLiveVideoFrameReprocessPipeLine, MMLiveVideoFrameWidgetManageLogic, MMRenderVideoFrame, MMVideoRenderView, MMViewCapture, MMWeEffectManager, NSString, WCLoopMetricsCollector;
@protocol MMLiveManagerCaptureDelegate, MMLiveManagerMetricsDelegate, MMLiveMangerPusherDelegate;

@interface MMLiveManger : NSObject <MMAVCameraCapturerDelegate, MMVideoRenderViewDelegate, MMViewCaptureDelegate, WCLoopMetricsCollectorDelegate>
{
    long long _resolution;
    struct CGSize _videoSize;
    int _videoFPS;
    _Bool _enableFaceDetect;
    _Bool _isPaused;
    _Bool _remoteFrontMirror;
    _Bool _remoteBackMirror;
    long long _renderMode;
    struct opaqueCMSampleBuffer *_lastSampleBufferFromViewCapture;
    struct _opaque_pthread_mutex_t _compositingLock;
    _Bool _enableZoom;
    _Bool _enableTouchFocus;
    _Bool _enableRenderViewGestures;
    _Bool _isUseWeEffectMirror;
    id <MMLiveMangerPusherDelegate> _pusherDelegate;
    id <MMLiveManagerMetricsDelegate> _metricsDelegate;
    id <MMLiveManagerCaptureDelegate> _captureDelegate;
    MMRenderVideoFrame *_mRenderVideoFrame;
    MMWeEffectManager *_weEffectManager;
    WCLoopMetricsCollector *_captureMetricsCollector;
    double _ratioOfCameraToScreen;
    double _horizontalMarginOfCameraToScreen;
    long long _centerXSideOfCameraToScreen;
    double _centerYRatioOfCameraToScreen;
    MMLiveMangerProxy *_liveManagerProxy;
    MMAVCameraCapture *_cameraCapturer;
    MMVideoRenderView *_renderView;
    MMViewCapture *_viewCapture;
    CIContext *_compositingContext;
    double _zoomScale;
    MMLiveVideoFrameReprocessPipeLine *_videoFrameReprocessPipeLine;
}

+ (void)destroySharedInstance;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(retain, nonatomic) MMLiveVideoFrameReprocessPipeLine *videoFrameReprocessPipeLine; // @synthesize videoFrameReprocessPipeLine=_videoFrameReprocessPipeLine;
@property _Bool isUseWeEffectMirror; // @synthesize isUseWeEffectMirror=_isUseWeEffectMirror;
@property(nonatomic) double zoomScale; // @synthesize zoomScale=_zoomScale;
@property(retain) CIContext *compositingContext; // @synthesize compositingContext=_compositingContext;
@property(retain) MMViewCapture *viewCapture; // @synthesize viewCapture=_viewCapture;
@property(retain, setter=hide_setRenderView:) MMVideoRenderView *renderView; // @synthesize renderView=_renderView;
@property(retain) MMAVCameraCapture *cameraCapturer; // @synthesize cameraCapturer=_cameraCapturer;
@property(nonatomic) __weak MMLiveMangerProxy *liveManagerProxy; // @synthesize liveManagerProxy=_liveManagerProxy;
@property(nonatomic) double centerYRatioOfCameraToScreen; // @synthesize centerYRatioOfCameraToScreen=_centerYRatioOfCameraToScreen;
@property(nonatomic) long long centerXSideOfCameraToScreen; // @synthesize centerXSideOfCameraToScreen=_centerXSideOfCameraToScreen;
@property(nonatomic) double horizontalMarginOfCameraToScreen; // @synthesize horizontalMarginOfCameraToScreen=_horizontalMarginOfCameraToScreen;
@property(nonatomic) double ratioOfCameraToScreen; // @synthesize ratioOfCameraToScreen=_ratioOfCameraToScreen;
@property(nonatomic) _Bool enableRenderViewGestures; // @synthesize enableRenderViewGestures=_enableRenderViewGestures;
@property(retain, nonatomic) WCLoopMetricsCollector *captureMetricsCollector; // @synthesize captureMetricsCollector=_captureMetricsCollector;
@property(retain, nonatomic) MMWeEffectManager *weEffectManager; // @synthesize weEffectManager=_weEffectManager;
@property(nonatomic) _Bool enableTouchFocus; // @synthesize enableTouchFocus=_enableTouchFocus;
@property(nonatomic) _Bool enableZoom; // @synthesize enableZoom=_enableZoom;
@property(retain, nonatomic) MMRenderVideoFrame *mRenderVideoFrame; // @synthesize mRenderVideoFrame=_mRenderVideoFrame;
@property(nonatomic) __weak id <MMLiveManagerCaptureDelegate> captureDelegate; // @synthesize captureDelegate=_captureDelegate;
@property(nonatomic) __weak id <MMLiveManagerMetricsDelegate> metricsDelegate; // @synthesize metricsDelegate=_metricsDelegate;
@property(nonatomic) __weak id <MMLiveMangerPusherDelegate> pusherDelegate; // @synthesize pusherDelegate=_pusherDelegate;
- (_Bool)getWeEffectNeedMirror;
- (void)updateWeEffectNeedMirrorIfNeeded;
- (void)setCameraPreviewOrientation:(long long)arg1;
- (struct CGSize)getVideoSize:(struct CGSize)arg1 homeOrientation:(long long)arg2;
- (void)pause;
- (void)resume;
- (void)dealloc;
- (void)loopMetricsCollection:(id)arg1 didFinishCollectingMetrics:(id)arg2;
- (void)viewCapture:(id)arg1 didCaptureSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 orientation:(long long)arg3;
- (void)updateLastSampleBufferFromViewCapture:(struct opaqueCMSampleBuffer *)arg1;
- (void)resumeViewCapture;
- (void)pauseViewCapture;
- (void)stopViewCapture;
- (void)startViewCaptureWithView:(id)arg1;
@property(readonly, nonatomic) _Bool isViewCapturing;
@property(nonatomic) struct CGSize videoSize;
- (void)onRenderViewFocusAtPoint:(struct CGPoint)arg1;
- (void)updateFocusAtPoint:(struct CGPoint)arg1;
- (void)onRenderViewPinchScale:(double)arg1;
- (void)updateZoomScaleWithGestureScale:(double)arg1;
- (void)addUser:(id)arg1 videoView:(id)arg2;
- (void)ignoreDarkFramesOnceAfterSettingConfiguration;
- (void)setRemoteMirror:(_Bool)arg1 isFront:(_Bool)arg2;
- (void)setMirror:(_Bool)arg1 isFront:(_Bool)arg2;
- (void)setRotation:(int)arg1;
@property(readonly, nonatomic) _Bool isRunning;
- (void)setVideoResolution1920x1440;
- (void)setVideoResolutionUse1920x1080:(_Bool)arg1;
- (void)setVideoResolution:(int)arg1 sampleBufferSize:(struct CGSize)arg2 homeOrientation:(int)arg3;
- (void)setFaceDetect:(_Bool)arg1;
- (void)setFront:(_Bool)arg1;
- (void)setFrameRate:(int)arg1;
- (void)switchCameraWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)switchCamera;
- (void)stopCameraCapture;
- (void)startCameraCaptureUseFrontCamera:(_Bool)arg1;
- (void)startCameraCapture;
- (void)setCustomCameraConfigs:(id)arg1;
- (void)notifyOutputSampleBufferForTransmit:(struct opaqueCMSampleBuffer *)arg1 localRenderFlipX:(_Bool)arg2;
- (void)notifyOutputSampleBufferForRender:(struct opaqueCMSampleBuffer *)arg1 localRenderFlipX:(_Bool)arg2;
- (void)sendVideoData:(struct opaqueCMSampleBuffer *)arg1 shouldReportCaptureMetrics:(_Bool)arg2;
- (struct opaqueCMSampleBuffer *)createCompositedSampleBufferWithCameraSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 isCameraMirror:(_Bool)arg2 inScreenSampleBuffer:(struct opaqueCMSampleBuffer *)arg3;
- (void)onCameraCapture:(struct opaqueCMSampleBuffer *)arg1 mirror:(_Bool)arg2 rotation:(long long)arg3 isFront:(_Bool)arg4;
@property(readonly, nonatomic) MMLiveVideoFrameWidgetManageLogic *widgetManageLogic;
- (void)setRenderView:(id)arg1;
- (id)initInternal;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

