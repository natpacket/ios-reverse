//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIImage.h>

@class NSString;

@interface UIImage (HoneyPay)
+ (id)cardTypeIconWithType:(unsigned long long)arg1 isGray:(_Bool)arg2;
+ (id)backgroundIconWithType:(unsigned long long)arg1;
+ (id)bankIconWithType:(unsigned long long)arg1;
+ (id)ECImageNamed:(id)arg1;
+ (struct CGSize)calculateImageFitSizeForNormalScaled:(id)arg1;
+ (id)genNormalScaledImage:(id)arg1;
+ (id)imageFromRawBGRAData:(char *)arg1 WIDTH:(unsigned long long)arg2 HEIGHT:(unsigned long long)arg3;
+ (id)imageFromRawGrayData:(char *)arg1 WIDTH:(unsigned long long)arg2 HEIGHT:(unsigned long long)arg3;
+ (struct Mat)cvMatFromUIImage:(id)arg1;
+ (id)compressImageSizeBy:(id)arg1 toByte:(unsigned long long)arg2;
+ (double)getCompressRateByImageSize:(double)arg1 targetSize:(double)arg2;
+ (id)thumbImageDataFor:(id)arg1 rate:(unsigned long long)arg2;
+ (id)thumbImageFor:(id)arg1 rate:(unsigned long long)arg2;
+ (struct CGRect)resizeRectFromOriginSize:(struct CGSize)arg1 toFrameSize:(struct CGSize)arg2 contentMode:(long long)arg3;
+ (id)imageFromMtlTexture:(id)arg1;
+ (id)imageFromRGBATexture:(int)arg1 width:(int)arg2 height:(int)arg3;
+ (id)createGifForImages:(id)arg1 durations:(id)arg2;
+ (id)webpToPngJpgGif:(id)arg1;
+ (id)imageWithWebpData:(id)arg1;
+ (_Bool)cgImageContainsAlpha:(struct CGImage *)arg1;
+ (id)gifWithFrames:(id)arg1;
+ (id)animatedImageWithFrames:(id)arg1;
+ (double)frameDurationWithIterator:(struct WebPIterator)arg1;
+ (struct CGImage *)cgImageCreateScaled:(struct CGImage *)arg1 size:(struct CGSize)arg2;
+ (struct CGImage *)drawWebpImageWithCanvas:(struct CGContext *)arg1 iterator:(struct WebPIterator)arg2 colorSpace:(struct CGColorSpace *)arg3 scaledSize:(struct CGSize)arg4;
+ (struct CGColorSpace *)colorSpaceGetDeviceRGB;
+ (struct CGImage *)createWebpImageWithData:(struct WebPData)arg1 colorSpace:(struct CGColorSpace *)arg2 scaledSize:(struct CGSize)arg3;
+ (struct CGColorSpace *)createColorSpaceWithDemuxer:(struct WebPDemuxer *)arg1;
+ (id)decodedImageWithData:(id)arg1 options:(id)arg2;
+ (id)frameArrayWithData:(id)arg1 options:(id)arg2;
+ (id)realMakeImageWithColor:(id)arg1 size:(struct CGSize)arg2 cornerRadius:(double)arg3 roundingCorners:(unsigned long long)arg4 isResizable:(_Bool)arg5 resizeCapInsets:(struct UIEdgeInsets)arg6;
+ (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2 cornerRadius:(double)arg3 roundingCorners:(unsigned long long)arg4 isResizable:(_Bool)arg5 resizeCapInsets:(struct UIEdgeInsets)arg6;
+ (id)stretchableImageWithColor:(id)arg1 cornerRadius:(double)arg2;
+ (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2 cornerRadius:(double)arg3 roundingCorners:(unsigned long long)arg4 resizableWithCapInsets:(struct UIEdgeInsets)arg5;
+ (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2 cornerRadius:(double)arg3 resizableWithCapInsets:(struct UIEdgeInsets)arg4;
+ (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2 cornerRadius:(double)arg3;
+ (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2;
+ (id)imageWithColor:(id)arg1;
+ (char *)getRGBWithImage:(id)arg1 retWidth:(int *)arg2 retHeight:(int *)arg3;
+ (id)grayscaleImage:(id)arg1;
+ (id)imageFromRawGrayData:(char *)arg1 Width:(unsigned long long)arg2 Height:(unsigned long long)arg3;
+ (id)realGenRoundedImage:(id)arg1 size:(struct CGSize)arg2 conerSize:(unsigned int)arg3;
+ (id)genRoundedImage:(id)arg1 size:(struct CGSize)arg2 conerSize:(unsigned int)arg3;
+ (id)genRoundedImage:(id)arg1 size:(struct CGSize)arg2;
+ (id)genScaledImage:(id)arg1 size:(struct CGSize)arg2 scale:(double)arg3;
+ (id)genScaledImage:(id)arg1 size:(struct CGSize)arg2;
+ (struct CGSize)calculateImageFitSizeForPreview:(id)arg1 preWidth:(int)arg2 preHeight:(int)arg3;
+ (struct CGSize)calculateImageFitSizeInternal:(id)arg1 maxWidth:(int)arg2 maxHeight:(int)arg3;
+ (struct CGSize)calculateFitSize:(struct CGSize)arg1 maxWidth:(int)arg2 maxHeight:(int)arg3;
+ (id)scaleAndRotateImage:(id)arg1 withMaxResolution:(double)arg2;
+ (id)imageInLightMode:(id)arg1 darkMode:(id)arg2;
+ (id)rawCombineTopImage:(id)arg1 andBottomImage:(id)arg2 scale:(double)arg3;
+ (id)rawCombineTopImage:(id)arg1 andBottomImage:(id)arg2;
+ (id)combineTopImage:(id)arg1 andBottomImage:(id)arg2;
+ (id)imageWithImage:(id)arg1 scaledToSize:(struct CGSize)arg2;
+ (id)convertBitmapRGBA8ToUIImage:(char *)arg1 withWidth:(int)arg2 withHeight:(int)arg3;
+ (struct CGContext *)newBitmapRGBA8ContextFromImage:(struct CGImage *)arg1;
+ (char *)convertUIImageToBitmapRGBA8:(id)arg1;
+ (id)exifDictionaryForFilePath:(id)arg1;
+ (id)tiffDictonaryForFilePath:(id)arg1;
+ (unsigned long long)pixelHeightForFilePath:(id)arg1;
+ (unsigned long long)pixelWidthForFilePath:(id)arg1;
+ (unsigned long long)dpiHeightForFilePath:(id)arg1;
+ (unsigned long long)dpiWidthForFilePath:(id)arg1;
+ (id)imagePropertyMapForFilePath:(id)arg1;
@property(retain, nonatomic) NSString *brandWording;
@property(readonly, nonatomic) _Bool isChineseWordImage;
@property(nonatomic) long long chineseWordsCount;
@property(nonatomic) long long allWordsCount;
@property(nonatomic) double chineseWordRate;
- (id)resizeIfNeedMaxWidth:(int)arg1 andMaxHeight:(int)arg2;
- (void)printBitmapInfo;
- (void)tingBackgroundImageWithScene:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_skiaBlur:(float)arg1 saturation:(float)arg2 tintColor:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)skiaBlur:(float)arg1 saturation:(float)arg2 tintColor:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)resizeToMaxLen:(double)arg1;
- (id)normalize;
- (id)compressQualityWithMaxLength:(long long)arg1 defaultCompressRate:(double)arg2;
- (id)imageCroppedWithFrame:(struct CGRect)arg1;
- (id)imageCroppedAndScaledToSize:(struct CGSize)arg1 contentMode:(long long)arg2 padToFit:(_Bool)arg3;
- (id)imageWithRoundedCornerRadius:(double)arg1 backgroundColor:(id)arg2;
- (id)imageWithRoundedCornerRadius:(double)arg1;
- (void)setWcfMemoryCost:(unsigned long long)arg1;
- (unsigned long long)wcfMemoryCost;
- (id)drawWithImage:(id)arg1 size:(struct CGSize)arg2;
- (struct CGSize)imageSize:(double)arg1;
- (id)QMapCompressImage;
- (id)imageWithScaledSize:(struct CGSize)arg1;
- (id)resolvedImageInCurrentStyle;
- (id)applyBlurWithRadius:(double)arg1 tintColor:(id)arg2 saturationDeltaFactor:(double)arg3 maskImage:(id)arg4 scale:(double)arg5 drawBaseImage:(_Bool)arg6;
- (id)applyBlurWithRadius:(double)arg1 tintColor:(id)arg2 saturationDeltaFactor:(double)arg3 maskImage:(id)arg4;
- (id)applyTintEffectWithColor:(id)arg1;
- (id)applyDarkEffectWithBlurRadius:(float)arg1 saturation:(float)arg2;
- (id)applyDarkEffect;
- (id)applyExtraLightEffect;
- (id)applyLightEffect;
- (id)webpDataWithQuality:(float)arg1;
- (id)getThemeColorRGBAArr;
- (_Bool)isDarkColorWithThresholdForY:(double)arg1;
- (_Bool)isDarkColor;
- (id)getThemeColor;
- (id)singleImageByApplyingAlpha:(double)arg1;
- (id)imageByApplyingAlpha:(double)arg1;
- (_Bool)hasAlpha;
- (id)imageWithInsets:(struct UIEdgeInsets)arg1;
- (id)resizeScaleAspectFillToRotio:(double)arg1;
- (id)resizeScaleAspectFitToRotio:(double)arg1 backgroundColor:(id)arg2;
- (id)resizeToMinSideLen:(long long)arg1;
- (id)resizeToMaxWidth:(int)arg1 andMaxHeight:(int)arg2;
- (id)realCroppedImage:(struct CGRect)arg1;
- (id)croppedImage:(struct CGRect)arg1;
- (id)fixOrientation;
- (id)rotate:(long long)arg1;
- (id)imageWithTintColor:(id)arg1 blendMode:(int)arg2;
- (id)privateImageWithRenderColor:(id)arg1;
- (id)imageWithRenderColor:(id)arg1;
- (id)imageChangedToOrientation:(long long)arg1;
- (id)generateImageWithRenderingMode:(long long)arg1;
- (id)generateResizableImageWithCapInsets:(struct UIEdgeInsets)arg1 resizingMode:(long long)arg2;
- (id)generateResizableImageWithCapInsets:(struct UIEdgeInsets)arg1;
- (_Bool)isDynamicImage;
- (_Bool)isFromXCAsset;
- (id)imageInDarkMode;
- (id)imageInLightMode;
- (id)getRotatedImage;
- (id)getRawGrayData:(struct CGSize *)arg1;
- (id)scaleImageToScale:(float)arg1;
- (id)scaleToFillSize:(struct CGSize)arg1;
- (struct CGAffineTransform)transformForOrientation:(struct CGSize)arg1;
- (id)resizedImage:(struct CGSize)arg1 withQuality:(int)arg2;
- (id)resizedImage:(struct CGSize)arg1 transform:(struct CGAffineTransform)arg2 drawTransposed:(_Bool)arg3 interpolationQuality:(int)arg4 aspectFill:(_Bool)arg5;
- (id)resizedImageWithContentMode:(long long)arg1 bounds:(struct CGSize)arg2 interpolationQuality:(int)arg3;
- (id)resizedImage:(struct CGSize)arg1 interpolationQuality:(int)arg2 aspectFill:(_Bool)arg3;
- (id)resizedImage:(struct CGSize)arg1 interpolationQuality:(int)arg2;
- (id)croppedSquareImage;
@end

