//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "CNetworkStatusExt-Protocol.h"
#import "IMMLanguageMgrExt-Protocol.h"
#import "IUiUtilExt-Protocol.h"
#import "MMScrollActionSheetDelegate-Protocol.h"
#import "MMTipsViewControllerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WAAppActionSheetDelegate-Protocol.h"
#import "WAAppTaskCloseExt-Protocol.h"
#import "WAAppTaskSystemCoverViewDataSource-Protocol.h"
#import "WACapsuleMenuDataSource-Protocol.h"
#import "WAContactMgrExtension-Protocol.h"
#import "WAMenuHeaderViewDelegate-Protocol.h"
#import "WAOrientationSuggestionWindowDelegate-Protocol.h"
#import "WAPopInteractiveTransitionDelegate-Protocol.h"
#import "WARecentForwardScrollViewHelperDelegate-Protocol.h"
#import "WASkylineViewDelegate-Protocol.h"
#import "WASplashADMenuItemViewDelegate-Protocol.h"
#import "WAWebViewJSLogicDelegate-Protocol.h"
#import "WAWebViewMutiFuncMenuViewDelegate-Protocol.h"
#import "WAWebViewPluginContextProtocol-Protocol.h"
#import "YYWAWebViewDelegate-Protocol.h"
#import "YYWebViewDelegate-Protocol.h"

@class FixDocumentPresent, MMProgressViewEx, MMToastView, MMUIButton, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSTimer, NSURLRequest, SightIconView, UIColor, UIImageView, UILongPressGestureRecognizer, UIScreenEdgePanGestureRecognizer, UIView, WAAlertModel, WAAppActionSheet, WAApptaskPublicResLogic, WABaseInfoToast, WABrandTitleBar, WACacheVersionChecker, WACircleProgressLoadingViewController, WAEvaluatePopSheet, WAMenuPopInteractiveTransition, WAMenuScrollActionSheet, WAProvideApiConfig, WAWebActionSheet, WAWebErrorView, WAWebViewJSLogicImpl, WAWebViewMenuNavBarProperties, WAWebViewMutiFuncMenuView, WAWebViewPluginScheduler, WAWebviewBottomBannerView;
@protocol IWAFileViewService, IWARecentForwardScrollViewHelper, IWASkylineView><YYWebViewInterface, WAWebViewControllerMenuActionCustomDelegate, WAWebViewDelegate><WAMinimizeDelegate, YYWebViewInterface;

@interface WAWebViewController : MMUIViewController <WAPopInteractiveTransitionDelegate, WAWebViewMutiFuncMenuViewDelegate, WAAppActionSheetDelegate, MMTipsViewControllerDelegate, MMScrollActionSheetDelegate, WASplashADMenuItemViewDelegate, WARecentForwardScrollViewHelperDelegate, WAMenuHeaderViewDelegate, WAWebViewPluginContextProtocol, UIGestureRecognizerDelegate, IUiUtilExt, WAContactMgrExtension, WAAppTaskCloseExt, CNetworkStatusExt, IMMLanguageMgrExt, WACapsuleMenuDataSource, WAAppTaskSystemCoverViewDataSource, WASkylineViewDelegate, WAWebViewJSLogicDelegate, UIScrollViewDelegate, YYWebViewDelegate, YYWAWebViewDelegate, WAOrientationSuggestionWindowDelegate>
{
    _Bool _bIsStatusBarBlack;
    UIView *_webViewContainer;
    UIView<YYWebViewInterface> *webView;
    NSString *m_initUrl;
    WAWebViewJSLogicImpl *m_jsLogicImpl;
    NSMutableDictionary *m_jsInitInfo;
    NSString *m_preloadBaseURL;
    NSString *m_preloadPageRelativeURL;
    NSString *m_preloadPageQuery;
    NSString *m_preloadFrameURL;
    NSString *m_preloadIndexURL;
    _Bool m_isPreloadFrameLoaded;
    _Bool m_isPreloadIndexLoaded;
    NSDictionary *m_dicPageAttribute;
    NSString *m_pageOrientation;
    long long m_videoFullScreenOrientation;
    long long m_beforeVideoFullScreenOrientation;
    _Bool m_isViewWillAppearAlready;
    _Bool m_isViewDidAppear;
    _Bool m_isSetPreloadViewAttribute;
    _Bool m_isFinishLoaded;
    _Bool m_isWxConfigInjected;
    NSString *m_nsCurrentUrl;
    UIView *_loadingCoverClipView;
    UIImageView *_loadingCoverImageView;
    MMProgressViewEx *_loadingCoverLoadingView;
    UIView *_prevVCSnapshot;
    UIView *_prevVCMask;
    MMUIButton *_quitButton;
    WAWebViewMutiFuncMenuView *_menuView;
    WAWebViewMenuNavBarProperties *_navBarProperties;
    UIView *_tailBgView;
    _Bool _bIsDraggingScroll;
    double _fLastStartOffsetY;
    _Bool _bFullScreen;
    _Bool _bHideStatusBar;
    long long _eContentMode;
    long long _eNavBarFloatingMode;
    _Bool m_bConfiguredToShowHomeButton;
    _Bool m_bDisableSwipeBack;
    WACircleProgressLoadingViewController *_fakeLoadingVC;
    UIScreenEdgePanGestureRecognizer *_popBackInteractivePopGesture;
    UIScreenEdgePanGestureRecognizer *_popBackRightInteractivePopGesture;
    WAMenuPopInteractiveTransition *_popBackInteractiveTransition;
    WAMenuPopInteractiveTransition *_popBackRightInteractiveTransition;
    _Bool _useRightInteractiveTransition;
    UIView *_webInfoTopView;
    WABaseInfoToast *_webViewToast;
    WAWebErrorView *_webViewErrorView;
    WAAppActionSheet *_actionSheet;
    WAMenuScrollActionSheet *_scrollActionSheet;
    WAEvaluatePopSheet *_evaluatePopSheet;
    long long _loadPageFrameStartTime;
    long long _loadPageIndexStartTime;
    long long _pageFrameLength;
    _Bool m_bWebviewReceiveTerminateSignal;
    _Bool m_bWebviewReceiveTerminateSignalManually;
    WACacheVersionChecker *_moduleCacheVersionChecker;
    NSMutableDictionary *_moduleLoadingCheckers;
    _Bool _isModuleDataLoaded;
    _Bool _isLoadingModuleData;
    NSString *_strOfPreloadTaskPageFrameJS;
    _Bool _initialRenderCacheSended;
    UILongPressGestureRecognizer *m_longPressGestureRecognizer;
    _Bool m_bIFrame;
    long long m_loadingCount;
    _Bool m_bIsBeingPopedFromNewMainFrame;
    NSDictionary *_cacheRouteInfo;
    long long _orientation;
    _Bool m_bWebViewTerminatedManually;
    _Bool _bHasSupplyAppInfo;
    struct CGSize _lastWebViewSize;
    _Bool _shouldHideHomeButton;
    _Bool _hasCheckHomeButtonStat;
    _Bool _shouldDelayCheckHideHomeButton;
    id <IWAFileViewService> _fileProxy;
    UIImageView *_shadowView;
    _Bool m_isLanscape;
    _Bool m_bIsInsertCamera;
    _Bool m_bIsInsertLivePusher;
    _Bool m_bIsFromPreloadTaskWithNotAppInfo;
    _Bool _m_bIsBottomBannerVisible;
    _Bool _m_bIsDelayPushWebView;
    _Bool _m_bIsRecoverReloaded;
    _Bool _presentingClose;
    _Bool _isFirstInitReadyReported;
    _Bool _detectedWhiteScreen;
    _Bool _hasReportedDisappearDoubleCheckWhiteScreen;
    _Bool _isAppWxssInjected;
    _Bool _disableAutoRsetPopGesture;
    _Bool _notResetWhenWebviewRemoved;
    _Bool _routeRewrited;
    _Bool _isInterceptingInteractivePopBack;
    _Bool _isInterceptingLeftButtonBack;
    _Bool _isInterceptingNavigateBackJsApi;
    _Bool _isCppProfileStarted;
    _Bool _isJSCProfileStarted;
    unsigned int m_uiWebviewID;
    unsigned int _m_uiWebviewIDBeforeRewriteRoute;
    unsigned int _foregroundTerminatedReloadCount;
    unsigned int _tagNativeMax;
    unsigned int _preloadMoment;
    unsigned int _appServiceType;
    unsigned int _whiteScreenColorRatio;
    float _moduleLoadingProgress;
    id <WAWebViewDelegate><WAMinimizeDelegate> m_delegate;
    NSMutableDictionary *m_extraInfo;
    NSMutableDictionary *_extraParams;
    WAApptaskPublicResLogic *_publicResLogic;
    long long _enmPullRefreshMode;
    WAProvideApiConfig *_provideApiCfg;
    NSString *_m_initRelativeURLBeforeRoute;
    NSString *_m_rawRelativeURL;
    WAWebViewPluginScheduler *_pluginScheduler;
    UIView<IWASkylineView><YYWebViewInterface> *_skylineView;
    UIColor *_backgroundColorContent;
    WABrandTitleBar *_m_sheetModeBrandTitleBar;
    WAWebviewBottomBannerView *_m_bottomBanner;
    CDUnknownBlockType _m_onLoadInitReady;
    CDUnknownBlockType _m_onLoadViewDidAppear;
    CDUnknownBlockType _m_onViewDidAppearThenCreateTab;
    unsigned long long _routeIntentionStartTimeInMs;
    NSMutableDictionary *_nativeViews;
    NSMutableDictionary *_containerViews;
    NSMutableArray *_topFullNativeViews;
    WAWebActionSheet *_displayingWebActionSheet;
    id <WAWebViewControllerMenuActionCustomDelegate> _customMenuDelegate;
    NSString *_instanceId;
    unsigned long long _lastRouteType;
    unsigned long long _appRouteStartTime;
    unsigned long long _initReadyReceiveTime;
    unsigned long long _recoverReloadStartTime;
    unsigned long long _recoverReloadInitReadyReceiveTime;
    unsigned long long _whiteScreenCheckScene;
    unsigned long long _initReadyLastWhiteScreenDetectedTimeInMs;
    NSString *_whiteScreenHexColor;
    NSTimer *_urlCopyTimer;
    NSString *_renderCacheAppServiceDataStr;
    WAAlertModel *_navBackAlertModel;
    SightIconView *_quickLaunchLoadingView;
    MMToastView *_moduleLoadingView;
    NSString *_exposeSnapShotLocalId;
    CDUnknownBlockType _webViewLeaveCallback;
    id <IWARecentForwardScrollViewHelper> _recentForwardHelper;
    NSArray *_arrTempSpecificContacts;
    FixDocumentPresent *_presentProxy;
    NSDictionary *_singlePageRouteData;
}

+ (_Bool)checkIsSelectableText:(id)arg1;
+ (unsigned int)getContainerIdFromView:(id)arg1;
+ (void)setNavigationRightButton:(id)arg1 webView:(id)arg2;
+ (void)setNavigationAttribute:(id)arg1 webView:(id)arg2;
+ (id)pagePathFromURL:(id)arg1;
+ (id)_converSingleMenuItemsModelArrayToMMScrollActionSheetItemsArray:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSDictionary *singlePageRouteData; // @synthesize singlePageRouteData=_singlePageRouteData;
@property(retain, nonatomic) FixDocumentPresent *presentProxy; // @synthesize presentProxy=_presentProxy;
@property(nonatomic) _Bool isJSCProfileStarted; // @synthesize isJSCProfileStarted=_isJSCProfileStarted;
@property(nonatomic) _Bool isCppProfileStarted; // @synthesize isCppProfileStarted=_isCppProfileStarted;
@property(retain, nonatomic) NSArray *arrTempSpecificContacts; // @synthesize arrTempSpecificContacts=_arrTempSpecificContacts;
@property(retain, nonatomic) id <IWARecentForwardScrollViewHelper> recentForwardHelper; // @synthesize recentForwardHelper=_recentForwardHelper;
@property(copy, nonatomic) CDUnknownBlockType webViewLeaveCallback; // @synthesize webViewLeaveCallback=_webViewLeaveCallback;
@property(nonatomic) _Bool isInterceptingNavigateBackJsApi; // @synthesize isInterceptingNavigateBackJsApi=_isInterceptingNavigateBackJsApi;
@property(nonatomic) _Bool isInterceptingLeftButtonBack; // @synthesize isInterceptingLeftButtonBack=_isInterceptingLeftButtonBack;
@property(nonatomic) _Bool isInterceptingInteractivePopBack; // @synthesize isInterceptingInteractivePopBack=_isInterceptingInteractivePopBack;
@property(nonatomic) _Bool routeRewrited; // @synthesize routeRewrited=_routeRewrited;
@property(copy, nonatomic) NSString *exposeSnapShotLocalId; // @synthesize exposeSnapShotLocalId=_exposeSnapShotLocalId;
@property(nonatomic) float moduleLoadingProgress; // @synthesize moduleLoadingProgress=_moduleLoadingProgress;
@property(retain, nonatomic) MMToastView *moduleLoadingView; // @synthesize moduleLoadingView=_moduleLoadingView;
@property(retain, nonatomic) SightIconView *quickLaunchLoadingView; // @synthesize quickLaunchLoadingView=_quickLaunchLoadingView;
@property(retain, nonatomic) WAAlertModel *navBackAlertModel; // @synthesize navBackAlertModel=_navBackAlertModel;
@property(nonatomic) _Bool notResetWhenWebviewRemoved; // @synthesize notResetWhenWebviewRemoved=_notResetWhenWebviewRemoved;
@property(copy, nonatomic) NSString *renderCacheAppServiceDataStr; // @synthesize renderCacheAppServiceDataStr=_renderCacheAppServiceDataStr;
@property(retain, nonatomic) NSTimer *urlCopyTimer; // @synthesize urlCopyTimer=_urlCopyTimer;
@property(nonatomic) _Bool disableAutoRsetPopGesture; // @synthesize disableAutoRsetPopGesture=_disableAutoRsetPopGesture;
@property(nonatomic) _Bool isAppWxssInjected; // @synthesize isAppWxssInjected=_isAppWxssInjected;
@property(nonatomic) unsigned int whiteScreenColorRatio; // @synthesize whiteScreenColorRatio=_whiteScreenColorRatio;
@property(copy, nonatomic) NSString *whiteScreenHexColor; // @synthesize whiteScreenHexColor=_whiteScreenHexColor;
@property(nonatomic) unsigned long long initReadyLastWhiteScreenDetectedTimeInMs; // @synthesize initReadyLastWhiteScreenDetectedTimeInMs=_initReadyLastWhiteScreenDetectedTimeInMs;
@property(nonatomic) _Bool hasReportedDisappearDoubleCheckWhiteScreen; // @synthesize hasReportedDisappearDoubleCheckWhiteScreen=_hasReportedDisappearDoubleCheckWhiteScreen;
@property(nonatomic) unsigned long long whiteScreenCheckScene; // @synthesize whiteScreenCheckScene=_whiteScreenCheckScene;
@property(nonatomic) _Bool detectedWhiteScreen; // @synthesize detectedWhiteScreen=_detectedWhiteScreen;
@property(nonatomic) unsigned long long recoverReloadInitReadyReceiveTime; // @synthesize recoverReloadInitReadyReceiveTime=_recoverReloadInitReadyReceiveTime;
@property(nonatomic) unsigned long long recoverReloadStartTime; // @synthesize recoverReloadStartTime=_recoverReloadStartTime;
@property(nonatomic) unsigned long long initReadyReceiveTime; // @synthesize initReadyReceiveTime=_initReadyReceiveTime;
@property(nonatomic) unsigned long long appRouteStartTime; // @synthesize appRouteStartTime=_appRouteStartTime;
@property(nonatomic) _Bool isFirstInitReadyReported; // @synthesize isFirstInitReadyReported=_isFirstInitReadyReported;
@property(nonatomic) unsigned long long lastRouteType; // @synthesize lastRouteType=_lastRouteType;
@property(nonatomic) _Bool presentingClose; // @synthesize presentingClose=_presentingClose;
@property(retain, nonatomic) MMProgressViewEx *loadingCoverLoadingView; // @synthesize loadingCoverLoadingView=_loadingCoverLoadingView;
@property(retain, nonatomic) UIImageView *loadingCoverImageView; // @synthesize loadingCoverImageView=_loadingCoverImageView;
@property(retain, nonatomic) UIView *loadingCoverClipView; // @synthesize loadingCoverClipView=_loadingCoverClipView;
@property(retain, nonatomic) UIView *webViewContainer; // @synthesize webViewContainer=_webViewContainer;
@property(retain, nonatomic) UIView *prevVCMask; // @synthesize prevVCMask=_prevVCMask;
@property(retain, nonatomic) NSString *instanceId; // @synthesize instanceId=_instanceId;
@property(nonatomic) unsigned int appServiceType; // @synthesize appServiceType=_appServiceType;
@property(nonatomic) unsigned int preloadMoment; // @synthesize preloadMoment=_preloadMoment;
@property(nonatomic) __weak id <WAWebViewControllerMenuActionCustomDelegate> customMenuDelegate; // @synthesize customMenuDelegate=_customMenuDelegate;
@property(nonatomic) __weak WAWebActionSheet *displayingWebActionSheet; // @synthesize displayingWebActionSheet=_displayingWebActionSheet;
@property(retain, nonatomic) NSMutableArray *topFullNativeViews; // @synthesize topFullNativeViews=_topFullNativeViews;
@property(retain, nonatomic) NSMutableDictionary *containerViews; // @synthesize containerViews=_containerViews;
@property(retain, nonatomic) NSMutableDictionary *nativeViews; // @synthesize nativeViews=_nativeViews;
@property(nonatomic) unsigned int tagNativeMax; // @synthesize tagNativeMax=_tagNativeMax;
@property(nonatomic) unsigned long long routeIntentionStartTimeInMs; // @synthesize routeIntentionStartTimeInMs=_routeIntentionStartTimeInMs;
@property(nonatomic) unsigned int foregroundTerminatedReloadCount; // @synthesize foregroundTerminatedReloadCount=_foregroundTerminatedReloadCount;
@property(copy, nonatomic) CDUnknownBlockType m_onViewDidAppearThenCreateTab; // @synthesize m_onViewDidAppearThenCreateTab=_m_onViewDidAppearThenCreateTab;
@property(nonatomic) _Bool m_bIsRecoverReloaded; // @synthesize m_bIsRecoverReloaded=_m_bIsRecoverReloaded;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadViewDidAppear; // @synthesize m_onLoadViewDidAppear=_m_onLoadViewDidAppear;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadInitReady; // @synthesize m_onLoadInitReady=_m_onLoadInitReady;
@property(nonatomic) _Bool m_bIsDelayPushWebView; // @synthesize m_bIsDelayPushWebView=_m_bIsDelayPushWebView;
@property(readonly, nonatomic) _Bool m_bIsBottomBannerVisible; // @synthesize m_bIsBottomBannerVisible=_m_bIsBottomBannerVisible;
@property(retain, nonatomic) WAWebviewBottomBannerView *m_bottomBanner; // @synthesize m_bottomBanner=_m_bottomBanner;
@property(retain, nonatomic) WABrandTitleBar *m_sheetModeBrandTitleBar; // @synthesize m_sheetModeBrandTitleBar=_m_sheetModeBrandTitleBar;
@property(retain, nonatomic) UIColor *backgroundColorContent; // @synthesize backgroundColorContent=_backgroundColorContent;
@property(nonatomic) unsigned int m_uiWebviewIDBeforeRewriteRoute; // @synthesize m_uiWebviewIDBeforeRewriteRoute=_m_uiWebviewIDBeforeRewriteRoute;
@property(retain, nonatomic) UIView<IWASkylineView><YYWebViewInterface> *skylineView; // @synthesize skylineView=_skylineView;
@property(retain, nonatomic) WAWebViewPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
@property(retain, nonatomic) NSString *m_rawRelativeURL; // @synthesize m_rawRelativeURL=_m_rawRelativeURL;
@property(copy, nonatomic) NSString *m_initRelativeURLBeforeRoute; // @synthesize m_initRelativeURLBeforeRoute=_m_initRelativeURLBeforeRoute;
@property(retain, nonatomic) WAProvideApiConfig *provideApiCfg; // @synthesize provideApiCfg=_provideApiCfg;
@property(nonatomic) long long enmPullRefreshMode; // @synthesize enmPullRefreshMode=_enmPullRefreshMode;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) __weak WAApptaskPublicResLogic *publicResLogic; // @synthesize publicResLogic=_publicResLogic;
@property(retain, nonatomic) NSMutableDictionary *extraParams; // @synthesize extraParams=_extraParams;
@property(nonatomic) _Bool m_bIsFromPreloadTaskWithNotAppInfo; // @synthesize m_bIsFromPreloadTaskWithNotAppInfo;
@property(nonatomic) _Bool m_bIsInsertLivePusher; // @synthesize m_bIsInsertLivePusher;
@property(nonatomic) _Bool m_bIsInsertCamera; // @synthesize m_bIsInsertCamera;
@property(readonly, nonatomic) _Bool m_bWebviewReceiveTerminateSignalManually; // @synthesize m_bWebviewReceiveTerminateSignalManually;
@property(readonly, nonatomic) _Bool m_bWebviewReceiveTerminateSignal; // @synthesize m_bWebviewReceiveTerminateSignal;
@property(retain, nonatomic) WAWebViewMenuNavBarProperties *m_navBarProperties; // @synthesize m_navBarProperties=_navBarProperties;
@property(retain, nonatomic) WAWebViewMutiFuncMenuView *m_menuView; // @synthesize m_menuView=_menuView;
@property(readonly, nonatomic) NSString *m_initUrl; // @synthesize m_initUrl;
@property(retain, nonatomic) NSMutableDictionary *m_extraInfo; // @synthesize m_extraInfo;
@property(nonatomic) _Bool m_isLanscape; // @synthesize m_isLanscape;
@property(readonly, nonatomic) _Bool m_isFinishLoaded; // @synthesize m_isFinishLoaded;
@property(readonly, nonatomic) WAWebViewJSLogicImpl *m_jsLogicImpl; // @synthesize m_jsLogicImpl;
@property(nonatomic) __weak id <WAWebViewDelegate><WAMinimizeDelegate> m_delegate; // @synthesize m_delegate;
@property(readonly, nonatomic) unsigned int m_uiWebviewID; // @synthesize m_uiWebviewID;
@property(retain, nonatomic) UIView<YYWebViewInterface> *webView; // @synthesize webView;
@property(nonatomic) _Bool m_bIsStatusBarBlack; // @synthesize m_bIsStatusBarBlack=_bIsStatusBarBlack;
- (void)scaleTabbarIconAndTitleIfNeeded;
- (void)onLanguageChange;
- (void)ReachabilityChange:(unsigned int)arg1;
- (void)onAppTaskClose;
- (_Bool)isTerminatedManually;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)clearExposeSnapShotIfNeeded;
- (id)tagForCurrentPage;
- (id)popWebViewCountFromSelf:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)enableGestureBack:(_Bool)arg1;
- (id)extJSModels;
- (id)getCurPubResLogic;
- (unsigned int)getCurTaskRunningState;
- (id)getPluginScheduler;
- (id)getWxaExternalInfo;
- (void)remoteDomEvent:(id)arg1 webViewID:(unsigned int)arg2;
- (_Bool)canInjectFullWxConfig;
- (unsigned int)webViewPreloadMoment;
- (_Bool)isPreloadWebView;
- (_Bool)isIgnoreRemoteCheckDomain;
- (_Bool)isOpenDebugAndVConsole;
- (unsigned int)getDebugModeType;
- (unsigned long long)getAppVersion;
- (id)getWAWebViewController;
- (void)checkUserAuthWithJSAPI:(id)arg1 permissionAppID:(id)arg2 model:(id)arg3 handler:(CDUnknownBlockType)arg4 failHandler:(CDUnknownBlockType)arg5 transferHandler:(CDUnknownBlockType)arg6;
- (_Bool)checkRunModeOnWebview:(id)arg1;
- (id)getPermissionResultWithJSAPI:(id)arg1 withAppId:(id)arg2 byTempPermission:(id)arg3;
- (id)getPermissionResultWithJSAPI:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (id)webviewController;
- (void)webView:(id)arg1 didFailEvaluateJS:(id)arg2 withError:(id)arg3;
- (void)webviewDidReceiveScriptMessage:(id)arg1 handler:(id)arg2 rawMessage:(id)arg3;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removeAllNativeViewsAndNotifyPlugin;
- (void)webViewContentProcessDidTerminate:(id)arg1;
- (void)reportPublibJSInjectWithFileName:(id)arg1 length:(unsigned int)arg2 beginTime:(unsigned int)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 navigation:(id)arg3;
- (void)finishLoadAction;
- (void)processDidFinishLoadWebView:(id)arg1 navigation:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1 navigation:(id)arg2;
- (void)showPublicJSSpendTime;
- (void)checkJSBridgeObjects:(_Bool)arg1;
- (void)webViewDidStartLoad:(id)arg1 navigation:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 isMainFrame:(_Bool)arg4 navigationAction:(id)arg5;
- (id)getPreInjectScriptStr;
- (id)fetchPublicResLogic;
- (void)goToURL:(id)arg1;
- (void)stop;
- (void)reload;
- (void)onSkylineNavigateBackDone:(long long)arg1;
- (void)onSkylineNavigateBack:(long long)arg1;
- (void)onSkylineRouteDone:(long long)arg1;
- (void)onSkylineWindowReady;
- (void)notifySkylineSwitchTab;
- (void)notifySkylineAutoReLaunch;
- (void)notifySkylineReLaunch;
- (void)notifySkylineAppLaunch;
- (void)notifySkylineNavigateBack:(long long)arg1 animated:(_Bool)arg2;
- (void)notifySkylineRedirectTo;
- (void)notifySkylineNavigateTo;
- (id)makeSkylinePageCfg;
- (void)webviewApiResult:(id)arg1;
- (void)serviceInvokeWebviewApi:(id)arg1;
- (id)getSkylineSinglePageData:(_Bool)arg1;
- (void)setSkylineSinglePageRouteData:(id)arg1;
- (void)viewWillLayoutSubviews;
- (id)jumpFromWeAppTaskAppid;
- (id)jumpingSheetWeAppTaskAppid;
- (_Bool)jumpingEmbedWeAppTaskIsStating;
- (_Bool)hasJumpingEmbedWeAppTask;
- (_Bool)isRunningInEmbedMode;
- (_Bool)isSimulatedNativeSheetModeShouldHideLeftReturnButton;
- (_Bool)isSheetModeDragGestureDragging;
- (_Bool)isEnableSheetModeFullScreenGesture;
- (_Bool)isRunningInKeepContextView;
- (_Bool)isRunningInSheetMode;
- (_Bool)isResizable;
- (id)pageOrientation;
- (void)viewDidLayoutSubviews;
- (void)navigationControllerDidPresent:(id)arg1;
- (void)viewDidPresent:(id)arg1 animated:(_Bool)arg2;
- (void)viewWillBeDismissed:(_Bool)arg1;
- (void)viewDidBeDismissed:(_Bool)arg1;
- (void)viewDidBePoped:(_Bool)arg1;
- (void)onWebViewLeave;
- (void)viewWillBePoped:(_Bool)arg1;
- (void)viewDidPop:(_Bool)arg1;
- (void)viewDidPush:(_Bool)arg1;
- (void)viewDidBePresented:(_Bool)arg1;
- (void)viewDidBePushed:(_Bool)arg1;
- (void)viewWillBePushed:(_Bool)arg1;
- (void)viewWillPop:(_Bool)arg1;
- (void)viewWillPush:(_Bool)arg1;
- (void)willDisappear;
- (void)didAppear;
- (void)willAppear;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (_Bool)useBlackStatusbar;
- (_Bool)useTransparentNavibar;
- (void)onLongPressOnWebview:(id)arg1;
- (void)enableLongPressDetect;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)adjustSubviewRects;
- (void)statusBarFrameWillChange:(id)arg1;
- (void)realTriggerPageReload;
- (void)onWebViewReadyToTerminate;
- (void)terminateManuallyWithReason:(long long)arg1;
- (void)pageReloadByManuallyTerminateWithRouteInfo:(id)arg1;
- (void)pageReloadWithRouteInfo:(id)arg1;
- (void)notifyOnFinishQuickReplyMsg;
- (void)notifyOnBeginQuickReplyMsg;
- (void)recoverWebView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)startProvideApi:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)findBackSkylineView;
- (void)initWebViewIfNeeded;
- (void)internalInitWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)supplyAppInfoWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (id)initForPreloadAppTask:(id)arg1 extraInfo:(id)arg2;
- (id)initWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)dealloc;
- (void)rewriteRouteToUrl:(id)arg1;
- (long long)currentPrivacyMenuState;
- (void)setBackgroundColor;
- (void)notifyToJSBridgeVisibilityChanged:(_Bool)arg1;
- (id)taskExtInfo;
- (id)extraInfo;
- (void)printConsoleLog:(id)arg1;
- (void)sendEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)publishSyncEventToJSBridge:(id)arg1 Param:(id)arg2 eventId:(unsigned int)arg3;
- (void)doJsApiInitEvent;
- (void)setCurrentUrl:(id)arg1;
- (id)getCurrentUrl;
- (long long)webviewContentMode;
- (_Bool)isNeedShowReturnItem;
- (_Bool)shouldShowCloseBtn;
- (void)onRouteToHome;
- (void)onReboot;
- (void)onAllExitInAction:(long long)arg1;
- (void)onAllExit;
- (void)OnReturn;
- (void)doBackActionCleanWithType;
- (void)DismissMyWebViewAnimated:(_Bool)arg1 forceDismiss:(_Bool)arg2;
- (void)DismissMyWebViewAnimated:(_Bool)arg1;
- (_Bool)isWeAppUseModule;
- (_Bool)getIsTaskUsePreload;
- (id)getUniqueRouteID;
- (id)getSessionID;
- (id)getPackageConfig;
- (id)getCurrentContact;
- (id)getCurrentUserName;
- (void)hideSplash;
- (void)setHideSplash:(_Bool)arg1;
- (_Bool)hasHTMLWeb;
- (_Bool)isRenderDidAppear;
- (_Bool)isViewDidAppear;
- (_Bool)isAlreadyViewWillAppear;
- (_Bool)isHomePage;
- (_Bool)isFirstPage;
- (_Bool)isLastWebVC;
- (_Bool)isTabWebVC;
- (_Bool)isThisPageUseTaskPreload;
- (unsigned int)getBorrowSkylineWebviewId;
- (_Bool)isThisPageUseSkylinePreload;
- (_Bool)isThisPageUsePreloadPageFrame;
- (_Bool)isThisPageUsePreload;
- (_Bool)isNeedCallCloseEventWhenWebviewDissmissed;
- (void)setBottomBannerHighlighted:(_Bool)arg1;
- (void)setBottomBannerVisible:(_Bool)arg1;
- (unsigned int)getSecFlagForSinglePageMode;
- (void)highlightTitleForSinglePageMode;
- (_Bool)shouldShowWeAppEntryInMenuView;
- (_Bool)isRestrictedBySecurityFlag;
- (_Bool)isUsingSinglePageMode;
- (void)reportHomeButtonHidden;
- (void)hidePageHomeButton;
- (_Bool)isHomeButtonHiddenByDeveloper;
- (_Bool)isCurrentPageConfigHomeButton;
- (_Bool)isCurrentPageNeedShowHomeButtonInitially;
- (_Bool)shouldShowPageHomeButton;
- (_Bool)isOpenAtSubPage;
- (void)registerLeakDetector;
- (unsigned long long)debugMode;
- (_Bool)isDebugMode;
- (_Bool)isAppLaunchFirstWebview;
- (id)getInstanceId;
- (unsigned int)getAppType;
- (id)getInitUrl;
- (long long)getCurrentVersionNum;
- (id)getCurrentAppId;
- (void)setTitle:(id)arg1;
- (id)fileService;
- (_Bool)onPopBackInteractiveRecognizeEdgeGesture;
- (_Bool)onPopBackInteractiveShouldRecognizeSimultaneously;
- (void)onPopBackInteractiveTransitionDidEnd:(id)arg1 isComplete:(_Bool)arg2;
- (void)onPopBackInteractiveTransitionWillEnd:(id)arg1 isComplete:(_Bool)arg2;
- (void)onPopBackInteractiveTransitionChange:(id)arg1 progress:(double)arg2;
- (void)onPopBackInteractiveTransitionBegin:(id)arg1;
- (_Bool)onPopBackInteractiveTransitionShouldBegin:(id)arg1;
- (id)mmNavigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)mmNavigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)removePopBackInteractivePopGesture;
- (void)addPopBackInteractivePopGesture;
- (void)showSmallWebPageIfCheckShowTips:(_Bool)arg1;
- (void)onWeAppDismissTransitionEnd:(_Bool)arg1;
- (id)currentPopInteractiveTransiton;
- (double)calVisibleHeight;
- (double)__pageVisibleHeight;
- (double)getTabBarHeight;
- (double)getBottomBarHeight;
- (_Bool)isTopTabBar;
- (double)getTopBarHeight;
- (double)getWebViewWindowHeight;
- (double)topNativeViewOriginYWhenFullScreenLike;
- (void)fsmenu_calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(double *)arg2 height:(double *)arg3;
- (void)normal_calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(double *)arg2 height:(double *)arg3;
- (void)calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(double *)arg2 height:(double *)arg3;
- (void)calcCurrentWebViewY:(double *)arg1 height:(double *)arg2;
- (void)resetWebviewInsetOrY;
- (void)resetTabBar;
- (void)setNavBarFloatingMode:(long long)arg1;
- (long long)getNavBarFloatingMode;
- (void)setContentNavMode:(long long)arg1;
- (long long)getContentNavMode;
- (id)processWebViewSceenShot2ThumbImage:(id)arg1;
- (void)snapShotWebviewImageAtTop:(CDUnknownBlockType)arg1;
- (id)snapShotWindowImage;
- (id)snapShotWebviewImage;
- (id)snapShotInnerWebviewImage;
- (void)printNativeView;
- (id)makeViewDesc:(id)arg1;
- (void)printView:(id)arg1 linePrefix:(id)arg2 buffer:(id)arg3;
- (void)printTreeView:(id)arg1;
- (_Bool)existNativeView:(unsigned int)arg1;
- (id)getContainer:(unsigned int)arg1;
- (void)removeContainer:(unsigned int)arg1;
- (id)attachWebScrollView:(struct CGRect)arg1 scrollHeight:(double)arg2 containerId:(unsigned int)arg3;
- (id)findScrollViews:(id)arg1 frame:(struct CGRect)arg2 scrollHeight:(double)arg3;
- (_Bool)CGRectEqualApproximately:(struct CGRect)arg1 toRect:(struct CGRect)arg2;
- (_Bool)IsScrollHeightEqualApproximately:(double)arg1 toHeight:(double)arg2;
- (id)attachWebScrollViewById:(unsigned int)arg1;
- (void)findContainerInView:(id)arg1;
- (void)updateContainerByScrollView:(id)arg1 containerId:(unsigned int)arg2;
- (id)getChildViews;
- (void)removeAllNativeViews;
- (_Bool)removeChildView:(unsigned int)arg1;
- (void)onTongCengChangedScrollView:(id)arg1;
- (id)getContainerViewFromNative:(id)arg1;
- (_Bool)isSelectableText:(id)arg1;
- (void)sortTopFullNativeViews;
- (void)bringNativeToFront:(id)arg1;
- (id)getChildView:(unsigned int)arg1;
- (void)updateParentId:(unsigned int)arg1 forChild:(unsigned int)arg2 fixed:(_Bool)arg3;
- (void)updateParentId:(unsigned int)arg1 forChild:(unsigned int)arg2;
- (unsigned int)insertChildView:(id)arg1 viewId:(unsigned int)arg2 parentId:(unsigned int)arg3;
- (unsigned int)genViewId;
- (id)getSafeNativeViewsWritable:(_Bool)arg1;
- (void)initNativeViews;
- (unsigned long long)getPageConfig_visualEffectInBackground;
- (void)showToast:(id)arg1;
- (void)onStopWASMProfile;
- (void)onStartWASMProfile;
- (void)onLoadModuleDataProgress:(unsigned int)arg1 progress:(float)arg2 remainSecond:(unsigned long long)arg3;
- (void)onLoadModuleData:(_Bool)arg1 errorCode:(long long)arg2 moduleName:(id)arg3;
- (void)reloadModuleData;
- (void)hideModuleDataLoading;
- (void)showModuleDataLoading;
- (void)checkModuleDataLoaded;
- (id)getFileData:(id)arg1;
- (void)getFileData:(id)arg1 referrerPolicyType:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)getFileData:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)filterRegularString:(id)arg1;
- (void)parseDataString:(id)arg1 AndGetStype:(id *)arg2 body:(id *)arg3 script:(id *)arg4;
- (id)elementStringFromXML:(id)arg1 startPos:(unsigned long long *)arg2 elementName:(id)arg3 containElementName:(_Bool)arg4;
- (id)getModuleRelativeFilePathForFileName:(id)arg1 moduleName:(id)arg2;
- (id)getCommonPageFrameData;
- (id)cachedDataWithURL:(id)arg1;
- (void)loadFrameContent:(id)arg1;
- (void)setLoadPageIndexStartTime:(long long)arg1;
- (long long)getLoadPageIndexStartTime;
- (void)loadModuleScriptDataWithFilePath:(id)arg1 complection:(CDUnknownBlockType)arg2;
- (void)loadModuleScriptDataWithFilePath:(id)arg1;
- (void)loadModuleSharedScript:(CDUnknownBlockType)arg1;
- (id)allElementStringFromHtml:(id)arg1 elementName:(id)arg2 containElementName:(_Bool)arg3;
- (id)getPageFrameJSStr;
- (void)finallyLoadPluginPageFrame:(id)arg1;
- (void)tryLoadOrdinaryModulePluginPageFrame:(id)arg1;
- (void)tryLoadMainPluginPageFrame:(id)arg1;
- (void)tryLoadMainModulePluginBeforeLoadModuleSharedScript;
- (void)loadPageFrameJSOfPreload:(CDUnknownBlockType)arg1;
- (void)tryLoadPreloadAppTaskIndexData;
- (void)reportPageFrameJSInjectStart:(long long)arg1 end:(long long)arg2 length:(unsigned int)arg3 lazyLoadKey:(id)arg4;
- (void)extractAndInjectPageFrameJSForFullPkg;
- (void)injectWebViewConfigForPreload;
- (void)loadPreloadAppTaskFrameData;
- (void)loadIndexData;
- (_Bool)currentUrlInIndepentModule;
- (_Bool)shouldInitFullWebView;
- (_Bool)shouldUseLazyLoad;
- (_Bool)isModuleLoaded:(id)arg1;
- (_Bool)isCurrentModuleLoaded;
- (id)currentModuleInfo;
- (id)currentModuleName;
- (void)loadMainModuleSharedCommonJS;
- (id)getFrameContentWithURL:(id)arg1;
- (void)loadFrameDataWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2;
- (void)bringTabBarToFront;
- (void)setNavigationBarTitle:(id)arg1 backgroundColor:(id)arg2 alpha:(double)arg3;
- (void)setPageBackgroundColor;
- (void)updateNavigationBarItemsAndStatusBarStyle;
- (id)pageAttribute;
- (void)setPreloadPageAttribute;
- (void)resetPreloadPageAttributeMark;
- (void)loadPreloadPageAttribute;
- (void)setupAttributeWhenKnowsPagePath;
- (void)trySendInitialRenderCache;
- (void)checkSendInitialRenderCacheIfNeeded;
- (void)doCallbackInitReady;
- (void)onCallbackInitReadyAfterRenderingCache;
- (void)onCallbackInitReadyFromPageCall:(_Bool)arg1;
- (void)onCallbackInitReadyFromPreloadManullyCall;
- (void)loadIndexDataWithRelativeURL:(id)arg1;
- (_Bool)isIndexDataLoaded;
- (id)getPreloadIndexURL;
- (id)getPreloadPageQuery;
- (void)updatePreloadPageRelativeURL:(id)arg1;
- (id)getPreloadPageRelativeURL;
- (id)getPreloadBaseURL;
- (id)preloadFrameFileName;
- (void)setIsConfiguredToShowHomePageButtonWithPageRelativePath:(id)arg1;
- (void)adjustViewSizeIfUnresizable;
- (_Bool)webViewIsCoveredByTemplateNav;
- (_Bool)systemCoverViewHidden;
- (unsigned long long)capsuleMenuType;
- (long long)capsuleMenuStyleMode;
- (struct CGRect)capsuleMenuFrame;
- (_Bool)capsuleMenuHidden;
- (void)sendBottomBannerClickEvent;
- (void)onHighlightedBottomBannerClicked:(id)arg1;
- (void)onBottomBannerBtnClicked:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)bottomBannerViewTitleTail;
- (struct CGRect)currentBottomBannerFrame;
- (void)resetBottomBanner;
- (void)quitVideoFullScreenIfHave;
- (_Bool)isInVideoFullScreen;
- (void)layoutCenterLoading;
- (void)initLoadingView;
- (_Bool)backgroundInLight;
- (void)hideQuickLaunchLoading;
- (void)showQuickLaunchLoading;
- (void)bringShownModalToFront;
- (void)dismissLoadingLayer;
- (void)showLoadingLayerWhenPushed;
- (void)onWebviewToastDidDismiss;
- (void)showJSApiForbbiddenToast:(id)arg1;
- (id)getAlertTitleWithFuncMenuView:(id)arg1;
- (id)getWeAppNameWithFuncMenuView:(id)arg1;
- (_Bool)shouldShowAlertTitleViewEntryBtnForMultiFuncMenuView:(id)arg1;
- (_Bool)shouldShowAlertTitleViewForMultiFuncMenuView:(id)arg1;
- (unsigned long long)leftButtonTypeForMultiFuncMenuView:(id)arg1;
- (_Bool)isWebviewPresenting;
- (void)onWebViewMenuReturn;
- (void)evaluateCommonReport:(unsigned long long)arg1 EvaluateScore:(unsigned int)arg2 Result:(unsigned long long)arg3;
- (void)onUpdateProfileEvaluate:(id)arg1 userName:(id)arg2 Score:(unsigned int)arg3;
- (void)showEvaluateSuccessAndExit;
- (void)writeEvaluateRatingValue:(unsigned int)arg1;
- (void)onCloseEvaluatePopSheet;
- (void)hideEvaluatePopSheet;
- (void)showEvaluatePopSheetAnimated;
- (_Bool)isEvaluateSheetVisible;
- (void)onWebviewMenuWeAppEntryBtnClicked;
- (void)onWebViewMenuHomeButtonClicked;
- (void)directlyOnAllExitWithAction:(long long)arg1;
- (void)directlyOnAllExit;
- (void)checkAndExitWithAction:(long long)arg1;
- (void)onWebViewMenuAllExitWithAction:(long long)arg1;
- (void)onWebViewMenuAllExit;
- (void)onWebViewMenuCustomRightButtonClick;
- (struct CGRect)currentMenuViewFrame;
- (void)setNavigationBarHidden:(_Bool)arg1;
- (void)setStatusBarHidden:(_Bool)arg1;
- (void)onWAWebErrorViewOperateBtnClick:(id)arg1;
- (void)show404ErrorView;
- (void)cancelShow404ErrorView;
- (void)delayShow404ErrorView;
- (void)webErrorViewDidTapQuitButton:(id)arg1;
- (void)webErrorViewDidTapOperationButton:(id)arg1;
- (void)showErrorViewWithUserName:(id)arg1 title:(id)arg2 desc:(id)arg3 reloadButtonTitle:(id)arg4;
- (void)showErrorViewWithMessage:(id)arg1 showReloadButton:(_Bool)arg2;
- (void)showErrorViewWithMessage:(id)arg1;
- (void)addBackInfoViewIndicator:(id)arg1;
- (id)getBackInfoViewWithAppId:(id)arg1 enablePullRefresh:(_Bool)arg2;
- (void)popToWebView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)popToFirstWebViewInStackWithAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (unsigned long long)getWebViewDepthInStack;
- (id)getFirstWebViewInStack;
- (void)tabBarDidSwitchTab;
- (id)getTabChildWebViewWithRelativeURL:(id)arg1;
- (void)updateTailViewFrame;
- (void)setTailBackGroundColor:(id)arg1;
- (void)sendWebViewTopViewToBack;
- (void)setWebViewTopViewColor:(id)arg1;
- (_Bool)shouldPreventDragDownCloseGesture;
- (void)onFullScreenLongPressEnd;
- (void)onFullScreenLongPressBegin;
- (void)onFullScreenBackgroundColorAlphaChange:(double)arg1;
- (void)onFullScreenDragToRect:(struct CGRect)arg1;
- (void)onFullScreenDragEnd;
- (void)onFullScreenDragCancel;
- (void)onFullScreenDragBegin;
- (void)onFullScreenClose;
- (void)onFullScreenSingleTap;
- (void)ensureFullScreenGesture;
- (void)initFullScreenGesture;
- (void)onClickQuitButton;
- (void)initQuitButton;
- (void)initLoadingCoverImageView:(id)arg1;
- (void)hideLoadingCoverImageView;
- (void)setWebViewBackgroundColor:(id)arg1;
- (void)setWkContentBackgroundColor:(id)arg1;
- (_Bool)getFullScreen;
- (void)setFullScreen:(_Bool)arg1;
- (void)disableFullScreen;
- (void)enableFullScreen;
- (long long)navBarFloatingModeWhenInit:(id)arg1;
- (long long)contentModeWhenInit:(id)arg1;
- (void)setFakeProgressLoadingVC:(id)arg1;
- (id)fakeProgressLoadingVC;
- (void)setCustomNavBarOffset:(double)arg1;
- (double)getCustomNavBarOffset;
- (void)setNavLoading:(_Bool)arg1;
- (void)updateNavMenuHidden;
- (void)setCustomNavRightButtonWithImage:(id)arg1 accessibilityLabel:(id)arg2;
- (void)setCustomNavRightButton:(id)arg1 accessibilityLabel:(id)arg2;
- (void)setNavRightButtonHidden:(_Bool)arg1;
- (void)setNavTitle:(id)arg1;
- (void)setNavBarElementAndStatusBarStyle:(long long)arg1;
- (void)setStatusBarFontDefault;
- (long long)preferredStatusBarStyle;
- (void)changeStatusBarWhite:(_Bool)arg1;
- (void)setNavBarBgColor:(id)arg1;
- (void)setViewFullScreen:(id)arg1;
- (void)updateNavView;
- (id)currentNavMenuView;
- (void)resetNavView;
- (id)title;
- (void)insertSubViewAboveWebView:(id)arg1;
- (void)resetNativeLayers;
- (void)uiLayoutSubView;
- (_Bool)customDelegate_mustNotShowFavItem;
- (_Bool)customDelegate_mustNotShowADMenuItem;
- (_Bool)customDelegate_mustNotHandleMenuShowOrDismiss;
- (_Bool)customDelegate_mustShowGoHome;
- (_Bool)customDelegate_mustNotShareTimeline;
- (_Bool)customDelegate_mustNotShare;
- (_Bool)shouldHandleMenuShowOrDismiss;
- (_Bool)canShowADMenuItem;
- (id)getPresentContact;
- (_Bool)canShowCommentMenuItem;
- (_Bool)canShowShareToWeUseItem;
- (_Bool)weappCanGoHome;
- (_Bool)isShareTimelineItemEnable;
- (_Bool)canShareWeWorkItemBeSelected;
- (_Bool)canShowShareWeworkItem;
- (_Bool)canShowGameLiveItem;
- (_Bool)canShowHandoffItem;
- (_Bool)canShowAddToDesktopItem;
- (_Bool)canShowFavItem;
- (_Bool)canShowShareTimelineItem;
- (_Bool)isShareMenuItemWantToBeSelected;
- (_Bool)canShareMenuItemBeSelected;
- (_Bool)canShowShareMenuItem;
- (_Bool)canSelectControlByteMenuItem:(unsigned long long)arg1;
- (_Bool)canShowControlByteMenuItem:(unsigned long long)arg1;
- (_Bool)canShowGrowGuard;
- (_Bool)canShowFirstRow;
- (_Bool)canCopyPathQueryMenuItemBeSelected;
- (_Bool)canCopyMPShortLinkMenuItemBeSelected;
- (_Bool)canShowCopyMPShortLinkMenuItem;
- (_Bool)canShowCopyPathQueryMenuItem;
- (id)pluginHtmlWeb;
- (id)pluginNavBar;
- (id)pluginLivePlayer;
- (id)pluginVideoPlayer;
- (id)pluginKeyboard;
- (id)pluginAppMsg;
- (id)pluginReportPageEvent;
- (void)onClickTipsBtn:(id)arg1 Index:(long long)arg2 tipTag:(long long)arg3;
- (void)showTipsViewWithTitle:(id)arg1 content:(id)arg2 tipsTag:(long long)arg3 delegate:(id)arg4;
- (id)getCurrentViewController;
- (void)notifyToAddFavItem;
- (void)shareToWeWork;
- (void)notifyToHandoff;
- (void)notifyToGameLive;
- (void)shareTimeLine;
- (void)commonShareToSpecificContacts:(id)arg1;
- (void)showTipsViewController:(id)arg1;
- (void)onCopyMPShortLinkSuccess:(id)arg1;
- (void)onCopyMPShortLink;
- (void)onCopyPathQuerySuccess:(id)arg1;
- (void)onCopyPathQueryOrigin;
- (void)onCopyPathAndQuery;
- (void)onSellsDriving;
- (void)onAddToDesktop;
- (void)onCancelStar;
- (void)onAddToStar;
- (void)onClosePerformance;
- (void)onOpenPerformance;
- (void)onOpenBrandProfile;
- (void)onOpenBrandProfileForAppid:(id)arg1;
- (void)onSwitchRenderType:(long long)arg1;
- (void)onCloseVConsole;
- (void)onOpenVConsole;
- (void)onDebugMenuShow;
- (void)onStopJSCProfile;
- (void)onStartJSCProfile;
- (void)onWARFRelayoutScrollSheet;
- (void)onWARFItemCallBack:(id)arg1;
- (void)scrollActionSheetWillDismiss:(id)arg1;
- (void)scrollActionSheetDidClickTopPrivacy:(id)arg1;
- (void)scrollActionSheetDidClickTop:(id)arg1;
- (void)scrollActionSheetDidTapTransparent:(id)arg1;
- (void)scrollActionSheetDidCancel:(id)arg1;
- (void)scrollActionSheet:(id)arg1 didSelecteDisableItem:(id)arg2;
- (void)scrollActionSheet:(id)arg1 didSelecteItem:(id)arg2;
- (void)reportMenuAction:(unsigned long long)arg1;
- (id)customViewForRow:(long long)arg1;
- (void)onSplashADMenuItemViewClicked:(id)arg1;
- (void)onWAActionSheetProfileClicked;
- (void)handleMenuDisappear;
- (void)onWAActionSheetDidDismiss;
- (void)onWAActionSheetWillDismiss;
- (void)onWAActionSheetDestruct;
- (void)onWAActionSheetInfoClicked;
- (void)showSmallWebPage;
- (void)hideSmallWebPage;
- (void)onWAActionSheetClickButtonWithButtonTitle:(id)arg1;
- (void)gotoGrowGuard;
- (_Bool)canShowTradeComplaintItem;
- (void)gotoFeedback;
- (id)saveExposeSnapShot;
- (void)onClickTradeComplaint;
- (void)gotoSettingForAppid:(id)arg1;
- (void)gotoSetting;
- (void)onWAActionSheetClickStateView;
- (id)menuDebugButtonTitleArray;
- (id)menubuttonTitleArray;
- (_Bool)isMenuVisible;
- (id)genMenuIconArrayForSinglePageMode;
- (id)genMenuIconArray;
- (void)handleNotifyMenuShowToService;
- (int)transShareWeworkTypeToReport;
- (void)onCommentShown:(unsigned int)arg1;
- (void)onCommentTaped:(unsigned int)arg1;
- (void)onTapedCoverAd;
- (void)onTapedHostWeApp;
- (void)onTapedPrivacy;
- (void)onTapedTitle;
- (id)getCoverAdDisplayNameFor:(id)arg1;
- (id)getEmbedDisplayNameFor:(id)arg1;
- (void)showMenuAtView:(id)arg1 curPrivacy:(long long)arg2;
- (void)onMenuShow;
- (_Bool)shouldShowFloatingVideoWithType:(long long)arg1;
- (id)getLastFloatingViewWrapper;
- (void)updateConfig;
- (long long)getFloatingPlayerViewType:(id)arg1;
- (void)videoPausedWithPlayerId:(unsigned int)arg1;
- (void)videoStartPlayingWithPlayerId:(unsigned int)arg1;
- (void)removeLastPlayerInDic;
- (void)parseFromDic:(id)arg1 playerId:(unsigned int)arg2 type:(long long)arg3;
@property(nonatomic) _Bool audioOnlyMode;
@property(nonatomic) _Bool shouldNotFloat;
@property(nonatomic) long long floatingPlayerType;
@property(nonatomic) long long floatType;
@property(nonatomic) unsigned int lastPlayerId;
@property(retain, nonatomic) NSMutableDictionary *floatingVideoDic;
- (id)getCurrentPageQuery;
- (id)getCurrentPageRelativePath;
- (id)getCurrentPagePath;
- (id)getParentViewController;
- (id)getWAContact;
- (id)getAppId;
- (unsigned long long)webviewPlugin_getEnvironmentType;
- (void)resetPopBackInteractivePopGesture;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)updateWKWebViewFrameByOrientation:(long long)arg1;
- (void)updateWKWebViewFrame;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)webviewDidTransitionFromOldSize:(struct CGSize)arg1 toNewSize:(struct CGSize)arg2;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientationsAfterDidAppear;
- (unsigned long long)supportedInterfaceOrientations;
- (unsigned long long)currentPageOrientationMask;
- (void)realRotateToOrientation:(long long)arg1;
- (_Bool)tryForceRotationToPageOrientation;
- (void)tryForceRotationToPageOrientationWhenDidAppear;
- (long long)checkIfNeedForceRotation:(id)arg1;
- (_Bool)checkValidPageOrientation:(id)arg1;
- (id)pageOrientationRelatedParamWhenSendResizeEvent;
- (_Bool)setPageOrientationInternal:(id)arg1 FromPublicApi:(_Bool)arg2;
- (_Bool)private_setPageOrientation:(id)arg1;
- (_Bool)public_setPageOrientation:(id)arg1;
- (void)quitVideoFullScreen;
- (void)enterVideoFullScreenWithOrientation:(long long)arg1;
- (void)onWindowBecomeHidden:(id)arg1;
- (void)stopObservingWindow;
- (void)startObservingWindow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSURLRequest *request;
@property(readonly) Class superclass;

@end

