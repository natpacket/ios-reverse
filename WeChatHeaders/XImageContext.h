//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DynamicDispatcher, EAGLContext, NSString;
@protocol MTLDevice;

@interface XImageContext : NSObject
{
    struct ObjectRef<xnet::rci::RciRenderDevice> _device;
    struct vImage_ARGBToYpCbCr _ArgbToYuvConverter;
    struct __CVPixelBufferPool *_yuvCVPool;
    struct CGSize _yuvTexturePoolSize;
    struct vector<PixelBufferPoolDesc, std::allocator<PixelBufferPoolDesc>> _pixelBufferPools;
    struct unique_ptr<xeffect::RenderGraph, std::default_delete<xeffect::RenderGraph>> _renderGraph;
    struct __CVMetalTextureCache *_cvMetalTextureCache;
    struct __CVOpenGLESTextureCache *_cvGLTextureCache;
    EAGLContext *_glContext;
    void *_commandBuffer;
    unsigned long long _preferredFPS;
    NSString *_shaderPath;
    EAGLContext *_originContext;
    DynamicDispatcher *_dispatcher;
}

+ (id)context;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) DynamicDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(nonatomic) __weak EAGLContext *originContext; // @synthesize originContext=_originContext;
@property(copy, nonatomic) NSString *shaderPath; // @synthesize shaderPath=_shaderPath;
@property(nonatomic) unsigned long long preferredFPS; // @synthesize preferredFPS=_preferredFPS;
@property(readonly, nonatomic) void *commandBuffer; // @synthesize commandBuffer=_commandBuffer;
@property(retain, nonatomic) EAGLContext *glContext; // @synthesize glContext=_glContext;
@property(readonly, nonatomic) struct __CVOpenGLESTextureCache *cvGLTextureCache; // @synthesize cvGLTextureCache=_cvGLTextureCache;
@property(readonly, nonatomic) struct __CVMetalTextureCache *cvMetalTextureCache; // @synthesize cvMetalTextureCache=_cvMetalTextureCache;
- (void)dispatchAsync:(CDUnknownBlockType)arg1;
- (void)dispatchSync:(CDUnknownBlockType)arg1;
- (void)endFrame;
- (void)beginFrame;
- (struct __CVBuffer *)createPixelBuffer:(unsigned int)arg1 width:(int)arg2 height:(int)arg3;
- (struct __CVPixelBufferPool *)getCompatiblePixelBufferPool:(unsigned int)arg1 width:(int)arg2 height:(int)arg3;
@property(readonly, nonatomic) id <MTLDevice> metalDevice;
- (void)updateOutputYUVPool:(struct CGSize)arg1;
- (struct opaqueCMSampleBuffer *)convertToYUVSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 size:(struct CGSize)arg2;
- (void)executeConvertToYp8_CbCr8:(const struct vImage_Buffer *)arg1 dstY:(const struct vImage_Buffer *)arg2 dstUV:(const struct vImage_Buffer *)arg3 useArmPP:(_Bool)arg4;
- (struct opaqueCMSampleBuffer *)convertRGBA8ToYuv:(struct opaqueCMSampleBuffer *)arg1;
- (void)clear;
- (id)initWithOpenGLContext:(id)arg1;
- (id)init;
@property(readonly, nonatomic) void *renderDevice;
- (void *)materialLoader;
- (void *)renderGraph;
- (void)unBindFromTLS;
- (void)bindToTLS;
- (void)dealloc;
- (id)builtInShaderPath;

@end

