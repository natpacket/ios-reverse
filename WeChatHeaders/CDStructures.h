//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class CADisplayLink, DelayingGestureRecognizer, FlutterBasicMessageChannel, FlutterDartProject, FlutterEngine, FlutterMethodChannel, FlutterObservatoryPublisher, FlutterPlatformPlugin, FlutterRestorationPlugin, FlutterTextInputPlugin, FlutterView, FlutterViewController, NSArray, NSData, NSMutableArray, NSMutableSet, NSObject, NSString, SemanticsObjectContainer, UIGestureRecognizer, UIHoverGestureRecognizer, UIPanGestureRecognizer, UIScrollView, UIView, UIViewController, WAEJFontDescriptor, WAEJPath, WAEJTexture, WCFinderDynamicIconFetcherResponse, WCFinderShareSpanState, WloginErrInfo, WloginUserInfo;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AAPLTextureFormatInfo {
    int _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ABAControlParams {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    float _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    float _field19;
    float _field20;
    _Bool _field21;
    int _field22;
    _Bool _field23;
    float _field24;
    float _field25;
    float _field26;
};

struct AESCrypt {
    unsigned char _field1[16];
    struct aes_key_st _field2;
    int _field3;
    unsigned char _field4[16];
};

struct AMRDecodeFloat {
    void *_field1;
};

struct AMREncodeFloat;

struct ARNativeCameraFrame {
    unsigned int format;
    char *y_address;
    unsigned int y_width;
    unsigned int y_width_stride;
    unsigned int y_height;
    char *uv_address;
    char *uv_address2;
    unsigned int uv_width;
    unsigned int uv_width_stride;
    unsigned int uv_height;
    unsigned int uv_len;
    unsigned int uv_len2;
    unsigned int uv_pixel_stride;
    unsigned long long pts_ms;
    unsigned int y_texture;
    unsigned int uv_texture;
    int camera_position;
};

struct AVAudioFifo;

struct AVBufferRef;

struct AVCodecContext;

struct AVFormatContext;

struct AVFrame;

struct AVPicture;

struct AVRational {
    int num;
    int den;
};

struct AccessibilityBridgeIos;

struct AccessoryCmd {
    unsigned short _field1;
    unsigned short _field2;
    long long _field3;
    struct AutoBuffer _field4;
    struct AutoBuffer _field5;
};

struct AffAccountManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffAccountManagerCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffCgiManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffCgiManagerCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffFlutterCgiHostBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffFlutterCgiHostCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffIlinkKeeperCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct AffMmkvManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffMmkvManagerCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffTingColorUtilsBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffTingColorUtilsCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffTingImageUtilsBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffTingImageUtilsCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffTingReportManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AffTingReportManagerCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AndroidReport_t {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct AppSessionBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct ArcLineCell;

struct ArcLineData {
    struct ArcLineCell **_field1;
    unsigned long long _field2;
    int *_field3;
    unsigned long long _field4;
    int _field5;
    int _field6;
    int _field7;
    float _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    float _field13;
    _Bool _field14;
    _Bool _field15;
    int _field16;
    int _field17;
    int _field18;
    struct Gradient *_field19;
};

struct AssetManager;

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioChannelDescription {
    unsigned int mChannelLabel;
    unsigned int mChannelFlags;
    float mCoordinates[3];
};

struct AudioChannelLayout {
    unsigned int mChannelLayoutTag;
    unsigned int mChannelBitmap;
    unsigned int mNumberChannelDescriptions;
    struct AudioChannelDescription mChannelDescriptions[1];
};

struct AudioCoder {
    int _field1;
    void *_field2;
    void *_field3;
    void *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    void *_field12;
    short _field13[5][320];
    int _field14[5][2];
    void *_field15;
};

struct AudioDecodeCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioDecoder {
    void *_field1;
    void *_field2;
    int _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    void *_field10;
};

struct AudioDeviceCapCallback;

struct AudioDevicePlayCallback;

struct AudioEffectManager;

struct AudioEncodeParams {
    int num_channels;
    int sample_rate;
    int frame_length_ms;
    int bits_per_channel;
    int bitrate_bps;
    int encode_mode;
    _Bool inbandfec_enabled;
};

struct AudioFrameRingBuffer;

struct AudioHardwareSystemNotificationsCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioMetadata {
    int _field1;
    int _field2;
    int _field3;
};

struct AudioMusicParam {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    basic_string_0ec669f3 _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    long long _field7;
    long long _field8;
    _Bool _field9;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueuePlayerState {
    struct OpaqueAudioQueue *_field1;
    struct AudioQueueBuffer *_field2[3];
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    _Bool _field6;
};

struct AudioSessionFactors {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
};

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long mStartOffset;
    unsigned int mVariableFramesInPacket;
    unsigned int mDataByteSize;
};

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct AudioTypeHeader;

struct AudioUnitCaptureDataCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioUnitPlayDataCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct AuthManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct AutoBuffer {
    char *_field1;
    long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct BaseBinding;

struct BaseRC;

struct BatchSnsReqImageData;

struct BeautyManagerProxy;

struct BindParameter {
    CDUnknownFunctionPointerType *_field1;
    CDUnion_7c34b7b7 _field2;
    int _field3;
    struct StringView _field4;
};

struct BindStateBase;

struct BindingApp;

struct BizDynamicCardMrgBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct BizDynamicCardMrgCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct BizManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct BizManagerCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct BizWechatNotifyDataChangeBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct BizWechatNotifyDataChangeCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct BodyConfig {
    char *_field1;
    char *_field2;
};

struct BoxInfo;

struct BufNode {
    struct opaqueCMSampleBuffer *_field1;
    struct BufNode *_field2;
    int _field3;
};

struct BundleLoadIDKey {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct C2CDownloadRequest {
    _Bool use_uniform_callback;
    struct shared_ptr<mars::cdn::TaskCallback> sp_callback;
    basic_string_0ec669f3 debugip;
    basic_string_0ec669f3 authkey;
    basic_string_0ec669f3 filekey;
    void *user_context;
    basic_string_0ec669f3 arg_info;
    int queue_timeout_seconds;
    int transfor_timeout_seconds;
    basic_string_0ec669f3 statefile;
    basic_string_0ec669f3 expected_filemd5;
    unsigned long long expected_filesize;
    basic_string_0ec669f3 savepath;
    unsigned long long filesize_max;
    basic_string_0ec669f3 aeskey;
    int filetype;
    int apptype;
    int bizid;
    unsigned int concurrent_count;
    _Bool use_multithread;
    basic_string_0ec669f3 custom_request_header;
    unsigned long long filesize_hint;
    int download_behavior;
    basic_string_0ec669f3 flowtag;
    _Bool issmallvideo;
    int islargesvide;
    int request_video_format;
    int videoflag_policy;
    basic_string_0ec669f3 request_videoflag;
    _Bool is_hlsvideo;
    basic_string_0ec669f3 hls_videoflag;
    int predownload_ratio;
    long long predownload_minsize;
    _Bool is_hot_snsvideo;
    int videomode;
    basic_string_0ec669f3 msg_extra;
    basic_string_0ec669f3 fileid;
    basic_string_0ec669f3 bigfile_signture;
    basic_string_0ec669f3 fakeBigfileSignature;
    basic_string_0ec669f3 fakeBigfileSignatureAeskey;
    _Bool isstoragemode;
    _Bool isautostart;
    _Bool is_silent_task;
    int chattype;
    unsigned int blocksize;
    int expect_image_format;
    long long max_retry_count;
    _Bool is_cold_snsdata;
    basic_string_0ec669f3 url;
    basic_string_0ec669f3 sns_scene;
    unsigned long long sns_decrypt_key;
    basic_string_0ec669f3 snsvideo_extradata;
    int msg_type_;
    basic_string_0ec669f3 feed_id_;
    int feed_pic_count_;
    struct vector<mars::cdn::BatchSnsReqImageData, std::allocator<mars::cdn::BatchSnsReqImageData>> batch_image_req_datas;
    basic_string_0ec669f3 referer;
    struct QuicTaskParams quic_task_params;
    unsigned long long task_start_time;
    basic_string_0ec669f3 http_method;
    _Bool use_newdns;
    _Bool use_cronet;
    int certificate_policy;
    basic_string_0ec669f3 host;
    unsigned int max_http_redirect_count;
    basic_string_0ec669f3 bakup_url;
    struct unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::string>>> verify_headers;
    unsigned int pcdn_appid;
    int max_pcdn_connections;
    CDUnknownFunctionPointerType decoder;
    unsigned int backup_offset;
    unsigned int backup_length;
    unsigned long long initial_offset;
    unsigned long long initial_length;
};

struct C2CDownloadResult {
    int error_code;
    int filetype;
    basic_string_0ec669f3 filekey;
    void *user_context;
    basic_string_0ec669f3 arg_info;
    unsigned long long file_size;
    basic_string_0ec669f3 fileid;
    basic_string_0ec669f3 transfor_msg;
    basic_string_0ec669f3 trace_msg;
    basic_string_0ec669f3 filemd5;
    int video_format;
    int ori_video_format;
    basic_string_0ec669f3 recved_video_format;
    basic_string_0ec669f3 video_cdn_msg;
    unsigned long long recvedBytes;
    unsigned long long enQueueTime;
    unsigned long long startTime;
    unsigned long long endTime;
    unsigned long long firstRequestCost;
    unsigned long long firstRequestSize;
    unsigned long long firstRequestDownloadSize;
    _Bool firstRequestCompleted;
    unsigned long long averageSpeed;
    unsigned long long averageConnectCost;
    unsigned long long firstConnectCost;
    unsigned int netConnectTimes;
    unsigned int averageRtt;
    unsigned int moovRequestTimes;
    unsigned long long moovCost;
    unsigned long long moovSize;
    _Bool moovCompleted;
    int moovFailReason;
    unsigned long long previousCompletedSize;
    unsigned long long averageRequestSize;
    unsigned long long averageRequestCost;
    unsigned int requestTotalCount;
    unsigned int requestCompletedCount;
    unsigned int requestTimeoutCount;
    unsigned int svrFallbackCount;
    int httpStatusCode;
    basic_string_0ec669f3 httpResponseHeader;
    basic_string_0ec669f3 real_used_url;
    unsigned long long dns_cost_ms;
    unsigned long long queue_wait_cost_ms;
    unsigned long long connect_cost_ms;
    unsigned long long response_wait_cost_ms;
    unsigned long long response_all_cost_ms;
    basic_string_0ec669f3 client_ip;
    basic_string_0ec669f3 server_ip;
    basic_string_0ec669f3 xerrno;
    int cseq_result;
    _Bool crossNet;
    _Bool private_protocol;
    vector_bfe5b09a vUsedIp;
    unsigned short last_svrport;
    int last_nettype;
    _Bool is_resumed;
    _Bool is_sns_image_protocol_available;
    int pic_index;
    basic_string_0ec669f3 pic_cache_path;
    basic_string_0ec669f3 batch_pic_feedid;
    basic_string_0ec669f3 batch_image_file_key;
    struct vector<mars::cdn::BatchSnsReqImageData, std::allocator<mars::cdn::BatchSnsReqImageData>> batch_image_need_retry;
    int detail_error_type;
    int detail_error_code;
    long long trywrite_bytes;
    long long available_bytes;
    long long current_filesize;
    basic_string_0ec669f3 detail_error_msg;
    int transport_protocol;
    int transport_protocol_error;
    _Bool from_cronet;
    struct CronetTaskResult {
        _Bool use_quic;
        _Bool use_http2;
        _Bool socket_reused;
        int status_code;
        basic_string_0ec669f3 status_text;
        struct WebPageNeedProfile performance_;
    } cronet_task_result;
    unsigned long long task_start_time;
    unsigned int backup_offset;
    unsigned int backup_length;
    list_ea53b405 backup_listdata;
    struct list<mars::cdn::TlvMeta, std::allocator<mars::cdn::TlvMeta>> backup_listmeta;
    struct shared_ptr<mars::cdn::SNSVideoProfile> snsvideo_profile;
    struct shared_ptr<mars::cdn::VideoInfo> sp_videoinfo;
    unsigned long long trace_id;
    basic_string_0ec669f3 profile;
};

struct C2CUploadRequest {
    _Bool use_uniform_callback;
    struct shared_ptr<mars::cdn::TaskCallback> sp_callback;
    basic_string_0ec669f3 debugip;
    basic_string_0ec669f3 authkey;
    int bizid;
    int apptype;
    int filetype;
    basic_string_0ec669f3 filekey;
    void *user_context;
    basic_string_0ec669f3 touser;
    int queue_timeout_seconds;
    int transfor_timeout_seconds;
    basic_string_0ec669f3 statefile;
    basic_string_0ec669f3 filemd5;
    basic_string_0ec669f3 filepath;
    basic_string_0ec669f3 filebuffer;
    basic_string_0ec669f3 thumb_filebuffer;
    int islargesvideo;
    int videosource;
    unsigned int concurrent_count;
    basic_string_0ec669f3 custom_request_header;
    int lasterror;
    basic_string_0ec669f3 flowtag;
    _Bool sendmsg_from_cdn;
    _Bool check_exist_only;
    basic_string_0ec669f3 thumb_filepath;
    basic_string_0ec669f3 forward_fileid;
    basic_string_0ec669f3 forward_aeskey;
    int chattype;
    _Bool enableHitCheck;
    basic_string_0ec669f3 midimgPath;
    basic_string_0ec669f3 fakeBigfileSignature;
    basic_string_0ec669f3 fakeBigfileSignatureAeskey;
    basic_string_0ec669f3 bigfile_signture;
    _Bool force_nosafecdn;
    _Bool trysafecdn;
    _Bool isstoragemode;
    _Bool issmallvideo;
    basic_string_0ec669f3 sso_buffer_request;
    _Bool issnsadvideo;
    basic_string_0ec669f3 emoji_extinfo;
    basic_string_0ec669f3 host_;
    int port_;
    struct vector<mars::cdn::FileID, std::allocator<mars::cdn::FileID>> vfileids;
    struct vector<mars::cdn::CheckHitFileInfo, std::allocator<mars::cdn::CheckHitFileInfo>> batch_check_hit_files;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CFRef<__CVBuffer *> {
    struct __CVBuffer *instance_;
};

struct CFRef<__CVOpenGLESTextureCache *> {
    struct __CVOpenGLESTextureCache *instance_;
};

struct CFRef<const CGPath *> {
    struct CGPath *_field1;
};

struct CFastStr {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGAffineTransformComponents {
    struct CGSize scale;
    double horizontalShear;
    double rotation;
    struct CGVector translation;
};

struct CGPath;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CNewScale2 {
    struct CNewScale2Impl *m_scale;
};

struct CNewScale2Impl;

struct CPPHandle {
    struct CPPObject *_field1;
};

struct CPPHandleStatement {
    struct CPPObject *_field1;
};

struct CPPObject;

struct CXmlReader {
    int _field1;
    struct XmlReaderNode_t *_field2;
    char *_field3;
    _Bool _field4;
    _Bool _field5;
};

struct CallStackPool {
    id _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
};

struct CdnCallback;

struct CenterDetector;

struct CgiProfile {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct ChannelsRelation {
    int _field1;
    int _field2;
    int _field3;
    _Bool _field4;
};

struct ChatLogDataItem {
    int _field1;
    unsigned long long _field2;
    id _field3;
    unsigned int _field4;
    id _field5;
    id _field6;
    unsigned int _field7;
};

struct ChatLogSessionItem;

struct CheckHitFileInfo;

struct ClarityFilter;

struct Client {
    CDUnknownFunctionPointerType *_field1;
};

struct ClientReport_t {
    char _field1[1024];
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    char _field12[1024];
    unsigned int _field13;
    unsigned int _field14;
    char _field15[10];
    unsigned int _field16;
    int _field17;
    char _field18[256];
    char _field19[256];
    unsigned int _field20;
    unsigned int _field21;
    int _field22;
    unsigned int _field23;
};

struct CodedInputData {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
};

struct CodedOutputData {
    char *_field1;
    unsigned long long _field2;
    int _field3;
};

struct Column {
    CDUnknownFunctionPointerType *_field1;
    struct Schema _field2;
    struct StringView _field3;
    _Bool _field4;
    struct StringView _field5;
    struct function<const WCDB::BaseBinding *()> _field6;
    struct BaseBinding *_field7;
};

struct CommonReport_t {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ConfigMode {
    basic_string_0ec669f3 detect_model_param_;
    basic_string_0ec669f3 detect_model_bin_;
};

struct ConnId {
    unsigned short _field1;
};

struct ConnStatInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct ConnectionCollection;

struct ContactInitSeqs {
    unsigned int currentWxcontactSeq;
    unsigned int currentChatRoomContactSeq;
};

struct ContextBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct CppUtil;

struct CronetDownloadCallback;

struct CronetRequestCallback;

struct CronetTaskCallback;

struct CronetTaskParams {
    basic_string_0ec669f3 url_;
    basic_string_0ec669f3 task_id_;
    basic_string_0ec669f3 header_;
    basic_string_0ec669f3 body_data_;
    char *body_data_bytes_;
    unsigned long long body_length_;
    basic_string_0ec669f3 method_;
    basic_string_0ec669f3 save_path_;
    int task_type_;
    int max_redirect_count_;
    _Bool follow_redirect_;
    _Bool need_write_local_;
    _Bool use_http2_;
    _Bool use_quic_;
    _Bool enable_brotli_;
    _Bool direct_proxy;
    _Bool use_memory_cache_;
    _Bool ignore_ssl_error_;
    _Bool cache_request_performance_;
    int response_type_;
    int min_tls_version_;
    basic_string_0ec669f3 ios_tmp_path_;
    struct vector<CronetTaskProfile::HostIpMap, std::allocator<CronetTaskProfile::HostIpMap>> host_map_;
    int dns_type_;
    _Bool dns_fail_for_debug;
    _Bool need_report_;
    _Bool forbid_socket_reuse_;
    _Bool handle_data_self_;
    _Bool from_miniprograms_;
    _Bool force_bind_mobile_;
    _Bool weak_wifi_prefer_mobile_;
    _Bool bind_mobile_internal_task_;
    basic_string_0ec669f3 network_label_;
    struct vector<CronetTaskProfile::HeaderMap, std::allocator<CronetTaskProfile::HeaderMap>> headers_;
    struct weak_ptr<CronetTaskCallback> callback_instance_;
    struct QuicTaskProfile quic_params_;
    struct WxDownloadFileRequestParams download_file_params_;
    struct DefaultHttpParams default_params_;
    struct UploadParams upload_params_;
};

struct CronetUploadCallback;

struct CustomDecodeCallback;

struct CvSVM;

struct DataBasicDescription {
    CDUnknownFunctionPointerType *_vptr$DataBasicDescription;
    int sample_rate;
    int channels;
    int bits;
};

struct DebugThreadChecker;

struct DecodeAbility {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct DecodedDataS {
    char *_field1;
    char *_field2;
    char *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct DecoderProperty {
    int _field1;
    int _field2;
};

struct DecodingInfo {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14[5];
    float _field15;
    float _field16;
};

struct DefaultHttpParams {
    int report_id_;
};

struct DelegateFlag {
    unsigned int supportSelected:1;
};

struct DenosingFragment;

struct Detail;

struct DeviceErrorApple {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    int _field3;
    basic_string_0ec669f3 _field4;
    basic_string_0ec669f3 _field5;
};

struct DeviceManager;

struct DialReport_t {
    unsigned long long llUin;
    unsigned long long llRoomKey;
    unsigned long long iRoomId;
    unsigned int iRoomMemberId;
    unsigned int iStopStatus;
    int iReqRet;
    int iReserve;
    int iUsedTime;
    unsigned char isCanConnect;
    unsigned char isGotPeerId;
    unsigned char isGotStrategy;
    unsigned char isConnected;
    unsigned char isCanTalk;
    unsigned char isGotCapInfo;
    unsigned char isTalked;
    unsigned int iDoubleLinkSwitchReqCnt;
    unsigned int iDoubleLinkSwitchSucToDirectCnt;
    unsigned int iDoubleLinkSwitchSucToRelayCnt;
    unsigned int iEncryptStrategy;
    unsigned int iQosStrategy;
    unsigned int iQualityRedirectReqCnt;
    unsigned int iQualityDoRedirectCnt;
    unsigned int iTcpSwitchThreshold;
    unsigned int iCloudAppId;
    unsigned int iCloudHwpId;
};

struct DownloadInfo {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct EffectManager;

struct EncDecPrams {
    double duration;
    double startTime;
    double rate;
    double originalFrameRate;
    int frameDropInterval;
    int rotate;
    int outVideoBitrate;
    int decodeWidth;
    int decodeHeight;
    int cropLeft;
    int cropTop;
    int cropWidth;
    int cropHeight;
    double nowPts;
    double frameTimeInterval;
    _Bool skipAudioEncoding;
    struct AVRational audioTb;
    struct AVRational videoTb;
    double beginPtsVideo;
    double endPtsVideo;
    double beginPtsAudio;
    double endPtsAudio;
    _Bool useTimeCrop;
    _Bool useResCrop;
};

struct EncodeAbility {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct EncodeParamsTypeHeader {
    unsigned short is_annexb;
    unsigned short rc_method;
    unsigned int width;
    unsigned int height;
    unsigned int framerate;
    unsigned int bitrate;
    unsigned int gop;
};

struct Entry;

struct Event4XReporter;

struct ExpandUIConfig;

struct FTS5AuxiliaryFunctionModule {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct FaceConfig {
    char *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct FantasyPoint;

struct FastFocusEngie {
    struct Config {
        int width;
        int height;
        int scene;
        int inner_img_size;
        int select_window_len;
        float mv_threshold;
        _Bool disable_mv_detect;
        int skip_first_n_frame;
        int output_format;
        float variance_threshold_min;
        _Bool fast_mode;
        _Bool use_ai_detect;
        char *para_path;
        char *model_path;
        _Bool enable_ai_detect;
        int emb_track_skip_count;
        _Bool with_cat_info;
        int input_size;
        int num_classes;
        int reg_max;
        float score_thres;
        float score_barcode;
        char *bin_md5;
        char *param_md5;
        int version;
        float noise_max_area_thres;
        float noise_min_score_thres;
        float min_area_thres;
        float min_area_score_thres;
        struct vector<FFE::HeadInfo, std::allocator<FFE::HeadInfo>> {
            struct HeadInfo *__begin_;
            struct HeadInfo *__end_;
            struct __compressed_pair<FFE::HeadInfo *, std::allocator<FFE::HeadInfo>> {
                struct HeadInfo *__value_;
            } __end_cap_;
        } heads_info;
        int max_age;
        int n_hit;
        int n_history;
        float cos_simility_thres;
        float hit_max_score;
        float normalized_threshold;
        int visible_object_size;
        int wait_max_frame;
        float wait_score_thres;
        char *scancls_para_path;
        char *scancls_model_path;
        float scancls_thres;
        int scancls_input_size;
        int scancls_num_classes;
    } config_;
    struct shared_ptr<FFE::Queue<float>> queue_;
    struct QueueNode cur_best_node_;
    struct shared_ptr<FFE::MotionEstimator> motion_estimator_;
    int frame_cnt_;
    int no_boxes_cnt;
    float variance_threshold_;
    float variance_;
    float mv_x_;
    float mv_y_;
    struct shared_ptr<CvSVM> svm_bankcard_;
    float confidence_threshold_;
    struct Rect_<int> roi_rect_;
    struct shared_ptr<FFE::FantasyPoint> fantasy_point_;
    long long last_fantasy_point_time_;
    struct shared_ptr<FFE::FrameJumper> frame_jumper_;
    struct shared_ptr<FFE::CenterDetector> center_detector_;
    struct shared_ptr<FFE::NanoDet> nano_detector_;
    struct shared_ptr<FFE::ScanClassification> scancls_;
    struct shared_ptr<FFE::FrameSender> frame_sender_;
    int cur_net_speed_;
    struct ImgShape best_img_shape_;
    int best_img_id_;
    struct shared_ptr<FFE::ReIDManager> emb_tracker_;
    int frame_id;
    struct shared_ptr<wechat::RerankStrategy> rerank_strategy_;
    struct mutex track_mutex;
    struct Log log_;
};

struct FileID;

struct FileUpdateReq {
    basic_string_0ec669f3 _field1;
    int _field2;
    basic_string_0ec669f3 _field3;
};

struct Filter {
    CDUnknownFunctionPointerType *_field1;
    struct Shadow<WCDB::Syntax::Expression> _field2;
};

struct FinderQoEReporter {
    int playerStatus;
    int bandwidthStatus;
    int preloadStatus;
    int averageSpeed;
    int currentMaxBitrate;
    float bufferCounting;
    float moovTime;
    float firstFrameTime;
    _Bool setMaxBitrateIsConfidence;
    int mQoEChangeStatusLimit;
    int preloadDurationQoE;
    int videoStreamLimitBufferCount;
    int adajustUpNum;
    int adajustDownNum;
};

struct FlutterPlatformViewsController;

struct FrameInfo {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct FrameJumper;

struct FrameSender;

struct FrameSpec {
    CDUnknownFunctionPointerType *_field1;
    CDUnion_7c34b7b7 _field2;
    char _field3;
    char _field4;
    char _field5;
    _Bool _field6;
    struct Shadow<WCDB::Syntax::Expression> _field7;
    struct Shadow<WCDB::Syntax::Expression> _field8;
};

struct FullTokenizer;

struct GOGImageFeatureItem {
    id _field1;
    id _field2;
    id _field3;
};

struct GOGVideoFeatureItem {
    id _field1;
    unsigned int _field2;
    id _field3;
    unsigned int _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 _field1;
    struct GPUVector3 _field2;
    struct GPUVector3 _field3;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
    _Bool useDepth;
};

struct GPUVector2 {
    float _field1;
    float _field2;
};

struct GPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct GPUWorkflowShader {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct GameEngineApp {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct mutex _field3;
    struct OpaqueJSContext *_field4;
    void *_field5;
    id _field6;
    _Bool _field7;
};

struct Get3rdDnsCallback;

struct GfxHandler {
    CDUnknownFunctionPointerType *_vptr$IGfxHandler;
    id delegate;
    unsigned int current_buffer_id_;
    struct unordered_map<int, _NativeBuffer, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, _NativeBuffer>>> native_buffers_;
};

struct GrDirectContext;

struct Gradient {
    int _field1;
    char *_field2;
    struct RGBColor *_field3;
};

struct GradientStep {
    double stepValue[2];
};

struct Group {
    long long _field1;
    id _field2;
};

struct HTMLCanvasViewNG;

struct HandConfig {
    char *_field1;
    char *_field2;
};

struct Handle<std::shared_ptr<kinda::CppUtil>> {
    struct shared_ptr<kinda::CppUtil> m_obj;
};

struct Handle<std::shared_ptr<kinda::IAppKinda>> {
    struct shared_ptr<kinda::IAppKinda> m_obj;
};

struct Handle<std::shared_ptr<kinda::IAsyncTask>> {
    struct shared_ptr<kinda::IAsyncTask> m_obj;
};

struct Handle<std::shared_ptr<kinda::ITransmitKvData>> {
    struct shared_ptr<kinda::ITransmitKvData> m_obj;
};

struct Handle<std::shared_ptr<kinda::IUIModal>> {
    struct shared_ptr<kinda::IUIModal> m_obj;
};

struct Handle<std::shared_ptr<kinda::IUIPage>> {
    struct shared_ptr<kinda::IUIPage> m_obj;
};

struct Handle<std::shared_ptr<kinda::KBankCardTypePickerViewOnSelectCallback>> {
    struct shared_ptr<kinda::KBankCardTypePickerViewOnSelectCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KBankEditViewOnSeletBankCallback>> {
    struct shared_ptr<kinda::KBankEditViewOnSeletBankCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KCardNumberEditViewOnTextChangedCallback>> {
    struct shared_ptr<kinda::KCardNumberEditViewOnTextChangedCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KCardNumberEditViewOnTextEndEditingCallback>> {
    struct shared_ptr<kinda::KCardNumberEditViewOnTextEndEditingCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KCardTypePickerViewOnSelectCallback>> {
    struct shared_ptr<kinda::KCardTypePickerViewOnSelectCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KCgi>> {
    struct shared_ptr<kinda::KCgi> m_obj;
};

struct Handle<std::shared_ptr<kinda::KCountPickerViewOnSelectCallback>> {
    struct shared_ptr<kinda::KCountPickerViewOnSelectCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KCountryCallingCodeViewOnSelectCallback>> {
    struct shared_ptr<kinda::KCountryCallingCodeViewOnSelectCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KDatePickerViewOnSelectCallback>> {
    struct shared_ptr<kinda::KDatePickerViewOnSelectCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KEditTextOnEditorActionCallback>> {
    struct shared_ptr<kinda::KEditTextOnEditorActionCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KEditTextOnFocusChangeCallback>> {
    struct shared_ptr<kinda::KEditTextOnFocusChangeCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KEditTextOnTextBeginChangeCallback>> {
    struct shared_ptr<kinda::KEditTextOnTextBeginChangeCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KEditTextOnTextChangedCallback>> {
    struct shared_ptr<kinda::KEditTextOnTextChangedCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KEditTextOnTextEndEditingCallback>> {
    struct shared_ptr<kinda::KEditTextOnTextEndEditingCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KHorizontalScrollViewOnScrollCallback>> {
    struct shared_ptr<kinda::KHorizontalScrollViewOnScrollCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KListViewCallback>> {
    struct shared_ptr<kinda::KListViewCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KListViewOnScrollCallback>> {
    struct shared_ptr<kinda::KListViewOnScrollCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KNetworkMockManager>> {
    struct shared_ptr<kinda::KNetworkMockManager> m_obj;
};

struct Handle<std::shared_ptr<kinda::KPatternLockViewEndWithPatternCallback>> {
    struct shared_ptr<kinda::KPatternLockViewEndWithPatternCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KPatternLockViewOnInputInvalidPatternCallback>> {
    struct shared_ptr<kinda::KPatternLockViewOnInputInvalidPatternCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KProfessionEditViewOnSelectProfessionCallback>> {
    struct shared_ptr<kinda::KProfessionEditViewOnSelectProfessionCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KPwdInputViewOnEndEnterPasswordCallback>> {
    struct shared_ptr<kinda::KPwdInputViewOnEndEnterPasswordCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KPwdInputViewOnPasswordChangeCallback>> {
    struct shared_ptr<kinda::KPwdInputViewOnPasswordChangeCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KRegionEditViewOnRegionSelectedCallback>> {
    struct shared_ptr<kinda::KRegionEditViewOnRegionSelectedCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KScrollViewOnScrollCallback>> {
    struct shared_ptr<kinda::KScrollViewOnScrollCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KSecureEditTextOnTextChangedCallback>> {
    struct shared_ptr<kinda::KSecureEditTextOnTextChangedCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KSwitchViewOnChangeSwitchCallback>> {
    struct shared_ptr<kinda::KSwitchViewOnChangeSwitchCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KTableViewCellEditAction>> {
    struct shared_ptr<kinda::KTableViewCellEditAction> m_obj;
};

struct Handle<std::shared_ptr<kinda::KTableViewCellManager>> {
    struct shared_ptr<kinda::KTableViewCellManager> m_obj;
};

struct Handle<std::shared_ptr<kinda::KValidDatePickerViewOnSelectCallback>> {
    struct shared_ptr<kinda::KValidDatePickerViewOnSelectCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KViewOnClickCallback>> {
    struct shared_ptr<kinda::KViewOnClickCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KViewOnLongClickCallback>> {
    struct shared_ptr<kinda::KViewOnLongClickCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::KViewOnTouchCallback>> {
    struct shared_ptr<kinda::KViewOnTouchCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::TenpayCgiCallback>> {
    struct shared_ptr<kinda::TenpayCgiCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::UseCase>> {
    struct shared_ptr<kinda::UseCase> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidBinaryI32Callback>> {
    struct shared_ptr<kinda::VoidBinaryI32Callback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidBoolCallback>> {
    struct shared_ptr<kinda::VoidBoolCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidBoolI32Callback>> {
    struct shared_ptr<kinda::VoidBoolI32Callback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidBoolOptionCallback>> {
    struct shared_ptr<kinda::VoidBoolOptionCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidBoolStringCallback>> {
    struct shared_ptr<kinda::VoidBoolStringCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidBoolStringI32StringCallback>> {
    struct shared_ptr<kinda::VoidBoolStringI32StringCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidCallback>> {
    struct shared_ptr<kinda::VoidCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidF32F32BoolCallback>> {
    struct shared_ptr<kinda::VoidF32F32BoolCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidI64Callback>> {
    struct shared_ptr<kinda::VoidI64Callback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidITransmitKvDataCallback>> {
    struct shared_ptr<kinda::VoidITransmitKvDataCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidITransmitKvDataNoticeItemCallback>> {
    struct shared_ptr<kinda::VoidITransmitKvDataNoticeItemCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidKRectCallback>> {
    struct shared_ptr<kinda::VoidKRectCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidListCallback>> {
    struct shared_ptr<kinda::VoidListCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidStringBinaryCallback>> {
    struct shared_ptr<kinda::VoidStringBinaryCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidStringBoolCallback>> {
    struct shared_ptr<kinda::VoidStringBoolCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidStringCallback>> {
    struct shared_ptr<kinda::VoidStringCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidStringStringBinaryCallback>> {
    struct shared_ptr<kinda::VoidStringStringBinaryCallback> m_obj;
};

struct Handle<std::shared_ptr<kinda::VoidStringStringCallback>> {
    struct shared_ptr<kinda::VoidStringStringCallback> m_obj;
};

struct Hardware {
    int _field1;
};

struct HardwareBuffer;

struct HardwareCallbackImpl;

struct HardwareManager;

struct HardwareManagerEventCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct HashTable {
    unsigned int *_field1;
};

struct HeadImgUseSceneConfig {
    unsigned char _field1;
    Class _field2;
    id _field3;
    _Bool _field4;
    struct CGSize _field5;
    unsigned int _field6;
    unsigned char _field7;
};

struct HeaderMap;

struct HeatmapCell;

struct HeatmapData {
    struct HeatmapCell **_field1;
    unsigned long long _field2;
    int *_field3;
    unsigned long long _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    float _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    int _field14;
    float _field15;
    float _field16;
    float _field17;
    _Bool _field18;
    _Bool _field19;
    int _field20;
    struct Gradient *_field21;
};

struct HostIPHint {
    struct vector<mars::cdn::HostIpMap, std::allocator<mars::cdn::HostIpMap>> host_map;
};

struct HostIpMap;

struct IAggregatable;

struct IAppKinda;

struct IAsyncTask;

struct IBindingApp {
    CDUnknownFunctionPointerType *_field1;
};

struct IGfxHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct ILinkPusherAudioDataCallback;

struct ILiveConEngine {
    struct LiveConEngine *_field1;
};

struct IMBNativeInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct IMVQQEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct IMediaSdkWrapper {
    CDUnknownFunctionPointerType *_field1;
};

struct IMultiTalkMgr {
    struct MultiTalkMgrImpl *_field1;
};

struct INetCmdSendOnly {
    CDUnknownFunctionPointerType *_field1;
};

struct IOSCanvasViewDelegateGL;

struct IPAddress {
    struct IPAddressBytes _field1;
};

struct IPAddressBytes {
    struct array<unsigned char, 16UL> _field1;
    unsigned char _field2;
};

struct IPCTunnelPacket<liteav::replayKit::AudioTypeHeader> {
    struct IPCTunnelPacketHeader _field1;
    struct shared_ptr<liteav::replayKit::AudioTypeHeader> _field2;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field3;
};

struct IPCTunnelPacketHeader {
    unsigned int _field1;
    unsigned int _field2;
};

struct IPEndPoint {
    struct IPAddress _field1;
    unsigned short _field2;
};

struct ISpeedTestChannel {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPAudioRouteManagerCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPPlayer {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPPlayerConnectionMgr {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPPlayerRichMediaAsyncRequester;

struct ITPPlayerRichMediaProcessor;

struct ITPRendererInterruptCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPSubtitleParser {
    CDUnknownFunctionPointerType *_field1;
};

struct ITPTemporyImageConverter;

struct ITXLiteAVVideoDecoder {
    CDUnknownFunctionPointerType *_field1;
};

struct ITransmitKvData;

struct ITransportChannel {
    CDUnknownFunctionPointerType *_field1;
};

struct IUIModal;

struct IUIPage;

struct IWXConfAudioCallback;

struct IWXConfCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct IWXConfService {
    CDUnknownFunctionPointerType *_field1;
};

struct IWasmAdaptor;

struct IWasmContext;

struct IWasmGlueAdaptor {
    CDUnknownFunctionPointerType *_field1;
};

struct IWasmLinker {
    CDUnknownFunctionPointerType *_field1;
};

struct Identifier;

struct IlinkLogCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct IlinkSDKCloudSessionCallback;

struct ImageCropFilter;

struct ImageDecodeCache;

struct ImagePlane {
    int _field1;
    int _field2;
    int _field3;
    void *_field4;
    void *_field5[4];
    long long _field6[4];
};

struct ImageView;

struct ImgShape {
    int width;
    int height;
};

struct Imp;

struct Impl;

struct InferenceSession;

struct InnerDatabase;

struct InnerHandle;

struct InputAnimation {
    unsigned long long _field1;
    unsigned long long _field2;
    struct function<float (float)> _field3;
};

struct IsolateConfiguration;

struct JSCRemoteConnectionToTarget {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct KBankCardTypePickerViewOnSelectCallback;

struct KBankEditViewOnSeletBankCallback;

struct KCardNumberEditViewOnTextChangedCallback;

struct KCardNumberEditViewOnTextEndEditingCallback;

struct KCardTypePickerViewOnSelectCallback;

struct KCgi;

struct KCountPickerViewOnSelectCallback;

struct KCountryCallingCodeViewOnSelectCallback;

struct KDatePickerViewOnSelectCallback;

struct KEditTextOnEditorActionCallback;

struct KEditTextOnFocusChangeCallback;

struct KEditTextOnTextBeginChangeCallback;

struct KEditTextOnTextChangedCallback;

struct KEditTextOnTextEndEditingCallback;

struct KHorizontalScrollViewOnScrollCallback;

struct KListViewCallback;

struct KListViewOnScrollCallback;

struct KNetworkMockManager;

struct KPatternLockViewEndWithPatternCallback;

struct KPatternLockViewOnInputInvalidPatternCallback;

struct KProfessionEditViewOnSelectProfessionCallback;

struct KPwdInputViewOnEndEnterPasswordCallback;

struct KPwdInputViewOnPasswordChangeCallback;

struct KRegionEditViewOnRegionSelectedCallback;

struct KSJSONDecodeCallbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
};

struct KSStackCursor {
    struct {
        unsigned long long _field1;
        char *_field2;
        unsigned long long _field3;
        char *_field4;
        unsigned long long _field5;
    } _field1;
    struct {
        int _field1;
        _Bool _field2;
    } _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6[100];
};

struct KScrollViewOnScrollCallback;

struct KSecureEditTextOnTextChangedCallback;

struct KSwitchViewOnChangeSwitchCallback;

struct KTableViewCellEditAction;

struct KTableViewCellManager;

struct KValidDatePickerViewOnSelectCallback;

struct KViewOnClickCallback;

struct KViewOnLongClickCallback;

struct KViewOnTouchCallback;

struct KeyValueHolder {
    unsigned short _field1;
    unsigned short _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct LSMFileItem {
    unsigned int _field1;
    unsigned char _field2[32];
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned char _field6[0];
};

struct Layer;

struct LayerCompositer;

struct LayoutInfo {
    int _field1;
    int _field2;
    float _field3;
    float _field4;
    int _field5;
};

struct LinkNode<lite_base::internal::WeakLinkNode<lite_base::ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter>>> {
    struct LinkNode<lite_base::internal::WeakLinkNode<lite_base::ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter>>> *_field1;
    struct LinkNode<lite_base::internal::WeakLinkNode<lite_base::ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter>>> *_field2;
};

struct LinkReportData {
    _Bool clicked;
    _Bool expousred;
};

struct LinkedList<lite_base::internal::WeakLinkNode<lite_base::ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter>>> {
    struct LinkNode<lite_base::internal::WeakLinkNode<lite_base::ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter>>> _field1;
};

struct LiteralValue {
    CDUnknownFunctionPointerType *_field1;
    CDUnion_7c34b7b7 _field2;
    struct StringView _field3;
    union {
        double _field1;
        long long _field2;
        unsigned long long _field3;
        _Bool _field4;
    } _field4;
};

struct LiveConEngine;

struct LiveMixStream {
    basic_string_0ec669f3 _field1;
    basic_string_0ec669f3 _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned int _field9;
    basic_string_0ec669f3 _field10;
};

struct LiveSpeedTestResult {
    _Bool ping_rtt_successful;
    _Bool upload_successful;
    _Bool download_successful;
    _Bool only_upload_done;
    float avg_ping_rtt_;
    float ping_jitter_;
    int avg_down_speed_;
    int max_down_speed_;
    int min_down_speed_;
    int avg_up_speed_;
    int max_up_speed_;
    int min_up_speed_;
    int task_id_;
};

struct LiveTranscodingConfig {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    basic_string_0ec669f3 _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    basic_string_0ec669f3 _field15;
    basic_string_0ec669f3 _field16;
    basic_string_0ec669f3 _field17;
    struct vector<liteav::live::LiveMixStream, std::allocator<liteav::live::LiveMixStream>> _field18;
};

struct Lock {
    struct LockImpl lock_;
};

struct LockImpl {
    struct _opaque_pthread_mutex_t native_handle_;
};

struct LockStepCallback {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
};

struct LockStepScriptState {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct OpaqueJSContext *_field3;
    long long _field4;
};

struct Log {
    vector_8ca568ff mv_x_list;
    vector_8ca568ff mv_y_list;
    vector_8ca568ff variance_list;
    vector_8ca568ff variance_thres_list;
    vector_8ca568ff scancls_noise_list;
    vector_8ca568ff scancls_object_list;
    vector_8ca568ff scancls_landmark_list;
    float t_det_avg;
    float t_det_max;
    struct vector<FFE::BoxInfo, std::allocator<FFE::BoxInfo>> top1_box_list;
    int num_Tentative;
    int num_MaxScore2Confirmed;
    int num_Tentative2Confirmed;
    int num_Tentative2Deleted;
    int num_Confirmed2Miss;
    int num_Miss2Deleted;
    int num_Miss2Confirmed;
    int num_Doudi;
};

struct MBCronetDownloadCallback;

struct MBTcpScriptState {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct OpaqueJSContext *_field3;
    long long _field4;
};

struct MBUdpScriptState {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct OpaqueJSContext *_field3;
    long long _field4;
};

struct MD5_CTX;

struct MMBizMatchInfo {
    long long _field1;
    long long _field2;
    int _field3;
    int _field4;
};

struct MMDates {
    long long year;
    long long month;
    long long day;
};

struct MMDiskUsageBizRule {
    long long _field1;
    long long _field2;
    id _field3;
    long long _field4;
    int _field5;
    int _field6;
    int _field7;
};

struct MMEdgeTipsViewConfig {
    id _field1;
    id _field2;
    id _field3;
    int _field4;
};

struct MMIlinkLiteAppAuthCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MMIlinkLiteAppNetworkCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MMKVMetaInfo {
    unsigned int m_crcDigest;
    unsigned int m_version;
    unsigned int m_sequence;
    unsigned char m_vector[16];
    unsigned long long m_actualSize;
    struct {
        unsigned long long lastActualSize;
        unsigned int lastCRCDigest;
        unsigned int __reserved[16];
    } m_lastConfirmedMetaInfo;
    unsigned long long m_flags;
};

struct MMMetricsUploadFileObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct MMSMUploadFileObserver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MMSafeModeInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    long long _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    char *_field13;
};

struct MMTextLayoutParam {
    struct CGSize size;
    unsigned long long lineBreakStrategy;
    long long lineBreak;
};

struct MSize {
    int *p;
};

struct MStep {
    unsigned long long *p;
    unsigned long long buf[2];
};

struct MapBitmapTileID {
    int _field1;
    int _field2;
    int _field3;
    char _field4[256];
};

struct MapCircleInfo {
    union MapVector2d _field1;
    float _field2;
    union MapVector4ub _field3;
    union MapVector4ub _field4;
    float _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
};

struct MapEdgeInsets {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct MapHoleInfo;

struct MapLocation {
    double _field1;
    double _field2;
};

struct MapMarkerIconInfo {
    int _field1;
    char _field2[512];
    union MapVector2d _field3;
    union MapVector2f _field4;
    float _field5;
    float _field6;
    union MapVector2f _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
};

struct MapPatternStyle;

struct MapPrimitive {
    int _field1;
    union MapVector4ub _field2;
    float _field3;
    int _field4;
    union MapVector2d _field5;
    union MapVector2d *_field6;
    union MapVector4ub _field7;
    struct MapHoleInfo *_field8;
    int _field9;
    int _field10;
    int _field11;
    int *_field12;
    struct MapPatternStyle *_field13;
    int _field14;
};

struct MapRectD {
    union MapVector2d _field1;
    union MapVector2d _field2;
};

struct MapRectF {
    union MapVector2f _field1;
    union MapVector2f _field2;
};

struct MapTileID {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
};

struct Mapping;

struct Marker4KInfo {
    struct _TMRect _field1;
    void *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    char *_field7;
    int _field8;
    int _field9;
    int _field10;
};

struct Mat {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    int *refcount;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct MSize size;
    struct MStep step;
};

struct MatAllocator;

struct Material;

struct MaterialLoader;

struct Matrix4x4<float> {
    float m[16];
};

struct Md5Hash {
    unsigned char _field1[16];
    struct MD5_CTX *_field2;
};

struct MediaChecker;

struct Memory {
    char *_field1;
    unsigned int _field2;
};

struct MixedTranscodingConfig {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    basic_string_0ec669f3 _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    basic_string_0ec669f3 _field15;
    basic_string_0ec669f3 _field16;
    basic_string_0ec669f3 _field17;
    struct vector<trtc::MixedUserConfig, std::allocator<trtc::MixedUserConfig>> _field18;
};

struct MixedUserConfig {
    basic_string_0ec669f3 _field1;
    basic_string_0ec669f3 _field2;
    int _field3;
    unsigned int _field4;
    _Bool _field5;
    int _field6;
    int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    basic_string_0ec669f3 _field12;
    unsigned int _field13;
    basic_string_0ec669f3 _field14;
};

struct ModelDesc {
    struct map<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc, std::less<std::string>, std::allocator<std::pair<const std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>>> inputDescs;
    struct map<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc, std::less<std::string>, std::allocator<std::pair<const std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>>> outputDescs;
};

struct Monitor {
    struct Tracker _field1;
    struct CallStackPool _field2;
    struct _opaque_pthread_t *_field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    struct timeval _field6;
    struct OpaqueJSContextGroup *_field7;
    unsigned int _field8;
    float _field9;
    float _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    unsigned char _field15;
};

struct MotionEstimator;

struct MouseState {
    struct CGPoint location;
    struct CGPoint last_translation;
};

struct MsgPlayingReportInfo {
    int _field1;
    int _field2;
    int _field3;
};

struct MsgStartPlayArgs {
    _Bool _field1;
    _Bool _field2;
};

struct MsgStopPlayArgs {
    id _field1;
    id _field2;
};

struct MultiTalkMgrImpl;

struct MyCallback;

struct MyImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    struct MyRect _field6;
    int _field7;
    char *_field8;
    _Bool _field9;
};

struct MyRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct NSDictionary {
    Class _field1;
};

struct NanoDet;

struct NetworkManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct NewAVExtReport_t {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct NewDirectReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned long long _field55;
    unsigned long long _field56;
    unsigned int _field57;
    int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    char _field63[46];
    char _field64[46];
    char _field65[46];
    unsigned short _field66;
    unsigned short _field67;
    unsigned short _field68;
    unsigned int _field69;
    unsigned int _field70;
};

struct NewRelayReport {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned int _field55;
    int _field56;
    int _field57;
    int _field58;
    int _field59;
    int _field60;
    char _field61[46];
    char _field62[46];
    char _field63[46];
    unsigned int _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
};

struct NormalBufferWrap {
    unsigned long long _field1;
    void *_field2;
};

struct NtpService {
    CDUnknownFunctionPointerType *_field1;
};

struct OCRConfig {
    char *_field1;
    char *_field2;
    char *_field3;
};

struct OSDConfig {
    char *_field1;
    char *_field2;
    char *_field3;
};

struct ObjectRef<xeffect::Material> {
    struct Material *mpObject;
};

struct ObjectRef<xeffect::MaterialLoader> {
    struct MaterialLoader *mpObject;
};

struct ObjectRef<xeffect::RGDummyResource> {
    struct RGDummyResource *_field1;
};

struct ObjectRef<xeffect::RGTexture> {
    struct RGTexture *_field1;
};

struct ObjectRef<xnet::rci::RciBufferBlock> {
    struct RciBufferBlock *mpObject;
};

struct ObjectRef<xnet::rci::RciFenceRing> {
    struct RciFenceRing *mpObject;
};

struct ObjectRef<xnet::rci::RciRenderDevice> {
    struct RciRenderDevice *mpObject;
};

struct ObjectRef<xnet::rci::RciSwapChain> {
    struct RciSwapChain *mpObject;
};

struct ObjectRef<xnet::rci::RciTexture> {
    struct RciTexture *mpObject;
};

struct ObjectRef<xnet::rci::RciVertexInput> {
    struct RciVertexInput *mpObject;
};

struct ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter> {
    struct vector<lite_base::internal::UncheckedObserverAdapter, std::__1::allocator<lite_base::internal::UncheckedObserverAdapter>> _field1;
    struct LinkedList<lite_base::internal::WeakLinkNode<lite_base::ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter>>> _field2;
    int _field3;
};

struct OnceCallback<void (liteav::HttpClient::State, const liteav::HttpClient::Request &, std::unique_ptr<liteav::HttpClient::Response>)> {
    struct scoped_refptr<lite_base::internal::BindStateBase> _field1;
};

struct OnlineLogger;

struct OpaqueAudioComponentInstance;

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct OpaqueJSContext;

struct OpaqueJSContextGroup;

struct OpaqueJSValue;

struct Optional<WCDB::Syntax::FrameSpec> {
    _Bool _field1;
    union {
        char _field1;
        struct FrameSpec _field2;
    } _field2;
};

struct Optional<liteav::audio::AudioFrame> {
    struct OptionalStorage<liteav::audio::AudioFrame, false, false> _field1;
};

struct Optional<liteav::trtc::internal::TRTCVideoResolution> {
    struct OptionalStorage<liteav::trtc::internal::TRTCVideoResolution, true, true> _field1;
};

struct Optional<liteav::trtc::internal::TRTCVideoResolutionMode> {
    struct OptionalStorage<liteav::trtc::internal::TRTCVideoResolutionMode, true, true> _field1;
};

struct Optional<liteav::video::EncoderStrategy> {
    struct OptionalStorage<liteav::video::EncoderStrategy, true, true> _field1;
};

struct Optional<liteav::video::FillMode> {
    struct OptionalStorage<liteav::video::FillMode, true, true> _field1;
};

struct Optional<liteav::video::MirrorMode> {
    struct OptionalStorage<liteav::video::MirrorMode, true, true> _field1;
};

struct Optional<liteav::video::RcMethod> {
    struct OptionalStorage<liteav::video::RcMethod, true, true> _field1;
};

struct Optional<liteav::video::VideoRotation> {
    struct OptionalStorage<liteav::video::VideoRotation, true, true> _field1;
};

struct Optional<unsigned int> {
    struct OptionalStorage<unsigned int, true, true> _field1;
};

struct Optional<unsigned long> {
    _Bool _field1;
    union {
        char _field1;
        unsigned long long _field2;
    } _field2;
};

struct OptionalStorage<bool, true, true> {
    _Bool _field1;
    CDUnion_2739e4df _field2;
};

struct OptionalStorage<liteav::audio::AudioFrame, false, false> {
    _Bool _field1;
    union {
        char _field1;
        struct AudioFrame {
            struct CopyOnWriteBuffer {
                struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                    void *_field1;
                } _field1;
                unsigned long long _field2;
                unsigned long long _field3;
            } _field1;
            struct CopyOnWriteBuffer {
                struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                    void *_field1;
                } _field1;
                unsigned long long _field2;
                unsigned long long _field3;
            } _field2;
            struct AudioMetadata _field3;
            unsigned int _field4;
            short _field5;
            _Bool _field6;
        } _field2;
    } _field2;
};

struct OptionalStorage<liteav::trtc::internal::TRTCVideoResolution, true, true> {
    _Bool _field1;
    CDUnion_0506adf3 _field2;
};

struct OptionalStorage<liteav::trtc::internal::TRTCVideoResolutionMode, true, true> {
    _Bool _field1;
    CDUnion_0506adf3 _field2;
};

struct OptionalStorage<liteav::video::EncoderStrategy, true, true> {
    _Bool _field1;
    CDUnion_0506adf3 _field2;
};

struct OptionalStorage<liteav::video::FillMode, true, true> {
    _Bool _field1;
    CDUnion_0506adf3 _field2;
};

struct OptionalStorage<liteav::video::MirrorMode, true, true> {
    _Bool _field1;
    CDUnion_0506adf3 _field2;
};

struct OptionalStorage<liteav::video::RcMethod, true, true> {
    _Bool _field1;
    CDUnion_0506adf3 _field2;
};

struct OptionalStorage<liteav::video::VideoRotation, true, true> {
    _Bool _field1;
    CDUnion_0506adf3 _field2;
};

struct OptionalStorage<unsigned int, true, true> {
    _Bool _field1;
    union {
        char _field1;
        unsigned int _field2;
    } _field2;
};

struct Options {
    int numThreads;
    basic_string_0ec669f3 modelCachePath;
    struct map<std::string, std::vector<int>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<int>>>> typicalShape;
    _Bool allowQuantize;
    _Bool allowGPU;
    _Bool allowNPU;
    int precisionLevel;
};

struct PAGFilter;

struct PAGImage;

struct PAGLayer;

struct PAGSurface;

struct PBCGIHelperWrap {
    Class _field1;
    Class _field2;
    int _field3;
    unsigned int _field4;
    id _field5;
    id _field6;
};

struct POPAnimatorItem;

struct PSTNChannelAdapter {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct PSTNNetNotifier {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct PageConfig;

struct PageInfo {
    unsigned int success_;
    unsigned int app_uuid_;
    unsigned long long app_ptr_;
    unsigned long long page_id_;
    unsigned long long render_id_;
    basic_string_0ec669f3 base_path_;
    basic_string_0ec669f3 page_url_;
    int flags_;
    int page_orientation_;
};

struct PersonalParam {
    struct QBarImageInfo _field1;
    struct QBarImageInfo _field2;
    struct QBarImageInfo _field3;
    struct QBarImageInfo _field4;
    struct QBarImageInfo _field5;
    struct QBarImageInfo _field6;
    int _field7;
    struct QBarImageInfo _field8;
    _Bool _field9;
};

struct Phys3DScriptState {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct OpaqueJSContext *_field3;
};

struct PipelineInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct PixelBufferPoolDesc;

struct PlatformData {
    struct ViewportMetrics _field1;
    basic_string_0ec669f3 _field2;
    basic_string_0ec669f3 _field3;
    basic_string_0ec669f3 _field4;
    basic_string_0ec669f3 _field5;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> _field6;
    basic_string_0ec669f3 _field7;
    basic_string_0ec669f3 _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
};

struct PlatformMessageRouter;

struct PlatformParams {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
};

struct PlatformView;

struct Player {
    CDUnknownFunctionPointerType *_field1;
};

struct PlayerState {
    id _field1;
    unsigned int _field2;
    unsigned long long _field3;
    struct AudioStreamBasicDescription _field4;
    struct OpaqueAudioQueue *_field5;
    struct AudioQueueBuffer *_field6[3];
    unsigned int _field7;
    long long _field8;
    unsigned int _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    id _field15;
    unsigned int _field16;
    id _field17;
    struct AMRDecodeFloat *_field18;
    id _field19;
    id _field20;
    unsigned int _field21;
    struct AudioStreamPacketDescription *_field22;
    struct OpaqueAudioFileID *_field23;
    id _field24;
    struct AudioDecoder *_field25;
    unsigned int _field26;
    short *_field27;
    unsigned int _field28;
    unsigned int _field29;
    id _field30;
};

struct PointerData {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    long long _field12;
    long long _field13;
    long long _field14;
    double _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    double _field20;
    double _field21;
    double _field22;
    double _field23;
    double _field24;
    double _field25;
    double _field26;
    long long _field27;
    double _field28;
    double _field29;
};

struct PointerDataPacket;

struct ProfilerMetricsIOS;

struct PstnAndroidReport_t {
    int _field1;
    char _field2[256];
    char _field3[256];
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct PtsPostProc;

struct PushNetworkConfig {
    basic_string_0ec669f3 url;
    int channel_type;
    _Bool enable_pure_audio_mode;
    _Bool enable_realtime;
    _Bool enable_video_flow_control;
    int retry_limit;
    int retry_interval_ms;
    int qos_type;
};

struct Pusher {
    CDUnknownFunctionPointerType *_field1;
};

struct QBAR_AREA {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct QBAR_IMAGE {
    int _field1;
    int _field2;
    struct vector<unsigned char, std::allocator<unsigned char>> _field3;
};

struct QBAR_INFO;

struct QBAR_ML_MODE {
    basic_string_0ec669f3 _field1;
    basic_string_0ec669f3 _field2;
    basic_string_0ec669f3 _field3;
    basic_string_0ec669f3 _field4;
    basic_string_0ec669f3 _field5;
    basic_string_0ec669f3 _field6;
};

struct QBAR_MODE {
    int _field1;
    int _field2;
    basic_string_0ec669f3 _field3;
    basic_string_0ec669f3 _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    struct QBAR_OPT _field10;
    struct QBAR_ML_MODE _field11;
};

struct QBAR_OPT {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
};

struct QBAR_POINT;

struct QBAR_REPORT_MSG {
    int qrcodeVersion;
    int pyramidLv;
    basic_string_0ec669f3 binaryMethod;
    basic_string_0ec669f3 ecLevel;
    basic_string_0ec669f3 charsetMode;
    basic_string_0ec669f3 scale_list_;
    float decode_scale_;
    unsigned int detect_time_;
    unsigned int sr_time_;
    unsigned int decode_time_;
    _Bool in_white_list_;
    _Bool in_black_list_;
};

struct QBAR_RESULT {
    int _field1;
    basic_string_0ec669f3 _field2;
    basic_string_0ec669f3 _field3;
    basic_string_0ec669f3 _field4;
    vector_d4107ee0 _field5;
    struct QBAR_AREA _field6;
    struct QBAR_REPORT_MSG _field7;
    int _field8;
};

struct QBar {
    struct QBarDecode *_field1;
};

struct QBarDecode;

struct QBarImageInfo {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct QueueNode {
    struct Mat ori_image;
    float mean;
    float variance;
    float laplace_max;
};

struct QuicForceHost;

struct QuicHostMap;

struct QuicTaskParams {
    struct vector<mars::cdn::QuicHostMap, std::allocator<mars::cdn::QuicHostMap>> quic_host_map;
    struct vector<mars::cdn::QuicForceHost, std::allocator<mars::cdn::QuicForceHost>> force_quic_host;
    struct HostIPHint host_map_hint;
};

struct QuicTaskProfile {
    struct vector<CronetTaskProfile::QuicHostMap, std::allocator<CronetTaskProfile::QuicHostMap>> quic_map_host;
    struct vector<CronetTaskProfile::QuicForceHost, std::allocator<CronetTaskProfile::QuicForceHost>> quic_force_host;
};

struct RGBAColor {
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
};

struct RGDummyResource;

struct RGTexture;

struct RPSFramerateCallback;

struct RaiseFunction {
    CDUnknownFunctionPointerType *_field1;
    CDUnion_7c34b7b7 _field2;
    struct StringView _field3;
};

struct RawYuvData;

struct RciBufferBlock;

struct RciFenceRing;

struct RciRenderDevice;

struct RciSwapChain;

struct RciTexture;

struct RciVertexInput;

struct ReIDManager;

struct ReasonModel {
    id _field1;
    int _field2;
};

struct RecorderState {
    id _field1;
    struct AudioStreamBasicDescription _field2;
    struct OpaqueAudioQueue *_field3;
    struct AudioQueueBuffer *_field4[3];
    unsigned int _field5;
    long long _field6;
    long long _field7;
    struct OpaqueAudioFileID *_field8;
    _Bool _field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    id _field14;
    id _field15;
    id _field16;
    struct AMREncodeFloat *_field17;
    _Bool _field18;
    id _field19;
    id _field20;
    struct OpaqueAudioFileID *_field21;
    id _field22;
    unsigned int _field23;
    unsigned int _field24;
    id _field25;
    unsigned char _field26[1280];
    int _field27;
    _Bool _field28;
    struct AudioCoder *_field29;
    _Bool _field30;
    long long _field31;
};

struct Rect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Rect_<int> {
    int x;
    int y;
    int width;
    int height;
};

struct Recyclable<WCDB::InnerDatabase *> {
    CDUnknownFunctionPointerType *_vptr$Referenced;
    struct shared_ptr<std::atomic<int>> m_reference;
    struct InnerDatabase *m_value;
    struct function<void (WCDB::InnerDatabase *&)> m_onRecycled;
};

struct RecyclableHandle {
    CDUnknownFunctionPointerType *_vptr$Referenced;
    struct shared_ptr<std::atomic<int>> m_reference;
    struct shared_ptr<WCDB::InnerHandle> m_value;
    struct function<void (std::shared_ptr<WCDB::InnerHandle>&)> m_onRecycled;
    struct InnerHandle *m_handle;
};

struct RefPtr<fml::TaskRunner> {
    struct TaskRunner *_field1;
};

struct RefPtr<fml::internal::WeakPtrFlag> {
    struct WeakPtrFlag *ptr_;
};

struct RelayTcpReport {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    char _field40[46];
    char _field41[46];
    char _field42[46];
};

struct RemoteAudioSelectorParams {
    unsigned int _field1;
    vector_bfe5b09a _field2;
    _Bool _field3;
};

struct RenderElement;

struct RenderGraph;

struct RenderModel;

struct RenderOptions {
    struct CGSize size;
    double scale;
    double rotation;
    double opacity;
    struct optional<wesvg::RGBAColor> color;
};

struct RenderParams {
    struct Optional<liteav::video::FillMode> _field1;
    struct Optional<liteav::video::MirrorMode> _field2;
    struct Optional<liteav::video::VideoRotation> _field3;
    struct Optional<bool> {
        struct OptionalStorage<bool, true, true> _field1;
    } _field4;
};

struct RepeatingCallback<void (liteav::HttpClient::State, const liteav::HttpClient::Request &, std::unique_ptr<liteav::HttpClient::Response>)> {
    struct scoped_refptr<lite_base::internal::BindStateBase> _field1;
};

struct ReportStaticPrams {
    int errorCode;
    double decodeTime;
    double scaleTime;
    double encodeTime;
    double DSETime;
    double remuxTime;
    int videoFrames;
    int audioFrames;
    int newVideoFrames;
    _Bool skipAudioEncoding;
    int videoCodecID;
    int audioCodecID;
};

struct Request;

struct RerankStrategy {
    float _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
};

struct ResourceLoader;

struct Response {
    short _field1;
    basic_string_0ec669f3 _field2;
    struct vector<qmapkit::Mapsdk_trafficevent::Detail, std::allocator<qmapkit::Mapsdk_trafficevent::Detail>> _field3;
};

struct RoamBackupperBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct RoiConfigInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned char _field5;
};

struct RouteChangeDetails {
    unsigned long long _field1;
    id _field2;
};

struct RunConfiguration {
    struct unique_ptr<flutter::IsolateConfiguration, std::default_delete<flutter::IsolateConfiguration>> _field1;
    struct shared_ptr<flutter::AssetManager> _field2;
    basic_string_0ec669f3 _field3;
    basic_string_0ec669f3 _field4;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> _field5;
};

struct RuntimeDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct SCNVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SNSVideoProfile;

struct SRDelegateAvailableMethods {
    unsigned int didReceiveMessage:1;
    unsigned int didReceiveMessageWithString:1;
    unsigned int didReceiveMessageWithData:1;
    unsigned int didOpen:1;
    unsigned int didFailWithError:1;
    unsigned int didCloseWithCode:1;
    unsigned int didReceivePong:1;
    unsigned int shouldConvertTextFrameToString:1;
};

struct SS;

struct SSData;

struct STIDKeyInfo;

struct SamplingProfiler;

struct ScanClassification;

struct Schema {
    CDUnknownFunctionPointerType *_field1;
    struct StringView _field2;
};

struct ScopedBlock<NSString *(^)()> {
    CDUnknownBlockType block_;
};

struct ScopedBlock<bool (^)()> {
    CDUnknownBlockType block_;
};

struct ScopedBlock<double (^)()> {
    CDUnknownBlockType block_;
};

struct ScopedBlock<void (^)()> {
    CDUnknownBlockType block_;
};

struct Screenshot {
    struct sk_sp<SkData> _field1;
    struct SkISize _field2;
};

struct SectionInfo {
    long long _field1;
    long long _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
};

struct SelectSTMT;

struct SemanticsNode {
    int id;
    int flags;
    int actions;
    int maxValueLength;
    int currentValueLength;
    int textSelectionBase;
    int textSelectionExtent;
    int platformViewId;
    int scrollChildren;
    int scrollIndex;
    double scrollPosition;
    double scrollExtentMax;
    double scrollExtentMin;
    double elevation;
    double thickness;
    basic_string_0ec669f3 label;
    struct vector<std::shared_ptr<flutter::StringAttribute>, std::allocator<std::shared_ptr<flutter::StringAttribute>>> labelAttributes;
    basic_string_0ec669f3 hint;
    struct vector<std::shared_ptr<flutter::StringAttribute>, std::allocator<std::shared_ptr<flutter::StringAttribute>>> hintAttributes;
    basic_string_0ec669f3 value;
    struct vector<std::shared_ptr<flutter::StringAttribute>, std::allocator<std::shared_ptr<flutter::StringAttribute>>> valueAttributes;
    basic_string_0ec669f3 increasedValue;
    struct vector<std::shared_ptr<flutter::StringAttribute>, std::allocator<std::shared_ptr<flutter::StringAttribute>>> increasedValueAttributes;
    basic_string_0ec669f3 decreasedValue;
    struct vector<std::shared_ptr<flutter::StringAttribute>, std::allocator<std::shared_ptr<flutter::StringAttribute>>> decreasedValueAttributes;
    basic_string_0ec669f3 tooltip;
    int textDirection;
    struct SkRect rect;
    struct SkM44 transform;
    vector_cd3186ef childrenInTraversalOrder;
    vector_cd3186ef childrenInHitTestOrder;
    vector_cd3186ef customAccessibilityActions;
};

struct Settings {
    basic_string_0ec669f3 vm_snapshot_data_path;
    struct function<std::unique_ptr<fml::Mapping>()> vm_snapshot_data;
    basic_string_0ec669f3 vm_snapshot_instr_path;
    struct function<std::unique_ptr<fml::Mapping>()> vm_snapshot_instr;
    basic_string_0ec669f3 isolate_snapshot_data_path;
    struct function<std::unique_ptr<fml::Mapping>()> isolate_snapshot_data;
    basic_string_0ec669f3 isolate_snapshot_instr_path;
    struct function<std::unique_ptr<fml::Mapping>()> isolate_snapshot_instr;
    struct function<std::unique_ptr<fml::Mapping>()> dart_library_sources_kernel;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> application_library_path;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> vmservice_snapshot_library_path;
    basic_string_0ec669f3 application_kernel_asset;
    basic_string_0ec669f3 application_kernel_list_asset;
    struct function<std::vector<std::unique_ptr<const fml::Mapping>>()> application_kernels;
    basic_string_0ec669f3 temp_directory_path;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> dart_flags;
    _Bool enable_checked_mode;
    _Bool start_paused;
    _Bool trace_skia;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> trace_allowlist;
    struct optional<std::vector<std::basic_string<char>>> trace_skia_allowlist;
    _Bool trace_startup;
    _Bool trace_systrace;
    _Bool dump_skp_on_shader_compilation;
    _Bool cache_sksl;
    _Bool purge_persistent_cache;
    _Bool endless_trace_buffer;
    _Bool enable_dart_profiling;
    _Bool disable_dart_asserts;
    _Bool may_insecurely_connect_to_all_domains;
    basic_string_0ec669f3 domain_network_policy;
    basic_string_0ec669f3 advisory_script_uri;
    basic_string_0ec669f3 advisory_script_entrypoint;
    _Bool enable_observatory;
    _Bool enable_observatory_publication;
    basic_string_0ec669f3 observatory_host;
    unsigned int observatory_port;
    _Bool disable_service_auth_codes;
    _Bool enable_service_port_fallback;
    _Bool use_test_fonts;
    _Bool prefetched_default_font_manager;
    _Bool enable_skparagraph;
    _Bool enable_display_list;
    unsigned int font_initialization_data;
    _Bool leak_vm;
    struct function<void (long, std::function<void ()>)> task_observer_add;
    struct function<void (long)> task_observer_remove;
    struct function<void (const flutter::DartIsolate &)> root_isolate_create_callback;
    function_ffe40f9b isolate_create_callback;
    function_ffe40f9b root_isolate_shutdown_callback;
    function_ffe40f9b isolate_shutdown_callback;
    function_ffe40f9b service_isolate_create_callback;
    struct function<void (long long)> idle_notification_callback;
    struct function<bool (const std::basic_string<char>&, const std::basic_string<char>&)> unhandled_exception_callback;
    struct function<void (const std::basic_string<char>&, const std::basic_string<char>&)> log_message_callback;
    _Bool enable_software_rendering;
    _Bool skia_deterministic_rendering_on_cpu;
    _Bool verbose_logging;
    basic_string_0ec669f3 log_tag;
    _Bool icu_initialization_required;
    basic_string_0ec669f3 icu_data_path;
    struct function<std::unique_ptr<fml::Mapping>()> icu_mapper;
    int assets_dir;
    basic_string_0ec669f3 assets_path;
    struct function<void (const flutter::FrameTiming &)> frame_rasterized_callback;
    struct shared_ptr<const fml::Mapping> persistent_isolate_data;
    long long old_gen_heap_size;
    struct duration<long long, std::ratio<1, 1000000>> engine_start_timestamp;
    _Bool use_aot_reload;
    basic_string_0ec669f3 update_path;
    _Bool bind_cpu_cores;
    basic_string_0ec669f3 update_assets_path;
    struct function<std::vector<std::unique_ptr<const fml::Mapping>>()> update_kernels;
    struct function<void (const char *, long)> isolate_report_callback;
    struct shared_ptr<fml::stat::StatEventRecorder> stat_recorder;
    function_ffe40f9b dart_worker_thread_start_callback;
    struct function<void (const std::basic_string<char>&, long long)> anr_callback;
};

struct Shadow<WCDB::Syntax::Expression> {
    struct shared_ptr<WCDB::Syntax::Expression> _field1;
    _Bool _field2;
};

struct Shadow<WCDB::Syntax::Identifier> {
    struct shared_ptr<WCDB::Syntax::Identifier> m_payload;
    _Bool m_isPrivate;
};

struct Shadow<WCDB::Syntax::SelectSTMT> {
    struct shared_ptr<WCDB::Syntax::SelectSTMT> _field1;
    _Bool _field2;
};

struct SharedPtr<XAKAsset> {
    struct XAKAsset *_field1;
};

struct SharedPtr<XDSInputManager> {
    struct XDSInputManager *_ptr;
};

struct SharedPtr<XIKImage> {
    struct XIKImage *_field1;
};

struct SharedPtr<XMFAudioTrack> {
    struct XMFAudioTrack *_ptr;
};

struct SharedPtr<XMFClip> {
    struct XMFClip *_field1;
};

struct SharedPtr<XMFCombinedCurveTimingFunc> {
    struct XMFCombinedCurveTimingFunc *_ptr;
};

struct SharedPtr<XMFFrameCreatorApple> {
    struct XMFFrameCreatorApple *_ptr;
};

struct SharedPtr<XMFImageFileClip> {
    struct XMFImageFileClip *_field1;
};

struct SharedPtr<XMFImageTrack> {
    struct XMFImageTrack *_ptr;
};

struct SharedPtr<XMFMediaFile> {
    struct XMFMediaFile *_ptr;
};

struct SharedPtr<XMFVideoClip> {
    struct XMFVideoClip *_ptr;
};

struct SharedPtr<XMFVideoClipThumbGen> {
    struct XMFVideoClipThumbGen *_ptr;
};

struct SharedPtr<XMFVideoFrame> {
    struct XMFVideoFrame *_field1;
};

struct SharedPtr<XMFVideoFrameCV> {
    struct XMFVideoFrameCV *_ptr;
};

struct SharedPtr<XMFVideoTrack> {
    struct XMFVideoTrack *_ptr;
};

struct SharedPtr<XMJCamFunSession> {
    struct XMJCamFunSession *_ptr;
};

struct SharedPtr<XMJCamResourceManager> {
    struct XMJCamResourceManager *_ptr;
};

struct SharedPtr<XMJCamSession> {
    struct XMJCamSession *_ptr;
};

struct SharedPtr<XMJClipSegment> {
    struct XMJClipSegment *_ptr;
};

struct SharedPtr<XMJMaterialInfo> {
    struct XMJMaterialInfo *_ptr;
};

struct SharedPtr<XMJMovieSessionV3> {
    struct XMJMovieSessionV3 *_ptr;
};

struct SharedPtr<XMJSegment> {
    struct XMJSegment *_ptr;
};

struct SharedPtr<XMJServiceManager> {
    struct XMJServiceManager *_ptr;
};

struct SharedPtr<XMJStickerSegment> {
    struct XMJStickerSegment *_ptr;
};

struct SharedPtr<XMJTextSegment> {
    struct XMJTextSegment *_ptr;
};

struct SharedPtr<XMSExportSettings> {
    struct XMSExportSettings *_field1;
};

struct SharedPtr<XVBVideoSeriesReader> {
    struct XVBVideoSeriesReader *_ptr;
};

struct SharedPtr<XVCFastTrimSession> {
    struct XVCFastTrimSession *_ptr;
};

struct SharedPtr<XVCGIFToVideoConverter> {
    struct XVCGIFToVideoConverter *_ptr;
};

struct SharedPtr<XVIOnDemandPreprocManager> {
    struct XVIOnDemandPreprocManager *_ptr;
};

struct SharedPtr<XVIPreprocManager> {
    struct XVIPreprocManager *_ptr;
};

struct SharedPtr<XVIPreprocTask> {
    struct XVIPreprocTask *_field1;
};

struct SharpenFilter;

struct Shell;

struct SilkResampler;

struct SilkResamplerWrapper {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    float _field6;
    struct AudioFrame {
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field1;
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field2;
        struct AudioMetadata _field3;
        unsigned int _field4;
        short _field5;
        _Bool _field6;
    } _field7;
    struct AudioFrame {
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field1;
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field2;
        struct AudioMetadata _field3;
        unsigned int _field4;
        short _field5;
        _Bool _field6;
    } _field8;
    struct AudioFrame {
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field1;
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field2;
        struct AudioMetadata _field3;
        unsigned int _field4;
        short _field5;
        _Bool _field6;
    } _field9;
    struct AudioFrame {
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field1;
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field2;
        struct AudioMetadata _field3;
        unsigned int _field4;
        short _field5;
        _Bool _field6;
    } _field10;
    struct AudioFrame {
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field1;
        struct CopyOnWriteBuffer {
            struct scoped_refptr<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
                struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
            } _field1;
            unsigned long long _field2;
            unsigned long long _field3;
        } _field2;
        struct AudioMetadata _field3;
        unsigned int _field4;
        short _field5;
        _Bool _field6;
    } _field11;
    struct _SKP_Silk_resampler_state_struct _field12;
    struct unique_ptr<liteav::audio::SilkResamplerWrapper, std::__1::default_delete<liteav::audio::SilkResamplerWrapper>> _field13;
    struct unique_ptr<liteav::audio::SilkResamplerWrapper, std::__1::default_delete<liteav::audio::SilkResamplerWrapper>> _field14;
    struct ChannelsRelation _field15;
};

struct SingleThreadTaskRunner;

struct SkCubicResampler {
    float _field1;
    float _field2;
};

struct SkData;

struct SkISize {
    int _field1;
    int _field2;
};

struct SkImage;

struct SkM44 {
    float fMat[16];
};

struct SkPoint {
    float _field1;
    float _field2;
};

struct SkRRect {
    struct SkRect _field1;
    struct SkPoint _field2[4];
    int _field3;
};

struct SkRect {
    float fLeft;
    float fTop;
    float fRight;
    float fBottom;
};

struct SkSamplingOptions {
    _Bool _field1;
    struct SkCubicResampler _field2;
    int _field3;
    int _field4;
};

struct SkSurface;

struct SpeedTestParams {
    unsigned int _field1;
    basic_string_0ec669f3 _field2;
    basic_string_0ec669f3 _field3;
    _Bool _field4;
    int _field5;
    int _field6;
};

struct StWxAMFrame {
    char *_field1[4];
    unsigned long long _field2[4];
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    char *_field9;
};

struct StackInfo {
    unsigned long long **_field1;
    int *_field2;
};

struct StatEventRecorder;

struct StatementDelete {
    CDUnknownFunctionPointerType *_vptr$SQL;
    struct Identifier *m_syntaxPtr;
    struct shared_ptr<WCDB::StringView> m_description;
    _Bool m_hasDescription;
    struct Shadow<WCDB::Syntax::Identifier> m_syntax;
};

struct StatementInsert {
    CDUnknownFunctionPointerType *_vptr$SQL;
    struct Identifier *m_syntaxPtr;
    struct shared_ptr<WCDB::StringView> m_description;
    _Bool m_hasDescription;
    struct Shadow<WCDB::Syntax::Identifier> m_syntax;
};

struct StatementSelect {
    CDUnknownFunctionPointerType *_vptr$SQL;
    struct Identifier *m_syntaxPtr;
    struct shared_ptr<WCDB::StringView> m_description;
    _Bool m_hasDescription;
    struct Shadow<WCDB::Syntax::Identifier> m_syntax;
};

struct StatementUpdate {
    CDUnknownFunctionPointerType *_vptr$SQL;
    struct Identifier *m_syntaxPtr;
    struct shared_ptr<WCDB::StringView> m_description;
    _Bool m_hasDescription;
    struct Shadow<WCDB::Syntax::Identifier> m_syntax;
};

struct Status;

struct StreamAudioDecoder {
    void *_field1;
    void *_field2;
    int _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    _Bool _field9;
};

struct StringView {
    char *_field1;
    unsigned long long _field2;
    void *_field3;
};

struct StrongShape<tflite::gpu::Layout::BHWC> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct SwrContext;

struct SwsContext;

struct SyntaxList<WCDB::OrderingTerm> {
    CDUnknownFunctionPointerType *_field1;
    struct __list_node_base<WCDB::OrderingTerm, void *> {
        void *_field1;
        void *_field2;
    } _field2;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<WCDB::OrderingTerm, void *>>> {
        unsigned long long _field1;
    } _field3;
};

struct SyntaxList<WCTProperty> {
    CDUnknownFunctionPointerType *_vptr$_SyntaxList;
    struct __list_node_base<WCTProperty, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<WCTProperty, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct SyntaxList<WCTResultColumn> {
    CDUnknownFunctionPointerType *_vptr$_SyntaxList;
    struct __list_node_base<WCTResultColumn, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<WCTResultColumn, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct SystemError {
    long long _field1;
    basic_string_8a3d048a _field2;
};

struct SystemLoopbackRecorder {
    void *_field1;
    struct Lock _field2;
    struct ObserverList<liteav::audio::SystemLoopbackObserver, false, true, lite_base::internal::UncheckedObserverAdapter> _field3;
};

struct TAVSourceSoftEncoder {
    CDUnknownFunctionPointerType *_field1;
};

struct TBDrawParamType {
    int _field1;
    float _field2[16];
    double _field3[16];
    int _field4;
    int _field5;
    float _field6;
};

struct TC_FaceProfile {
    vector_dc67b4ed points;
};

struct TC_FaceShape {
    struct TC_FaceProfile faceProfile;
    struct TC_LeftEyebrow leftEyebrow;
    struct TC_RightEyebrow rightEyebrow;
    struct TC_LeftEye leftEye;
    struct TC_RightEye rightEye;
    struct TC_Nose nose;
    struct TC_Mouth mouth;
    struct TC_Pupil pupil;
};

struct TC_LeftEye {
    vector_dc67b4ed points;
};

struct TC_LeftEyebrow {
    vector_dc67b4ed points;
};

struct TC_Mouth {
    vector_dc67b4ed points;
};

struct TC_Nose {
    vector_dc67b4ed points;
};

struct TC_Pupil {
    vector_dc67b4ed points;
};

struct TC_RightEye {
    vector_dc67b4ed points;
};

struct TC_RightEyebrow {
    vector_dc67b4ed points;
};

struct TPACodecPropertyRange {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct TPAVProgramInfo;

struct TPAssetProxyLoaderCallback {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    id _field3;
};

struct TPAudioAttributes;

struct TPAudioRouteDescription;

struct TPBaseMediaParams {
    basic_string_0ec669f3 _field1;
    long long _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    long long _field8;
    float _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
};

struct TPConfigParams {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    int _field7;
    float _field8;
    int _field9;
};

struct TPDetailInfo {
    int _field1;
    long long _field2;
    long long _field3;
};

struct TPDrmParams {
    int _field1;
    int _field2;
    int _field3;
    long long _field4;
    long long _field5;
    int _field6;
    int _field7;
    basic_string_0ec669f3 _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    long long _field18;
    long long _field19;
    long long _field20;
    long long _field21;
    long long _field22;
    long long _field23;
    long long _field24;
    long long _field25;
    long long _field26;
};

struct TPDynamicStatisticParams {
    long long _field1;
    long long _field2;
    int _field3;
    int _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    int _field11;
    int _field12;
    int _field13;
};

struct TPEncodedDataParams {
    int codecID;
    int profile;
    int mediaType;
};

struct TPFrame {
    int _field1;
    char *_field2[8];
    int _field3[8];
    char **_field4;
    int _field5;
    int _field6;
    int _field7;
    long long _field8;
    long long _field9;
    void *_field10;
    long long _field11;
    int _field12;
    struct TPFrameSideData **_field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    struct TPRational _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    unsigned long long _field24;
    unsigned long long _field25;
    unsigned long long _field26;
    unsigned long long _field27;
    int _field28;
    int _field29;
    int _field30;
    unsigned long long _field31;
    int _field32;
    struct TPFrameReleaseDataCB _field33;
    struct TPFrameReleasePlanarDataCB _field34;
    struct TPFrameInternal *_field35;
    int _field36;
    long long _field37;
};

struct TPFrameInternal;

struct TPFrameMetadata {
    int _field1;
    struct TPHDRVividDynamicMetadata _field2;
    struct TPHDR10StaticMetadata _field3;
};

struct TPFrameReleaseDataCB {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct TPFrameReleasePlanarDataCB {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct TPFrameSideData;

struct TPGeneralPlayFlowParams {
    struct TPConfigParams _field1;
    struct TPBaseMediaParams _field2;
    struct TPGeneralTrackingParams _field3;
    struct TPDrmParams _field4;
};

struct TPGeneralTrackingParams {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    long long _field14;
};

struct TPHDR10StaticMetadata {
    unsigned short _field1[3];
    unsigned short _field2[3];
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned short _field7;
    unsigned short _field8;
};

struct TPHDRDeviceInfo {
    float max_display_pq;
    float min_display_pq;
};

struct TPHDRVividDynamicMetadata {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3[2];
    unsigned short _field4[2];
    unsigned short _field5[2];
    unsigned short _field6[2];
    unsigned char _field7[2];
    unsigned char _field8[2];
    unsigned short _field9[2][2];
    unsigned char _field10[2][2];
    unsigned short _field11[2][2];
    unsigned char _field12[2][2];
    unsigned short _field13[2][2];
    unsigned short _field14[2][2];
    unsigned char _field15[2][2];
    unsigned char _field16[2][2];
    unsigned char _field17[2][2];
    unsigned char _field18[2][2];
    unsigned char _field19[2][2];
    unsigned char _field20[2][2];
    unsigned char _field21[2][2];
    unsigned char _field22[2][2];
    unsigned char _field23[3][2][2];
    unsigned char _field24[3][2][2];
    unsigned short _field25[3][2][2];
    unsigned short _field26[3][2][2];
    unsigned short _field27[3][2][2];
    unsigned char _field28[3][2][2];
    unsigned char _field29[2];
    unsigned char _field30[2];
    unsigned char _field31[8][2];
};

struct TPHDRVividMetadataProcessor {
    struct TPHDRVividProcessedDynamicMetadata _field1;
    struct TPHDRVividProcessedStaticMetadata _field2;
};

struct TPHDRVividProcessedDynamicMetadata {
    unsigned char _field1;
    unsigned char _field2;
    float _field3[2];
    float _field4[2];
    float _field5[2];
    float _field6[2];
    int _field7[2];
    int _field8[2];
    float _field9[2][2];
    float _field10[2];
    float _field11[2];
    int _field12[2][2];
    float _field13[2][2];
    float _field14[2][2];
    float _field15[2][2];
    float _field16[2][2];
    float _field17[2][2];
    float _field18[2][2];
    float _field19[2][2];
    float _field20[2][2];
    int _field21[2][2];
    float _field22[2][2];
    int _field23[2][2];
    int _field24[2][2];
    int _field25[3][2][2];
    float _field26[3][2][2];
    float _field27[3][2][2];
    float _field28[3][2][2];
    float _field29[3][2][2];
    float _field30[3][2][2];
    float _field31[3][2][2];
    float _field32[3][2][2];
    float _field33[3][2][2];
    int _field34[2];
    int _field35[2];
    float _field36[8][2];
};

struct TPHDRVividProcessedStaticMetadata {
    float _field1[3];
    float _field2[3];
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
};

struct TPHDRVividToneMappingParams {
    float m_p;
    float m_m;
    float m_n;
    float m_a;
    float m_b;
    float k1;
    float k2;
    float k3;
    float th1[3];
    float th2[3];
    float th3[3];
    float base_offset[3];
    float ma[3][3];
    float mb[3][3];
    float mc[3][3];
    float md[3][3];
    int thmode[3];
    int cubic_nums;
    float color_sat;
    float c0;
    float c1;
    float a;
    float b;
    float satr;
    float rml;
};

struct TPJitterBufferConfigParams {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
};

struct TPMediaTrackInfo;

struct TPOpenGLTextureHelper;

struct TPPlayerConnectionNode {
    CDUnknownFunctionPointerType *_field1;
    struct map<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps, std::less<TPPlayerConnectionNode::Action>, std::allocator<std::pair<const TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>>> _field2;
};

struct TPPlayerInitConfig {
    struct map<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>>> m_queueIntMap;
    struct map<TPPlayerInitConfig::KeyType, std::deque<std::string>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<std::string>>>> m_queueStringMap;
    struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>>> m_intMap;
    struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>>> m_longMap;
    struct map<TPPlayerInitConfig::KeyType, bool, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, bool>>> m_boolMap;
    struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>>> m_floatMap;
    struct map<TPPlayerInitConfig::KeyType, std::string, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::string>>> m_stringMap;
    struct map<TPPlayerInitConfig::KeyType, std::shared_ptr<void>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::shared_ptr<void>>>> m_objectMap;
};

struct TPPlayerRichMediaAsyncRequesterCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPPlayerRichMediaExtraRequestInfo {
    int _field1;
};

struct TPPlayerRichMediaFeature;

struct TPPlayerRichMediaProcessorCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
    id _field4;
    id _field5;
};

struct TPPlayerRichMediaTimeRange {
    long long _field1;
    long long _field2;
};

struct TPRational {
    int num;
    int den;
};

struct TPRendererAudioFrameParams {
    int format;
    int sampleRate;
    unsigned long long channelLayout;
    int channels;
    struct TPEncodedDataParams encodedDataParams;
};

struct TPRendererConfigs {
    int renderThreadPriority;
    struct TPRendererAudioFrameParams audioFrameParams;
    _Bool resetAudioRendererWhenFlush;
    long long audioNonBluetoothMaxLatencyUs;
    long long audioBluetoothMaxLatencyUs;
    struct shared_ptr<tp_utils::TPAudioAttributes> audioAttributes;
    _Bool enableAsyncBlockWrite;
    _Bool enableAllocSuggestedBufferSize;
    _Bool enableAdaptAudioQueue;
    struct TPRendererVideoFrameParams videoFrameParams;
    void *videoRenderTarget;
    _Bool enableColorManagement;
    _Bool enableViewContentMode;
    _Bool enableRefactorRender;
    _Bool atBottom;
    int enableRendererSharpen;
    int enableRendererLucid;
    int enableRendererClarity;
};

struct TPRendererParamBlock {
    int _field1;
    long long _field2;
    void *_field3;
};

struct TPRendererVideoFrameParams {
    int format;
    int width;
    int height;
    struct TPRational sampleAspectRatio;
    int rotation;
    unsigned long long cropTop;
    unsigned long long cropBottom;
    unsigned long long cropLeft;
    unsigned long long cropRight;
};

struct TPRtcRemoteSdpInfo {
    _Bool _field1;
    basic_string_0ec669f3 _field2;
};

struct TPSubtitleParserCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
    id _field4;
};

struct TPThumbPlayerAudioFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerDemuxerCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerEventRecordCallbackWrapper;

struct TPThumbPlayerMessageCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerPostProcessFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerSubtitleFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPThumbPlayerVideoFrameCallbackWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct TPVCodecMaxCapability {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct TPVCodecPropertyRange {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct TPVideoOpenGLRenderBase;

struct TPVideoRender {
    CDUnknownFunctionPointerType *_field1;
    struct TPVideoOpenGLRenderBase *_field2;
    int _field3;
};

struct TPVideoRenderFrame {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned int _field4[4];
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct TPFrameMetadata _field13;
    struct ITPTemporyImageConverter *_field14;
    struct TPOpenGLTextureHelper *_field15;
};

struct TRTCAudioEffectCallback;

struct TRTCNetworkQosParam {
    int _field1;
    int _field2;
};

struct TRTCPipelineClient;

struct TRTCVideoEncParams {
    struct Optional<liteav::trtc::internal::TRTCVideoResolution> _field1;
    struct Optional<liteav::trtc::internal::TRTCVideoResolutionMode> _field2;
    struct Optional<unsigned int> _field3;
    struct Optional<unsigned int> _field4;
    struct Optional<unsigned int> _field5;
    struct Optional<unsigned int> _field6;
    struct Optional<unsigned int> _field7;
    struct Optional<unsigned int> _field8;
    struct Optional<liteav::video::RcMethod> _field9;
    struct Optional<unsigned int> _field10;
    struct Optional<unsigned int> _field11;
    struct Optional<unsigned int> _field12;
    struct Optional<liteav::video::EncoderStrategy> _field13;
    struct Optional<unsigned int> _field14;
    struct Optional<unsigned int> _field15;
};

struct TWasmBindingModule {
    struct OpaqueJSContext *_field1;
    _Bool _field2;
    struct IWasmContext *_field3;
    struct IWasmAdaptor *_field4;
    struct IWasmGlueAdaptor *_field5;
};

struct TXCVideoRpsFramerateCallback;

struct TXCVolumeLevelS16 {
    CDUnknownFunctionPointerType *_vptr$TXCVolumeLevelS16;
    unsigned int sample_rate_;
    unsigned int channels_;
    unsigned int internal_abs_max_value_for_level_;
    unsigned short abs_max_value_for_level_;
    unsigned long long processed_samples_for_level;
    unsigned long long processed_samples_threshold_for_level_;
    unsigned short last_max_pcm_sample_energy_;
    unsigned short max_pcm_sample_energy_;
    unsigned long long processed_samples_for_energy_;
    unsigned long long processed_samples_threshold_for_energy_;
};

struct TXLiveBaseObserverImpl;

struct TXLivePlayerObserverImpl;

struct TXLivePushObserverImpl;

struct TXLogCallbackWrapper;

struct TXNtpServiceCallbackImpl;

struct TaskCallback;

struct TaskConfig {
    unsigned int _field1;
};

struct TaskRunner;

struct TenpayCgiCallback;

struct TensorData;

struct TensorDesc {
    int dataKind;
    struct TensorShape logicShape;
};

struct TensorShape {
    int mSize;
    int mData[8];
};

struct TextEditingDelta {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t>> _field2;
    struct basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t>> _field3;
    int _field4;
    int _field5;
};

struct ThirdPartyCdnConfig {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    basic_string_0ec669f3 _field4;
    basic_string_0ec669f3 _field5;
};

struct Thread;

struct ThreadHost {
    basic_string_0ec669f3 _field1;
    struct unique_ptr<fml::Thread, std::default_delete<fml::Thread>> _field2;
    struct unique_ptr<fml::Thread, std::default_delete<fml::Thread>> _field3;
    struct unique_ptr<fml::Thread, std::default_delete<fml::Thread>> _field4;
    struct unique_ptr<fml::Thread, std::default_delete<fml::Thread>> _field5;
    struct unique_ptr<fml::Thread, std::default_delete<fml::Thread>> _field6;
};

struct TimeLapse {
    unsigned long long start;
    unsigned long long end;
};

struct TimeMapCoordinate;

struct TingPlayCenterManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct TingPlayCenterManagerCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct TingPlayModeManagerBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct TingPlayModeManagerCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct TingPlayUrlReplaceBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct TingPlayUrlReplaceCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
};

struct Tracker {
    CDStruct_6e3f967a _field1;
    float _field2;
    _Bool _field3;
    float _field4;
};

struct TrackerManager {
    int mWidth;
    int mHeight;
    long long mTrackerConfig;
    struct unique_ptr<WeEffect::TrackerManager::TrackerManagerImpl, std::default_delete<WeEffect::TrackerManager::TrackerManagerImpl>> mImpl;
};

struct TrackerManagerImpl;

struct TrailCell {
    CDUnknownFunctionPointerType *_field1;
    struct TimeMapCoordinate *_field2;
    int _field3;
    int _field4;
    int _field5;
};

struct TrailData {
    struct TrailCell **_field1;
    unsigned long long _field2;
    int *_field3;
    unsigned long long _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    float _field9;
    _Bool _field10;
    int _field11;
    int _field12;
    int _field13;
    float _field14;
    _Bool _field15;
    int _field16;
    int _field17;
    int _field18;
    float _field19;
    int _field20;
    struct Gradient *_field21;
};

struct TransParams {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    int _field8;
    int _field9;
    int _field10;
};

struct TranscodingPrams {
    int outWidth;
    int outHeight;
    int outVideoBitrate;
    float outFrameRate;
    int outAudioBitrate;
    int outAudioSampling;
    int audiochannels;
    int cropLeft;
    int cropTop;
    int cropWidth;
    int cropHeight;
    int startTime;
    int endTime;
    int adaptiveBRUp;
    int adaptiveBRDown;
    _Bool useAudioSkipResamplingMode;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct UncheckedObserverAdapter;

struct UploadParams {
    basic_string_0ec669f3 file_path;
    basic_string_0ec669f3 head_form_data;
    basic_string_0ec669f3 end_form_data;
    unsigned long long upload_offset;
    unsigned long long upload_range;
    _Bool vfs_upload_path_;
    int report_id;
};

struct UseCase;

struct V2TXLivePlayerObserverImpl;

struct V2TXLivePusherObserverImpl;

struct VLogDirector;

struct VLogEffect;

struct VLogInputTexture {
    int _field1;
    int _field2;
    int _field3;
    struct Rect _field4;
    struct Rect _field5;
    unsigned int _field6;
    struct LayoutInfo _field7;
    struct LayoutInfo _field8;
    struct InputAnimation _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct VMConfigure {
    _Bool isDebug;
    _Bool isMsgLookUpEnabled;
};

struct VOIPCSNetNotifier {
    CDUnknownFunctionPointerType *_field1;
};

struct VOIPChannelAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct VOIPNetNotifier {
    CDUnknownFunctionPointerType *_field1;
};

struct VideoEncodeParams {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    float _field10;
    float _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned int _field18;
    unsigned int _field19;
    _Bool _field20;
    _Bool _field21;
    int _field22;
    int _field23;
    int _field24;
    unsigned int _field25;
};

struct VideoFrame;

struct VideoGeneralInfo {
    float _field1;
    _Bool _field2;
    struct DecodingInfo _field3;
    struct DecodingInfo _field4;
};

struct VideoInfo;

struct VideoMetadata {
    CopyOnWriteBuffer_235b5354 pps;
    CopyOnWriteBuffer_235b5354 sps;
    CopyOnWriteBuffer_235b5354 vps;
    int codec;
    unsigned int width;
    unsigned int height;
    int rotation;
};

struct VideoSize {
    int _field1;
    int _field2;
};

struct VideoStats;

struct VideoTranscoding {
    struct TranscodingPrams mTransParams;
    struct ReportStaticPrams mStaticPrams;
    struct EncDecPrams mEncDecPrams;
    int videoNum;
    struct AVFrame *pFrame;
    struct AVPicture *pTargetPicture;
    struct AVFormatContext *formatCtx;
    struct SwsContext *pImgConvertCtx;
    struct AVCodecContext *pVideoCodecCtx;
    struct AVCodecContext *pAudioCodecCtx;
    struct AVBufferRef *inner_hw_device_ctx;
    struct AVFormatContext *output_audio_format_context;
    struct AVCodecContext *output_audio_codec_context;
    struct SwrContext *audio_resample_context;
    struct AVAudioFifo *fifo;
    CDUnknownBlockType videoProgressHandler;
    int audioOutputSamples;
    int audioOutputPacketNum;
    char *outFrameBuf;
    char *outFrameRotateBuf;
    struct WXSWTransColorProperties mColorProperties;
    _Bool needTransColorProperties;
    _Bool needScale;
    _Bool useNewScale;
    _Bool useSoftwareDecode;
    struct CNewScale2 newScale;
    _Bool videoDecodeStop;
    _Bool audioDecodeStop;
    _Bool processFirstAudioPacket;
};

struct ViewportMetrics {
    double device_pixel_ratio;
    double physical_width;
    double physical_height;
    double physical_padding_top;
    double physical_padding_right;
    double physical_padding_bottom;
    double physical_padding_left;
    double physical_view_inset_top;
    double physical_view_inset_right;
    double physical_view_inset_bottom;
    double physical_view_inset_left;
    double physical_system_gesture_inset_top;
    double physical_system_gesture_inset_right;
    double physical_system_gesture_inset_bottom;
    double physical_system_gesture_inset_left;
    double physical_touch_slop;
    struct vector<double, std::allocator<double>> physical_display_features_bounds;
    vector_cd3186ef physical_display_features_type;
    vector_cd3186ef physical_display_features_state;
};

struct VoIPRingBuffer {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    struct _VoIPRingBufferElement *_field5;
    struct _opaque_pthread_mutex_t *_field6;
    int _field7;
};

struct VoidBinaryI32Callback;

struct VoidBoolCallback;

struct VoidBoolI32Callback;

struct VoidBoolOptionCallback;

struct VoidBoolStringCallback;

struct VoidBoolStringI32StringCallback;

struct VoidCallback;

struct VoidF32F32BoolCallback;

struct VoidI64Callback;

struct VoidITransmitKvDataCallback;

struct VoidITransmitKvDataNoticeItemCallback;

struct VoidKRectCallback;

struct VoidListCallback;

struct VoidStringBinaryCallback;

struct VoidStringBoolCallback;

struct VoidStringCallback;

struct VoidStringStringBinaryCallback;

struct VoidStringStringCallback;

struct VoipCS3rdReport_t {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned long long _field16;
    unsigned long long _field17;
};

struct VoipCSChannelAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct VoipCSChannelReport_t {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
};

struct VoipCSClientReport_t {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    char _field4[256];
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    unsigned long long _field23;
    int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    int _field29;
    int _field30;
    int _field31;
    char _field32[256];
    char _field33[256];
    char _field34[256];
    char _field35[256];
};

struct VoipCSEngineReport_t {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    int _field54;
    unsigned int _field55;
    unsigned int _field56;
    unsigned int _field57;
    unsigned int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    unsigned int _field63;
    unsigned int _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
    unsigned int _field68;
    unsigned int _field69;
    unsigned int _field70;
    unsigned int _field71;
    unsigned int _field72;
    unsigned int _field73;
    unsigned int _field74;
    unsigned int _field75;
    unsigned int _field76;
    unsigned int _field77;
    unsigned int _field78;
    unsigned int _field79;
    unsigned int _field80;
    unsigned int _field81;
    unsigned int _field82;
    unsigned int _field83;
    unsigned int _field84;
    unsigned int _field85;
    unsigned int _field86;
    unsigned int _field87;
    unsigned int _field88;
    unsigned int _field89;
    unsigned int _field90;
    unsigned int _field91;
    unsigned int _field92;
    unsigned int _field93;
    unsigned int _field94;
    unsigned int _field95;
    unsigned int _field96;
    unsigned int _field97;
    unsigned int _field98;
    unsigned int _field99;
    unsigned int _field100;
    unsigned int _field101;
    unsigned int _field102;
    unsigned int _field103;
    unsigned int _field104;
    unsigned int _field105;
    unsigned int _field106;
    unsigned int _field107;
    unsigned int _field108;
    unsigned int _field109;
    unsigned int _field110;
    unsigned int _field111;
    unsigned int _field112;
    unsigned int _field113;
    unsigned int _field114;
    unsigned int _field115;
    unsigned int _field116;
    unsigned int _field117;
    unsigned int _field118;
    unsigned int _field119;
    unsigned int _field120;
    unsigned int _field121;
    unsigned int _field122;
    unsigned int _field123;
    unsigned int _field124;
    unsigned int _field125;
    unsigned int _field126;
    unsigned int _field127;
    unsigned int _field128;
    unsigned int _field129;
    unsigned int _field130;
    unsigned int _field131;
    unsigned int _field132;
    unsigned int _field133;
    unsigned int _field134;
    unsigned int _field135;
    unsigned int _field136;
    unsigned int _field137;
    unsigned int _field138;
    int _field139;
    int _field140;
    int _field141;
    int _field142;
    int _field143;
    int _field144;
    int _field145;
    int _field146;
    unsigned int _field147;
    unsigned int _field148;
    unsigned int _field149;
    unsigned int _field150;
    unsigned int _field151;
    unsigned int _field152;
    unsigned int _field153;
    unsigned int _field154;
    unsigned int _field155;
    unsigned int _field156;
    unsigned int _field157;
    unsigned int _field158;
};

struct WAAppInfo {
    basic_string_0ec669f3 _field1;
    basic_string_0ec669f3 _field2;
    _Bool _field3;
};

struct WAGameThreadWaitReady;

struct WAPkgCronetDownloadCallback;

struct WARecorderData {
    id _field1;
    id _field2;
    struct AudioStreamBasicDescription _field3;
    struct OpaqueAudioQueue *_field4;
    struct AudioQueueBuffer *_field5[3];
    id _field6;
};

struct WCDBLockGuard {
    shared_ptr_45de587b m_mutex;
    _Bool m_exclusive;
};

struct WCDBSharedLock;

struct WCFImageMeta {
    struct CGSize _field1;
    long long _field2;
};

struct WCFinderDynamicIcon {
    WCFinderDynamicIconFetcherResponse *op;
};

struct WCFinderInteractiveCounts {
    long long fav;
    long long like;
};

struct WCFinderKeywordAction {
    long long _field1;
    id _field2;
};

struct WCFinderPlayerControlProgressState {
    unsigned long long _field1;
    unsigned long long _field2;
    _Bool _field3;
};

struct WCFinderProfileCard {
    long long _field1;
    long long _field2;
    id _field3;
};

struct WCFinderScrollViewDelegateProxyFlag {
    _Bool respondToDidScroll;
};

struct WCFinderShareDataState {
    long long flag;
    WCFinderShareSpanState *span;
};

struct WCPayReportLog {
    unsigned long long _field1;
    unsigned long long _field2;
    char *_field3;
};

struct WCPinLayout {
    id _field1;
    struct WCValue _field2;
    struct WCValue _field3;
    struct WCValue _field4;
    struct WCValue _field5;
    struct WCValue _field6;
    struct WCValue _field7;
    struct WCValue _field8;
    struct WCValue _field9;
    struct WCValue _field10;
    struct WCValue _field11;
    struct WCValue _field12;
    struct WCValue _field13;
    int _field14;
    struct WCValue _field15;
    struct WCValue _field16;
    struct WCValue _field17;
    struct WCValue _field18;
    _Bool _field19;
    int _field20;
    int _field21;
    _Bool _field22;
};

struct WCShowArea {
    double x_p;
    double y_p;
    double w_p;
    double h_p;
};

struct WCSize {
    struct WCValue _field1;
    struct WCValue _field2;
};

struct WCTOptionalBool {
    CDUnknownFunctionPointerType *_field1;
    struct Optional<bool> {
        _Bool _field1;
        CDUnion_2739e4df _field2;
    } _field2;
    _Bool _field3;
};

struct WCTOptionalSize {
    CDUnknownFunctionPointerType *_field1;
    struct Optional<unsigned long> _field2;
    unsigned long long _field3;
};

struct WCURLSessionTaskCallBack;

struct WCValue {
    int _field1;
    double _field2;
};

struct WXAudioScriptState {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct OpaqueJSContext *_field3;
    long long _field4;
};

struct WXColorProperties {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct WXSWTransColorProperties {
    int wxColorPrimaries;
    int wxColorTransferCharacteristic;
    int wxColorSpace;
    int wxColorRange;
};

struct WXTalkEngineAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct WXTalkieEngineAdapter {
    CDUnknownFunctionPointerType *_field1;
};

struct WasmAdaptorBridge {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
};

struct WasmAdaptorImpl {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    id _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
    id _field8;
    id _field9;
    id _field10;
    id _field11;
    id _field12;
    id _field13;
    id _field14;
    id _field15;
    id _field16;
    id _field17;
};

struct WeImage<unsigned char> {
    struct shared_ptr<wevision::WeImage<unsigned char>::Imp> _field1;
};

struct WeVisDataReport22049 {
    _Bool mIsInited;
    struct vector<WeVisDataReport22049Field, std::allocator<WeVisDataReport22049Field>> mFieldVect;
    struct unordered_map<std::string, unsigned long, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned long>>> mfind;
};

struct WeVisDataReport22049Field;

struct WeakPtr<FlutterEngine> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    FlutterEngine *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
};

struct WeakPtr<FlutterKeyboardManager> {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct RefPtr<fml::internal::WeakPtrFlag> _field3;
    struct DebugThreadChecker _field4;
};

struct WeakPtr<FlutterViewController> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    FlutterViewController *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
};

struct WeakPtr<XMJResourcePreloader> {
    struct XMJResourcePreloader *_ptr;
    struct WeakRefType *m_refs;
};

struct WeakPtr<flutter::AccessibilityBridgeIos> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    struct AccessibilityBridgeIos *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
};

struct WeakPtr<flutter::FlutterPlatformViewsController> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    struct FlutterPlatformViewsController *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
};

struct WeakPtr<flutter::PlatformView> {
    CDUnknownFunctionPointerType *_field1;
    struct PlatformView *_field2;
    struct RefPtr<fml::internal::WeakPtrFlag> _field3;
    struct DebugThreadChecker _field4;
};

struct WeakPtrFlag;

struct WeakRefType;

struct WebNetCallBack;

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct WebPageNeedProfile {
    unsigned long long redirect_start;
    unsigned long long redirect_end;
    unsigned long long fetch_start;
    unsigned long long domain_lookup_start;
    unsigned long long domain_lookup_end;
    unsigned long long connect_start;
    unsigned long long connect_end;
    unsigned long long secure_connection_start;
    unsigned long long secure_connection_end;
    unsigned long long request_start;
    unsigned long long request_end;
    unsigned long long response_start;
    unsigned long long response_end;
    basic_string_0ec669f3 protocol;
    int rtt;
    int status_code;
    int network_estimate_type;
    int http_rtt_estimate;
    int transport_rtt_estimate;
    int downstream_throughput_kbps_estimate;
    int throughput_kbps;
    basic_string_0ec669f3 peer_ip;
    int peer_port;
    _Bool socket_reused;
    long long sent_bytes_count;
    long long received_bytes_count;
};

struct WindowDef {
    CDUnknownFunctionPointerType *_field1;
    struct list<WCDB::Syntax::Expression, std::allocator<WCDB::Syntax::Expression>> _field2;
    struct list<WCDB::Syntax::OrderingTerm, std::allocator<WCDB::Syntax::OrderingTerm>> _field3;
    struct Optional<WCDB::Syntax::FrameSpec> _field4;
};

struct WxAdaptiveBRResParams {
    struct VideoGeneralInfo _field1;
    int _field2;
    int _field3;
    int _field4;
    struct ABAControlParams _field5;
    struct PlatformParams _field6;
    struct TransParams _field7;
};

struct WxAudioFileCallback {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
};

struct WxConfCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct WxConfSDKCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
};

struct WxCronetGlobalCallback;

struct WxDownloadFileProfile {
    basic_string_0ec669f3 temp_file_path;
    basic_string_0ec669f3 file_path;
};

struct WxDownloadFileRequestParams {
    void *callback;
};

struct WxVideoConfigPara {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
};

struct WxVideoTransParaABA {
    int _field1;
    int _field2;
    float _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    _Bool _field21;
    float _field22;
    float _field23;
    int _field24;
    int _field25;
    struct WXColorProperties _field26;
    _Bool _field27;
};

struct X3DEffect;

struct XAKAsset;

struct XChatCls {
    struct unique_ptr<wevision::XChatCls::Impl, std::default_delete<wevision::XChatCls::Impl>> mspImpl;
};

struct XDSInputManager;

struct XEffect_GLContext {
    unsigned int program;
    unsigned int vShader;
    unsigned int fShader;
};

struct XFaceCluster {
    struct unique_ptr<wevision::XFaceCluster::Impl, std::default_delete<wevision::XFaceCluster::Impl>> mspImpl;
};

struct XIKImage;

struct XImageFeat;

struct XIntegerID<int, -1> {
    int _value;
};

struct XLoggerInfo_t {
    int _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    int _field5;
    struct timeval _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    int _field10;
};

struct XMFAudioTrack;

struct XMFClip;

struct XMFCombinedCurveTimingFunc;

struct XMFFrameCreatorApple;

struct XMFImageFileClip;

struct XMFImageTrack;

struct XMFMediaFile;

struct XMFVideoClip;

struct XMFVideoClipThumbGen;

struct XMFVideoFrame;

struct XMFVideoFrameCV;

struct XMFVideoTrack;

struct XMJAssetInfo;

struct XMJAsyncTaskInfo {
    struct shared_ptr<XMJError> Error;
    int ExecutionID;
    basic_string_0ec669f3 TaskTag;
};

struct XMJCamFunSession;

struct XMJCamResourceManager;

struct XMJCamSession;

struct XMJCamTemplateInfo {
    _Bool _field1;
    _Bool _field2;
    struct XTMTime _field3;
    struct vector<std::shared_ptr<XMJMusicInfo>, std::allocator<std::shared_ptr<XMJMusicInfo>>> _field4;
};

struct XMJClipSegment;

struct XMJError;

struct XMJFlicks {
    long long _field1;
};

struct XMJILinkAppClientParams {
    basic_string_0ec669f3 _field1;
    struct XMJILinkLoginParams _field2;
    struct function<XMJILinkLoginParams ()> _field3;
};

struct XMJILinkContextParams {
    struct XOptional<XMJILinkContextParamsSelfManaged> _field1;
    struct XOptional<XMJILinkContextParamsExternalManaged> _field2;
};

struct XMJILinkContextParamsExternalManaged;

struct XMJILinkContextParamsSelfManaged {
    unsigned int _field1;
    _Bool _field2;
    basic_string_0ec669f3 _field3;
};

struct XMJILinkLoginParams {
    int _field1;
    basic_string_0ec669f3 _field2;
    basic_string_0ec669f3 _field3;
};

struct XMJILinkParams {
    struct XMJILinkContextParams _field1;
    struct XMJILinkAppClientParams _field2;
};

struct XMJLyricInfo;

struct XMJMaasCore;

struct XMJMaterialInfo;

struct XMJMovieExportSettings {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    basic_string_0ec669f3 _field9;
    basic_string_0ec669f3 _field10;
    map_afe8ac17 _field11;
};

struct XMJMovieSessionV3;

struct XMJMusicInfo;

struct XMJRecordingSettings {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    struct XMJTime _field8;
    map_afe8ac17 _field9;
    _Bool _field10;
    int _field11;
    _Bool _field12;
    int _field13;
};

struct XMJRenderView;

struct XMJResourcePreloader;

struct XMJSegment;

struct XMJServiceManager;

struct XMJStickerSegment;

struct XMJTaskTrace;

struct XMJTextSegment;

struct XMJTime {
    struct XMJFlicks _field1;
    int _field2;
};

struct XMMGPUSpatiotemporalDenosing;

struct XMSExportSettings;

struct XMutexPOSIX {
    struct _opaque_pthread_mutex_t _mutex;
};

struct XOneshotDet;

struct XOptional<XMJILinkContextParamsExternalManaged> {
    struct optional<XMJILinkContextParamsExternalManaged> _field1;
};

struct XOptional<XMJILinkContextParamsSelfManaged> {
    struct optional<XMJILinkContextParamsSelfManaged> _field1;
};

struct XPath {
    struct unique_ptr<XPathOpaque, std::default_delete<XPathOpaque>> _opaque;
};

struct XPathOpaque;

struct XRgba2UVFilter;

struct XRgba2YFilter;

struct XSigConnHelper {
    struct list<vboost::signals2::connection, std::allocator<vboost::signals2::connection>> _connections;
};

struct XTMTime {
    long long _field1;
    unsigned int _field2;
};

struct XTMTimeRange {
    struct XTMTime _field1;
    struct XTMTime _field2;
};

struct XVAVideoMultiTaskClassifier;

struct XVBVideoSeriesReader;

struct XVCFastTrimSession;

struct XVCGIFToVideoConverter;

struct XVIOnDemandPreprocManager;

struct XVIPreprocManager;

struct XVIPreprocTask;

struct XmlReaderAttr_t {
    char *_field1;
    char *_field2;
    struct XmlReaderAttr_t *_field3;
};

struct XmlReaderNode_t {
    int _field1;
    char *_field2;
    struct XmlReaderNode_t *_field3;
    struct XmlReaderNode_t *_field4;
    struct XmlReaderNode_t *_field5;
    struct XmlReaderNode_t **_field6;
    struct XmlReaderAttr_t *_field7;
    struct XmlReaderAttr_t **_field8;
    int _field9;
};

struct YGValue {
    float _field1;
    int _field2;
};

struct YTCAPTCHA {
    int fixedInterval;
    int unit;
    int rand_shift;
    int rand_inv;
    vector_cd3186ef intervals;
    char *SeqID;
};

struct YTDataPack {
    struct vector<YTRawImgData, std::allocator<YTRawImgData>> VideoData;
    long long BeginTime;
    long long ChangePointTime;
    vector_1ee95920 ChangePointTimeList;
    float OffsetSys;
    int config_begin;
    int frameNum;
    int LandMarkNum;
    int width;
    int height;
    char *log;
    char *SeqID;
    char *version;
    struct vector<RawYuvData, std::allocator<RawYuvData>> yuvDatas;
};

struct YTDeviceInfo {
    float deviceISO;
    float minISO;
    float maxISO;
};

struct YTFaceAlignment {
    struct YtFaceAlignmentSdk *_field1;
    struct PtsPostProc *_field2;
    struct YTFaceRefiner *_field3;
    struct YTFaceWrapper *_field4;
};

struct YTFaceDetection {
    struct YtFaceDetection *_field1;
};

struct YTFaceRefiner;

struct YTFaceReflect {
    CDUnknownFunctionPointerType encodeJpeg;
    CDUnknownFunctionPointerType stateChangeCB;
    CDUnknownFunctionPointerType screenCB;
    CDUnknownFunctionPointerType cameraCB;
    CDUnknownFunctionPointerType fetchCB;
    struct thread reflectThread;
    struct SS *privateInst;
    struct SSData *mSSData;
    _Bool cancelTask;
    struct Mat BestImg;
    void *mCaller;
    int mTriggerTimes;
    float initLight;
    struct YTDeviceInfo deviceInfo;
};

struct YTFaceWrapper;

struct YTFullPack {
    struct YTDataPack AGin;
    struct YTCAPTCHA CP;
    struct vector<unsigned char, std::allocator<unsigned char>> SingleImg_buffer;
};

struct YTPOSE {
    float pitch;
    float yaw;
    float roll;
};

struct YTPoseEstimate {
    struct YtPoseEstimateSdk *_field1;
};

struct YTRawImgData;

struct YtFaceAlignmentSdk;

struct YtFaceDetParam {
    int min_face_size;
    int max_face_size;
    float scale_factor;
    float net1_threshold;
    float net2_threshold;
    float final_threshold;
    int net1_size;
    float nms_threshold;
    _Bool bigger_face_mode;
    _Bool non_square_rect;
};

struct YtFaceDetection;

struct YtPoseEstimateSdk;

struct _AudioDeviceInfo {
    int _field1;
    basic_string_0ec669f3 _field2;
    basic_string_0ec669f3 _field3;
    int _field4;
};

struct _DelegateFlag {
    unsigned int scrollViewDidScroll:1;
    unsigned int endScrollingAnimation:1;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _LzRange {
    unsigned long long location;
    unsigned long long length;
};

struct _MapRouteInfo {
    int _field1;
    union MapVector2d *_field2;
    int _field3;
    struct _MapRouteSection *_field4;
    int _field5;
    float _field6;
    char _field7[512];
    _Bool _field8;
    _Bool _field9;
    int _field10;
    int _field11;
};

struct _MapRouteSection;

struct _MarkerGroupIconAnchor {
    union MapVector2f _field1;
    char _field2[512];
    struct MapEdgeInsets _field3;
};

struct _MidasStuKeyProcessor {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct _MmBp__BaseRequest;

struct _MmBp__InitRequest {
    struct _ProtobufCMessage _field1;
    struct _MmBp__BaseRequest *_field2;
    int _field3;
    struct _ProtobufCBinaryData _field4;
    int _field5;
    struct _ProtobufCBinaryData _field6;
};

struct _NSParserPosition {
    _Bool newLine;
    _Bool endOfString;
    double x;
    double y;
    double width;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POIInfo {
    struct MapLocation _field1;
    unsigned short _field2[32];
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    double _field15;
    long long _field16;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _ProtobufCBinaryData {
    unsigned long long _field1;
    char *_field2;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _RGBAColorLineExtraParam {
    unsigned int _field1[32];
    unsigned int _field2[32];
    float _field3;
    int _field4;
};

struct _RGBADashedLineExtraParam {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int *_field4;
    int _field5;
};

struct _SKP_Silk_resampler_state_struct {
    int _field1;
    int _field2;
    int _field3[6];
    int _field4[16];
    int _field5[2];
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    short *_field12;
    int _field13[2];
    int _field14[2];
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
};

struct _SpeedTestInfo {
    int roomId;
    unsigned long long roomKey;
    unsigned int callType;
    unsigned int isConnecting;
    unsigned int isConnected;
    unsigned int c2Clossrate;
    unsigned int c2CrttCnt;
    NSMutableArray *c2Crtt;
    unsigned int c2SdownLossRate;
    unsigned int c2SrttCnt;
    NSMutableArray *c2Srtt;
    unsigned int sendPkts;
    unsigned int rcvPkts;
};

struct _TMBitmapContext {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    float _field6;
    int _field7;
    void *_field8;
    char *_field9[1];
};

struct _TMRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _TMSize {
    int _field1;
    int _field2;
};

struct _TrafficStyle {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
};

struct _VoIPRingBufferElement;

struct __CFString;

struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, void *>>> {
    struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
};

struct __list_node_base<liteav::LogUploaderInterface::InstanceInfo, void *> {
    struct __list_node_base<liteav::LogUploaderInterface::InstanceInfo, void *> *__prev_;
    struct __list_node_base<liteav::LogUploaderInterface::InstanceInfo, void *> *__next_;
};

struct __raw {
    unsigned long long __words[3];
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __siginfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    int _field6;
    void *_field7;
    union sigval _field8;
    long long _field9;
    unsigned long long _field10[7];
};

struct __tree_end_node<std::__tree_node_base<void *>*> {
    void *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _sg_state_t {
    _Bool _field1;
    unsigned int _field2;
    struct sg_context _field3;
    struct sg_pass _field4;
    struct sg_pipeline _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    struct {
        CDStruct_dbd3b7f8 _field1;
        CDStruct_dbd3b7f8 _field2;
        CDStruct_dbd3b7f8 _field3;
        CDStruct_dbd3b7f8 _field4;
        CDStruct_dbd3b7f8 _field5;
        CDStruct_dbd3b7f8 _field6;
        CDStruct_183601bc *_field7;
        CDStruct_183601bc *_field8;
        CDStruct_183601bc *_field9;
        CDStruct_183601bc *_field10;
        CDStruct_183601bc *_field11;
        CDStruct_183601bc *_field12;
    } _field9;
    struct {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
        int _field4;
        int _field5;
        CDStruct_183601bc *_field6;
        CDStruct_183601bc *_field7;
        struct sg_pass _field8;
        struct {
            struct sg_depth_stencil_state _field1;
            struct sg_blend_state _field2;
            struct sg_rasterizer_state _field3;
            _Bool _field4;
            struct {
                struct {
                    char _field1;
                    char _field2;
                    unsigned char _field3;
                    unsigned char _field4;
                    unsigned char _field5;
                    int _field6;
                    unsigned int _field7;
                } _field1;
                unsigned int _field2;
            } _field5[16];
            unsigned int _field6;
            unsigned int _field7;
            int _field8;
            unsigned int _field9;
            unsigned int _field10;
            CDStruct_183601bc *_field11;
            struct sg_pipeline _field12;
        } _field9;
        _Bool _field10[18];
        _Bool _field11;
        int _field12;
    } _field10;
    _Bool _field11;
    _Bool _field12;
    void *_field13;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDict;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlHashTable;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlParserCtxt {
    struct _xmlSAXHandler *_field1;
    void *_field2;
    struct _xmlDoc *_field3;
    int _field4;
    int _field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    struct _xmlParserInput *_field10;
    int _field11;
    int _field12;
    struct _xmlParserInput **_field13;
    struct _xmlNode *_field14;
    int _field15;
    int _field16;
    struct _xmlNode **_field17;
    int _field18;
    struct _xmlParserNodeInfoSeq {
        unsigned long long _field1;
        unsigned long long _field2;
        struct _xmlParserNodeInfo *_field3;
    } _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    struct _xmlValidCtxt {
        void *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        struct _xmlNode *_field4;
        int _field5;
        int _field6;
        struct _xmlNode **_field7;
        unsigned int _field8;
        struct _xmlDoc *_field9;
        int _field10;
        struct _xmlValidState *_field11;
        int _field12;
        int _field13;
        struct _xmlValidState *_field14;
        struct _xmlAutomata *_field15;
        struct _xmlAutomataState *_field16;
    } _field26;
    int _field27;
    int _field28;
    char *_field29;
    char *_field30;
    int _field31;
    int _field32;
    char **_field33;
    long long _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    char *_field39;
    char *_field40;
    char *_field41;
    int *_field42;
    int _field43;
    int _field44;
    int *_field45;
    int _field46;
    struct _xmlParserInput *_field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    void *_field52;
    int _field53;
    int _field54;
    void *_field55;
    int _field56;
    int _field57;
    struct _xmlDict *_field58;
    char **_field59;
    int _field60;
    int _field61;
    char *_field62;
    char *_field63;
    char *_field64;
    int _field65;
    int _field66;
    int _field67;
    char **_field68;
    int *_field69;
    struct _xmlStartTag *_field70;
    struct _xmlHashTable *_field71;
    struct _xmlHashTable *_field72;
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    struct _xmlNode *_field77;
    int _field78;
    struct _xmlAttr *_field79;
    struct _xmlError {
        int _field1;
        int _field2;
        char *_field3;
        int _field4;
        char *_field5;
        int _field6;
        char *_field7;
        char *_field8;
        char *_field9;
        int _field10;
        int _field11;
        void *_field12;
        void *_field13;
    } _field80;
    int _field81;
    unsigned long long _field82;
    unsigned long long _field83;
    struct _xmlParserNodeInfo *_field84;
    int _field85;
    int _field86;
    struct _xmlParserNodeInfo *_field87;
    int _field88;
    unsigned long long _field89;
};

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlSAXHandler {
    CDUnknownFunctionPointerType internalSubset;
    CDUnknownFunctionPointerType isStandalone;
    CDUnknownFunctionPointerType hasInternalSubset;
    CDUnknownFunctionPointerType hasExternalSubset;
    CDUnknownFunctionPointerType resolveEntity;
    CDUnknownFunctionPointerType getEntity;
    CDUnknownFunctionPointerType entityDecl;
    CDUnknownFunctionPointerType notationDecl;
    CDUnknownFunctionPointerType attributeDecl;
    CDUnknownFunctionPointerType elementDecl;
    CDUnknownFunctionPointerType unparsedEntityDecl;
    CDUnknownFunctionPointerType setDocumentLocator;
    CDUnknownFunctionPointerType startDocument;
    CDUnknownFunctionPointerType endDocument;
    CDUnknownFunctionPointerType startElement;
    CDUnknownFunctionPointerType endElement;
    CDUnknownFunctionPointerType reference;
    CDUnknownFunctionPointerType characters;
    CDUnknownFunctionPointerType ignorableWhitespace;
    CDUnknownFunctionPointerType processingInstruction;
    CDUnknownFunctionPointerType comment;
    CDUnknownFunctionPointerType warning;
    CDUnknownFunctionPointerType error;
    CDUnknownFunctionPointerType fatalError;
    CDUnknownFunctionPointerType getParameterEntity;
    CDUnknownFunctionPointerType cdataBlock;
    CDUnknownFunctionPointerType externalSubset;
    unsigned int initialized;
    void *_private;
    CDUnknownFunctionPointerType startElementNs;
    CDUnknownFunctionPointerType endElementNs;
    CDUnknownFunctionPointerType serror;
};

struct _xmlValidState;

struct aes_key_st {
    unsigned int _field1[60];
    int _field2;
};

struct array<unsigned char, 16UL> {
    unsigned char _field1[16];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char>::__rep, std::__1::allocator<char>> {
        struct __rep {
            CDUnion_de1179c4 _field1;
        } _field1;
    } _field1;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            CDUnion_de1179c4 ;
        } __value_;
    } __r_;
};

struct basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t>> {
    struct __compressed_pair<std::basic_string<char16_t>::__rep, std::allocator<char16_t>> {
        struct __rep {
            union {
                struct __long {
                    unsigned short *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    unsigned short _field1[11];
                    struct {
                        unsigned char _field1[1];
                        unsigned char _field2;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct blockMotionPrams {
    float _field1;
    int _field2;
    float _field3;
    float _field4;
    int _field5;
};

struct cacheCmp;

struct cacheElement;

struct circle_buffer {
    unsigned long long m_read_pos;
    unsigned long long m_write_pos;
    unsigned long long m_size;
    unsigned long long m_capacity;
    char *m_data;
};

struct deque<TPAudioRouteDescription, std::allocator<TPAudioRouteDescription>> {
    struct __split_buffer<TPAudioRouteDescription *, std::allocator<TPAudioRouteDescription *>> {
        struct TPAudioRouteDescription **__first_;
        struct TPAudioRouteDescription **__begin_;
        struct TPAudioRouteDescription **__end_;
        struct __compressed_pair<TPAudioRouteDescription **, std::allocator<TPAudioRouteDescription *>> {
            struct TPAudioRouteDescription **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<TPAudioRouteDescription>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<std::string, std::allocator<std::string>> {
    struct __split_buffer<std::string *, std::allocator<std::string *>> {
        void **__first_;
        void **__begin_;
        void **__end_;
        struct __compressed_pair<std::string **, std::allocator<std::string *>> {
            void **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<std::string>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<std::unique_ptr<liteav::audio::AudioFrame>, std::allocator<std::unique_ptr<liteav::audio::AudioFrame>>> {
    struct __split_buffer<std::unique_ptr<liteav::audio::AudioFrame>*, std::allocator<std::unique_ptr<liteav::audio::AudioFrame>*>> {
        void **__first_;
        void **__begin_;
        void **__end_;
        struct __compressed_pair<std::unique_ptr<liteav::audio::AudioFrame>**, std::allocator<std::unique_ptr<liteav::audio::AudioFrame>*>> {
            void **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<std::unique_ptr<liteav::audio::AudioFrame>>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<std::unique_ptr<liteav::video::VideoFrame>, std::allocator<std::unique_ptr<liteav::video::VideoFrame>>> {
    struct __split_buffer<std::unique_ptr<liteav::video::VideoFrame>*, std::allocator<std::unique_ptr<liteav::video::VideoFrame>*>> {
        void **__first_;
        void **__begin_;
        void **__end_;
        struct __compressed_pair<std::unique_ptr<liteav::video::VideoFrame>**, std::allocator<std::unique_ptr<liteav::video::VideoFrame>*>> {
            void **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<std::unique_ptr<liteav::video::VideoFrame>>> {
        unsigned long long __value_;
    } __size_;
};

struct duration<long long, std::ratio<1, 1000000>> {
    long long __rep_;
};

struct function<XMJILinkLoginParams ()> {
    struct __value_func<XMJILinkLoginParams ()> {
        struct type _field1;
        void *_field2;
    } _field1;
};

struct function<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
    struct __value_func<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
        struct type _field1;
        void *_field2;
    } _field1;
};

struct function<bool (const std::basic_string<char>&, const std::basic_string<char>&)> {
    struct __value_func<bool (const std::basic_string<char>&, const std::basic_string<char>&)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<const WCDB::BaseBinding *()> {
    struct __value_func<const WCDB::BaseBinding *()> {
        struct type _field1;
        void *_field2;
    } _field1;
};

struct function<float (float)> {
    struct __value_func<float (float)> {
        struct type _field1;
        void *_field2;
    } _field1;
};

struct function<std::unique_ptr<fml::Mapping>()> {
    struct __value_func<std::unique_ptr<fml::Mapping>()> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<std::vector<std::unique_ptr<const fml::Mapping>>()> {
    struct __value_func<std::vector<std::unique_ptr<const fml::Mapping>>()> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void ()> {
    struct __value_func<void ()> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (CGSize, CGAffineTransform)> {
    struct __value_func<void (CGSize, CGAffineTransform)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (CGSize, CGAffineTransform, double)> {
    struct __value_func<void (CGSize, CGAffineTransform, double)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (WCDB::InnerDatabase *&)> {
    struct __value_func<void (WCDB::InnerDatabase *&)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (const char *, long)> {
    struct __value_func<void (const char *, long)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (const char *, std::vector<sqlitelint::Issue>)> {
    struct __value_func<void (const char *, std::vector<sqlitelint::Issue>)> {
        struct type _field1;
        void *_field2;
    } _field1;
};

struct function<void (const flutter::DartIsolate &)> {
    struct __value_func<void (const flutter::DartIsolate &)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (const flutter::FrameTiming &)> {
    struct __value_func<void (const flutter::FrameTiming &)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (const puppet::fdn::Memory *, unsigned int, unsigned int)> {
    struct __value_func<void (const puppet::fdn::Memory *, unsigned int, unsigned int)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (const std::basic_string<char>&, const std::basic_string<char>&)> {
    struct __value_func<void (const std::basic_string<char>&, const std::basic_string<char>&)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (const std::basic_string<char>&, long long)> {
    struct __value_func<void (const std::basic_string<char>&, long long)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (long long)> {
    struct __value_func<void (long long)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (long)> {
    struct __value_func<void (long)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (long, std::function<void ()>)> {
    struct __value_func<void (long, std::function<void ()>)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (std::shared_ptr<WCDB::InnerHandle>&)> {
    struct __value_func<void (std::shared_ptr<WCDB::InnerHandle>&)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (std::unique_ptr<flutter::FrameTimingsRecorder>)> {
    struct __value_func<void (std::unique_ptr<flutter::FrameTimingsRecorder>)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<FetcherNode, std::allocator<FetcherNode>> {
    struct __list_node_base<FetcherNode, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<FetcherNode, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<InfoItem, std::allocator<InfoItem>> {
    struct __list_node_base<InfoItem, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<InfoItem, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<WCDB::Syntax::Expression, std::allocator<WCDB::Syntax::Expression>> {
    struct __list_node_base<WCDB::Syntax::Expression, void *> {
        void *_field1;
        void *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<WCDB::Syntax::Expression, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<WCDB::Syntax::OrderingTerm, std::allocator<WCDB::Syntax::OrderingTerm>> {
    struct __list_node_base<WCDB::Syntax::OrderingTerm, void *> {
        void *_field1;
        void *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<WCDB::Syntax::OrderingTerm, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<liteav::LogUploaderInterface::InstanceInfo, std::__1::allocator<liteav::LogUploaderInterface::InstanceInfo>> {
    struct __list_node_base<liteav::LogUploaderInterface::InstanceInfo, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<liteav::LogUploaderInterface::InstanceInfo, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<mars::cdn::TlvMeta, std::allocator<mars::cdn::TlvMeta>> {
    struct __list_node_base<mars::cdn::TlvMeta, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<mars::cdn::TlvMeta, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<std::shared_ptr<POPAnimatorItem>, std::allocator<std::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::shared_ptr<POPAnimatorItem>, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<std::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<std::string, std::allocator<std::string>> {
    struct __list_node_base<std::string, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<std::string, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<unsigned int, std::allocator<unsigned int>> {
    struct __list_node_base<unsigned int, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<unsigned int, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<vboost::signals2::connection, std::allocator<vboost::signals2::connection>> {
    struct __list_node_base<vboost::signals2::connection, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<vboost::signals2::connection, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct mach_header {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct map<MJRectCorner, UIView *, std::less<MJRectCorner>, std::allocator<std::pair<const MJRectCorner, UIView *>>> {
    struct __tree<std::__value_type<MJRectCorner, UIView *>, std::__map_value_compare<MJRectCorner, std::__value_type<MJRectCorner, UIView *>, std::less<MJRectCorner>, true>, std::allocator<std::__value_type<MJRectCorner, UIView *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<MJRectCorner, UIView *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<MJRectCorner, std::__value_type<MJRectCorner, UIView *>, std::less<MJRectCorner>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<NSString *, bool, CompareNSString, std::allocator<std::pair<NSString *const, bool>>> {
    struct __tree<std::__value_type<NSString *, bool>, std::__map_value_compare<NSString *, std::__value_type<NSString *, bool>, CompareNSString, true>, std::allocator<std::__value_type<NSString *, bool>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, bool>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, bool>, CompareNSString, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<NSString *, std::__list_iterator<InfoItem, void *>, RecardEqualID, std::allocator<std::pair<NSString *const, std::__list_iterator<InfoItem, void *>>>> {
    struct __tree<std::__value_type<NSString *, std::__list_iterator<InfoItem, void *>>, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::__list_iterator<InfoItem, void *>>, RecardEqualID, true>, std::allocator<std::__value_type<NSString *, std::__list_iterator<InfoItem, void *>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, std::__list_iterator<InfoItem, void *>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::__list_iterator<InfoItem, void *>>, RecardEqualID, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>, CompareNSString, std::allocator<std::pair<NSString *const, std::vector<std::shared_ptr<ChatLogSessionItem>>>>> {
    struct __tree<std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, CompareNSString, true>, std::allocator<std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, CompareNSString, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>, std::less<NSString *>, std::allocator<std::pair<NSString *const, std::vector<std::shared_ptr<ChatLogSessionItem>>>>> {
    struct __tree<std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, std::less<NSString *>, true>, std::allocator<std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::vector<std::shared_ptr<ChatLogSessionItem>>>, std::less<NSString *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<NSString *, std::weak_ptr<WCDBSharedLock>, WCDBStringComparator, std::allocator<std::pair<NSString *const, std::weak_ptr<WCDBSharedLock>>>> {
    struct __tree<std::__value_type<NSString *, std::weak_ptr<WCDBSharedLock>>, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::weak_ptr<WCDBSharedLock>>, WCDBStringComparator, true>, std::allocator<std::__value_type<NSString *, std::weak_ptr<WCDBSharedLock>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, std::weak_ptr<WCDBSharedLock>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, std::weak_ptr<WCDBSharedLock>>, WCDBStringComparator, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPCodecID, TPVCodecMaxCapability, std::less<TPCodecID>, std::allocator<std::pair<const TPCodecID, TPVCodecMaxCapability>>> {
    struct __tree<std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>, std::allocator<std::__value_type<TPCodecID, TPVCodecMaxCapability>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPCodecID, TPVCodecMaxCapability>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps, std::less<TPPlayerConnectionNode::Action>, std::allocator<std::pair<const TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>>> {
    struct __tree<std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, std::__map_value_compare<TPPlayerConnectionNode::Action, std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, std::less<TPPlayerConnectionNode::Action>, true>, std::allocator<std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerConnectionNode::Action, std::__value_type<TPPlayerConnectionNode::Action, TPPlayerConnectionNode::ConfigMaps>, std::less<TPPlayerConnectionNode::Action>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<float>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, TPPlayerInitConfig::ConfigVal<long long>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, bool, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, bool>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, bool>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, bool>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, bool>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, bool>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, bool>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<TPPlayerInitConfig::ConfigVal<int>>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, std::deque<std::string>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::deque<std::string>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::deque<std::string>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, std::shared_ptr<void>, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::shared_ptr<void>>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::shared_ptr<void>>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TPPlayerInitConfig::KeyType, std::string, std::less<TPPlayerInitConfig::KeyType>, std::allocator<std::pair<const TPPlayerInitConfig::KeyType, std::string>>> {
    struct __tree<std::__value_type<TPPlayerInitConfig::KeyType, std::string>, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::string>, std::less<TPPlayerInitConfig::KeyType>, true>, std::allocator<std::__value_type<TPPlayerInitConfig::KeyType, std::string>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPPlayerInitConfig::KeyType, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPPlayerInitConfig::KeyType, std::__value_type<TPPlayerInitConfig::KeyType, std::string>, std::less<TPPlayerInitConfig::KeyType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<WCDBTag, WCDBRouterInfo *, std::less<WCDBTag>, std::allocator<std::pair<const WCDBTag, WCDBRouterInfo *>>> {
    struct __tree<std::__value_type<WCDBTag, WCDBRouterInfo *>, std::__map_value_compare<WCDBTag, std::__value_type<WCDBTag, WCDBRouterInfo *>, std::less<WCDBTag>, true>, std::allocator<std::__value_type<WCDBTag, WCDBRouterInfo *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<WCDBTag, WCDBRouterInfo *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<WCDBTag, std::__value_type<WCDBTag, WCDBRouterInfo *>, std::less<WCDBTag>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<WCDBTag, int, std::less<WCDBTag>, std::allocator<std::pair<const WCDBTag, int>>> {
    struct __tree<std::__value_type<WCDBTag, int>, std::__map_value_compare<WCDBTag, std::__value_type<WCDBTag, int>, std::less<WCDBTag>, true>, std::allocator<std::__value_type<WCDBTag, int>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<WCDBTag, int>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<WCDBTag, std::__value_type<WCDBTag, int>, std::less<WCDBTag>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<WeEffect::APP_SCENARIO, std::string, std::less<WeEffect::APP_SCENARIO>, std::allocator<std::pair<const WeEffect::APP_SCENARIO, std::string>>> {
    struct __tree<std::__value_type<WeEffect::APP_SCENARIO, std::string>, std::__map_value_compare<WeEffect::APP_SCENARIO, std::__value_type<WeEffect::APP_SCENARIO, std::string>, std::less<WeEffect::APP_SCENARIO>, true>, std::allocator<std::__value_type<WeEffect::APP_SCENARIO, std::string>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<WeEffect::APP_SCENARIO, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<WeEffect::APP_SCENARIO, std::__value_type<WeEffect::APP_SCENARIO, std::string>, std::less<WeEffect::APP_SCENARIO>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<WeEffect::CORE_MODEL, std::string, std::less<WeEffect::CORE_MODEL>, std::allocator<std::pair<const WeEffect::CORE_MODEL, std::string>>> {
    struct __tree<std::__value_type<WeEffect::CORE_MODEL, std::string>, std::__map_value_compare<WeEffect::CORE_MODEL, std::__value_type<WeEffect::CORE_MODEL, std::string>, std::less<WeEffect::CORE_MODEL>, true>, std::allocator<std::__value_type<WeEffect::CORE_MODEL, std::string>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<WeEffect::CORE_MODEL, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<WeEffect::CORE_MODEL, std::__value_type<WeEffect::CORE_MODEL, std::string>, std::less<WeEffect::CORE_MODEL>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<char *, char *, std::less<char *>, std::allocator<std::pair<char *const, char *>>> {
    struct __tree<std::__value_type<char *, char *>, std::__map_value_compare<char *, std::__value_type<char *, char *>, std::less<char *>, true>, std::allocator<std::__value_type<char *, char *>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<char *, char *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<char *, std::__value_type<char *, char *>, std::less<char *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::string, std::less<int>, std::allocator<std::pair<const int, std::string>>> {
    struct __tree<std::__value_type<int, std::string>, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>, std::allocator<std::__value_type<int, std::string>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<int, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long long, std::unique_ptr<HttpTask>, std::less<long long>, std::allocator<std::pair<const long long, std::unique_ptr<HttpTask>>>> {
    struct __tree<std::__value_type<long long, std::unique_ptr<HttpTask>>, std::__map_value_compare<long long, std::__value_type<long long, std::unique_ptr<HttpTask>>, std::less<long long>, true>, std::allocator<std::__value_type<long long, std::unique_ptr<HttpTask>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<long long, std::unique_ptr<HttpTask>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<long long, std::__value_type<long long, std::unique_ptr<HttpTask>>, std::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long, Group, std::less<long>, std::allocator<std::pair<const long, Group>>> {
    struct __tree<std::__value_type<long, Group>, std::__map_value_compare<long, std::__value_type<long, Group>, std::less<long>, true>, std::allocator<std::__value_type<long, Group>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<long, Group>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<long, std::__value_type<long, Group>, std::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long, SectionFrame, std::less<long>, std::allocator<std::pair<const long, SectionFrame>>> {
    struct __tree<std::__value_type<long, SectionFrame>, std::__map_value_compare<long, std::__value_type<long, SectionFrame>, std::less<long>, true>, std::allocator<std::__value_type<long, SectionFrame>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<long, SectionFrame>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<long, std::__value_type<long, SectionFrame>, std::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long, WCCardChooseViewSectionType, std::less<long>, std::allocator<std::pair<const long, WCCardChooseViewSectionType>>> {
    struct __tree<std::__value_type<long, WCCardChooseViewSectionType>, std::__map_value_compare<long, std::__value_type<long, WCCardChooseViewSectionType>, std::less<long>, true>, std::allocator<std::__value_type<long, WCCardChooseViewSectionType>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<long, WCCardChooseViewSectionType>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<long, std::__value_type<long, WCCardChooseViewSectionType>, std::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long, mmsns::TimeLineSectionType, std::less<long>, std::allocator<std::pair<const long, mmsns::TimeLineSectionType>>> {
    struct __tree<std::__value_type<long, mmsns::TimeLineSectionType>, std::__map_value_compare<long, std::__value_type<long, mmsns::TimeLineSectionType>, std::less<long>, true>, std::allocator<std::__value_type<long, mmsns::TimeLineSectionType>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<long, mmsns::TimeLineSectionType>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<long, std::__value_type<long, mmsns::TimeLineSectionType>, std::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::pair<WCDBTag, WCTErrorCode>, std::vector<int>, std::less<std::pair<WCDBTag, WCTErrorCode>>, std::allocator<std::pair<const std::pair<WCDBTag, WCTErrorCode>, std::vector<int>>>> {
    struct __tree<std::__value_type<std::pair<WCDBTag, WCTErrorCode>, std::vector<int>>, std::__map_value_compare<std::pair<WCDBTag, WCTErrorCode>, std::__value_type<std::pair<WCDBTag, WCTErrorCode>, std::vector<int>>, std::less<std::pair<WCDBTag, WCTErrorCode>>, true>, std::allocator<std::__value_type<std::pair<WCDBTag, WCTErrorCode>, std::vector<int>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::pair<WCDBTag, WCTErrorCode>, std::vector<int>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::pair<WCDBTag, WCTErrorCode>, std::__value_type<std::pair<WCDBTag, WCTErrorCode>, std::vector<int>>, std::less<std::pair<WCDBTag, WCTErrorCode>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::shared_ptr<ChatLogSessionItem>, long, std::less<std::shared_ptr<ChatLogSessionItem>>, std::allocator<std::pair<const std::shared_ptr<ChatLogSessionItem>, long>>> {
    struct __tree<std::__value_type<std::shared_ptr<ChatLogSessionItem>, long>, std::__map_value_compare<std::shared_ptr<ChatLogSessionItem>, std::__value_type<std::shared_ptr<ChatLogSessionItem>, long>, std::less<std::shared_ptr<ChatLogSessionItem>>, true>, std::allocator<std::__value_type<std::shared_ptr<ChatLogSessionItem>, long>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::shared_ptr<ChatLogSessionItem>, long>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::shared_ptr<ChatLogSessionItem>, std::__value_type<std::shared_ptr<ChatLogSessionItem>, long>, std::less<std::shared_ptr<ChatLogSessionItem>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::string, std::map<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<const std::string, std::map<std::string, std::string>>>> {
    struct __tree<std::__value_type<std::string, std::map<std::string, std::string>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, std::string>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::map<std::string, std::string>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, std::map<std::string, std::string>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::map<std::string, std::string>>, std::less<std::string>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::string, std::shared_ptr<WssCallback>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<WssCallback>>>> {
    struct __tree<std::__value_type<std::string, std::shared_ptr<WssCallback>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<WssCallback>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::shared_ptr<WssCallback>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, std::shared_ptr<WssCallback>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<WssCallback>>, std::less<std::string>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>> {
    struct __tree<std::__value_type<std::string, std::string>, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::string>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::string, std::vector<int>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<int>>>> {
    struct __tree<std::__value_type<std::string, std::vector<int>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<int>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::vector<int>>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<int>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<int>>, std::less<std::string>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>, std::less<std::string>, std::allocator<std::pair<const std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>>> {
    struct __tree<std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, std::__map_value_compare<std::string, std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, std::less<std::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc, std::less<std::string>, std::allocator<std::pair<const std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>>> {
    struct __tree<std::__value_type<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>, std::__map_value_compare<std::string, std::__value_type<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, xnet::dnn::DnnInferenceModelBase::TensorDesc>, std::less<std::string>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, OAKImageRequestEntity *, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, OAKImageRequestEntity *>>> {
    struct __tree<std::__value_type<unsigned int, OAKImageRequestEntity *>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, OAKImageRequestEntity *>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, OAKImageRequestEntity *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned int, OAKImageRequestEntity *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, OAKImageRequestEntity *>, std::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, ReaderTask, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, ReaderTask>>> {
    struct __tree<std::__value_type<unsigned int, ReaderTask>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, ReaderTask>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, ReaderTask>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned int, ReaderTask>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, ReaderTask>, std::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, WriterTask, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, WriterTask>>> {
    struct __tree<std::__value_type<unsigned int, WriterTask>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, WriterTask>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, WriterTask>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned int, WriterTask>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, WriterTask>, std::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>> {
    struct __tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, unsigned long long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long long>>> {
    struct __tree<std::__value_type<unsigned int, unsigned long long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long long>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long long>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long long>, std::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, OpaqueJSValue *, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, OpaqueJSValue *>>> {
    struct __tree<std::__value_type<unsigned long long, OpaqueJSValue *>, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, OpaqueJSValue *>, std::less<unsigned long long>, true>, std::allocator<std::__value_type<unsigned long long, OpaqueJSValue *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long long, OpaqueJSValue *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, OpaqueJSValue *>, std::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, double, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, double>>> {
    struct __tree<std::__value_type<unsigned long long, double>, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, double>, std::less<unsigned long long>, true>, std::allocator<std::__value_type<unsigned long long, double>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long long, double>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, double>, std::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, tagEmojiItem *, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, tagEmojiItem *>>> {
    struct __tree<std::__value_type<unsigned long long, tagEmojiItem *>, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, tagEmojiItem *>, std::less<unsigned long long>, true>, std::allocator<std::__value_type<unsigned long long, tagEmojiItem *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long long, tagEmojiItem *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long long, std::__value_type<unsigned long long, tagEmojiItem *>, std::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, NSMutableDictionary *, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableDictionary *>>> {
    struct __tree<std::__value_type<unsigned long, NSMutableDictionary *>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, NSMutableDictionary *>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, NSMutableDictionary *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long, NSMutableDictionary *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, NSMutableDictionary *>, std::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, OpenServiceRowType, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, OpenServiceRowType>>> {
    struct __tree<std::__value_type<unsigned long, OpenServiceRowType>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, OpenServiceRowType>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, OpenServiceRowType>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long, OpenServiceRowType>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, OpenServiceRowType>, std::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned int, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>> {
    struct __tree<std::__value_type<unsigned long, unsigned int>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, unsigned int>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, unsigned int>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long, unsigned int>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, unsigned int>, std::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__value_type<unsigned long, unsigned long>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, unsigned long>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, unsigned long>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, unsigned long>, std::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mat<3, 3, float, glm::packed_highp> {
    struct vec<3, float, glm::packed_highp> _field1[3];
};

struct memory_file {
    int _field1;
    unsigned long long _field2;
    char *_field3;
    unsigned long long _field4;
    void *_field5;
};

struct multimap<NSString *, CGRect, WCFinderKeywordEqualId, std::allocator<std::pair<NSString *const, CGRect>>> {
    struct __tree<std::__value_type<NSString *, CGRect>, std::__map_value_compare<NSString *, std::__value_type<NSString *, CGRect>, WCFinderKeywordEqualId, true>, std::allocator<std::__value_type<NSString *, CGRect>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, CGRect>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, CGRect>, WCFinderKeywordEqualId, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct multimap<NSString *, UIView *, ClassIdentifyEqual, std::allocator<std::pair<NSString *const, UIView *>>> {
    struct __tree<std::__value_type<NSString *, UIView *>, std::__map_value_compare<NSString *, std::__value_type<NSString *, UIView *>, ClassIdentifyEqual, true>, std::allocator<std::__value_type<NSString *, UIView *>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, UIView *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, UIView *>, ClassIdentifyEqual, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct opaqueCMSampleBuffer;

struct optional<CGRect> {
    union {
        char __null_state_;
        struct CGRect __val_;
    } ;
    _Bool __engaged_;
};

struct optional<MediaSource> {
    CDUnion_0506adf3 _field1;
    _Bool _field2;
};

struct optional<XMJILinkContextParamsExternalManaged> {
    union {
        char _field1;
        struct XMJILinkContextParamsExternalManaged _field2;
    } _field1;
    _Bool _field2;
};

struct optional<XMJILinkContextParamsSelfManaged> {
    union {
        char _field1;
        struct XMJILinkContextParamsSelfManaged _field2;
    } _field1;
    _Bool _field2;
};

struct optional<bool> {
    CDUnion_2739e4df _field1;
    _Bool _field2;
};

struct optional<std::string> {
    union {
        char _field1;
        basic_string_0ec669f3 _field2;
    } _field1;
    _Bool _field2;
};

struct optional<std::vector<std::basic_string<char>>> {
    union {
        char __null_state_;
        struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<wesvg::RGBAColor> {
    union {
        char __null_state_;
        struct RGBAColor __val_;
    } ;
    _Bool __engaged_;
};

struct optional<wesvg::RGBColor> {
    union {
        char _field1;
        struct RGBColor {
            unsigned char _field1;
            unsigned char _field2;
            unsigned char _field3;
        } _field2;
    } _field1;
    _Bool _field2;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<NSData *, unsigned long> {
    id _field1;
    unsigned long long _field2;
};

struct pair<bool, KeyValueHolder> {
    _Bool _field1;
    struct KeyValueHolder _field2;
};

struct pair<double, double> {
    double _field1;
    double _field2;
};

struct priority_queue<cacheElement, std::vector<cacheElement>, cacheCmp> {
    struct vector<cacheElement, std::allocator<cacheElement>> c;
    struct cacheCmp comp;
};

struct queue<std::string, std::deque<std::string>> {
    struct deque<std::string, std::allocator<std::string>> c;
};

struct queue<std::unique_ptr<liteav::audio::AudioFrame>, std::deque<std::unique_ptr<liteav::audio::AudioFrame>>> {
    struct deque<std::unique_ptr<liteav::audio::AudioFrame>, std::allocator<std::unique_ptr<liteav::audio::AudioFrame>>> c;
};

struct queue<std::unique_ptr<liteav::video::VideoFrame>, std::deque<std::unique_ptr<liteav::video::VideoFrame>>> {
    struct deque<std::unique_ptr<liteav::video::VideoFrame>, std::allocator<std::unique_ptr<liteav::video::VideoFrame>>> c;
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct scoped_nsobject<CADisplayLink> {
    CADisplayLink *object_;
};

struct scoped_nsobject<DelayingGestureRecognizer> {
    DelayingGestureRecognizer *object_;
};

struct scoped_nsobject<FlutterBasicMessageChannel> {
    FlutterBasicMessageChannel *object_;
};

struct scoped_nsobject<FlutterDartProject> {
    FlutterDartProject *object_;
};

struct scoped_nsobject<FlutterEngine> {
    FlutterEngine *object_;
};

struct scoped_nsobject<FlutterMethodChannel> {
    FlutterMethodChannel *object_;
};

struct scoped_nsobject<FlutterObservatoryPublisher> {
    FlutterObservatoryPublisher *object_;
};

struct scoped_nsobject<FlutterPlatformPlugin> {
    FlutterPlatformPlugin *object_;
};

struct scoped_nsobject<FlutterRestorationPlugin> {
    FlutterRestorationPlugin *object_;
};

struct scoped_nsobject<FlutterTextInputPlugin> {
    FlutterTextInputPlugin *object_;
};

struct scoped_nsobject<FlutterView> {
    FlutterView *object_;
};

struct scoped_nsobject<NSMutableSet<NSNumber *>> {
    NSMutableSet *object_;
};

struct scoped_nsobject<SemanticsObjectContainer> {
    SemanticsObjectContainer *object_;
};

struct scoped_nsobject<UIGestureRecognizer> {
    UIGestureRecognizer *object_;
};

struct scoped_nsobject<UIHoverGestureRecognizer> {
    UIHoverGestureRecognizer *object_;
};

struct scoped_nsobject<UIPanGestureRecognizer> {
    UIPanGestureRecognizer *object_;
};

struct scoped_nsobject<UIScrollView> {
    UIScrollView *object_;
};

struct scoped_nsobject<UIView> {
    UIView *object_;
};

struct scoped_nsobject<UIViewController> {
    UIViewController *object_;
};

struct scoped_refptr<lite_base::SingleThreadTaskRunner> {
    struct SingleThreadTaskRunner *ptr_;
};

struct scoped_refptr<lite_base::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct scoped_refptr<liteav::OnlineLogger> {
    struct OnlineLogger *ptr_;
};

struct set<ITPAudioRouteManagerCallback *, std::less<ITPAudioRouteManagerCallback *>, std::allocator<ITPAudioRouteManagerCallback *>> {
    struct __tree<ITPAudioRouteManagerCallback *, std::less<ITPAudioRouteManagerCallback *>, std::allocator<ITPAudioRouteManagerCallback *>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<ITPAudioRouteManagerCallback *, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::less<ITPAudioRouteManagerCallback *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<WCDBTag, std::less<WCDBTag>, std::allocator<WCDBTag>> {
    struct __tree<WCDBTag, std::less<WCDBTag>, std::allocator<WCDBTag>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<WCDBTag, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::less<WCDBTag>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<std::pair<unsigned long, unsigned int>, std::less<std::pair<unsigned long, unsigned int>>, std::allocator<std::pair<unsigned long, unsigned int>>> {
    struct __tree<std::pair<unsigned long, unsigned int>, std::less<std::pair<unsigned long, unsigned int>>, std::allocator<std::pair<unsigned long, unsigned int>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::pair<unsigned long, unsigned int>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::less<std::pair<unsigned long, unsigned int>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<std::string, std::less<std::string>, std::allocator<std::string>> {
    struct __tree<std::string, std::less<std::string>, std::allocator<std::string>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::string, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::less<std::string>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<unsigned int, std::less<unsigned int>, std::allocator<unsigned int>> {
    struct __tree<unsigned int, std::less<unsigned int>, std::allocator<unsigned int>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::less<unsigned int>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct sg_blend_state {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    int _field9;
    int _field10;
    int _field11;
    float _field12[4];
};

struct sg_context {
    unsigned int _field1;
};

struct sg_depth_stencil_state {
    struct sg_stencil_state _field1;
    struct sg_stencil_state _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct sg_pass {
    unsigned int _field1;
};

struct sg_pipeline {
    unsigned int _field1;
};

struct sg_rasterizer_state {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
};

struct sg_stencil_state {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct shared_ptr<CdnCallback> {
    struct CdnCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ChatLogDataItem> {
    struct ChatLogDataItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ChatLogSessionItem> {
    struct ChatLogSessionItem *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<CronetDownloadCallback> {
    struct CronetDownloadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<CronetRequestCallback> {
    struct CronetRequestCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<CronetUploadCallback> {
    struct CronetUploadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<CvSVM> {
    struct CvSVM *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ExpandUIConfig> {
    struct ExpandUIConfig *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::CenterDetector> {
    struct CenterDetector *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::FantasyPoint> {
    struct FantasyPoint *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::FrameJumper> {
    struct FrameJumper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::FrameSender> {
    struct FrameSender *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::MotionEstimator> {
    struct MotionEstimator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::NanoDet> {
    struct NanoDet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::Queue<float>> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::ReIDManager> {
    struct ReIDManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FFE::ScanClassification> {
    struct ScanClassification *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ITPPlayerRichMediaAsyncRequester> {
    struct ITPPlayerRichMediaAsyncRequester *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ITPPlayerRichMediaProcessor> {
    struct ITPPlayerRichMediaProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<IlinkSDKCloudSessionCallback> {
    struct IlinkSDKCloudSessionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Kara::FeatureCenter::Text::FullTokenizer> {
    struct FullTokenizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<MBCronetDownloadCallback> {
    struct MBCronetDownloadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<MyCallback> {
    struct MyCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TPThumbPlayerEventRecordCallbackWrapper> {
    struct TPThumbPlayerEventRecordCallbackWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WAGameThreadWaitReady> {
    struct WAGameThreadWaitReady *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WAPkgCronetDownloadCallback> {
    struct WAPkgCronetDownloadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::InnerHandle> {
    struct InnerHandle *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::StringView> {
    struct StringView *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::Syntax::Expression> {
    struct Expression *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<WCDB::Syntax::Identifier> {
    struct Identifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::Syntax::SelectSTMT> {
    struct SelectSTMT *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<WCDBSharedLock> {
    struct WCDBSharedLock *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCURLSessionTaskCallBack> {
    struct WCURLSessionTaskCallBack *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WeVisionUtil::Layer> {
    struct Layer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WeVisionUtil::LayerCompositer> {
    struct LayerCompositer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WebNetCallBack> {
    struct WebNetCallBack *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WxCronetGlobalCallback> {
    struct WxCronetGlobalCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XMJAssetInfo> {
    struct XMJAssetInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XMJError> {
    struct XMJError *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XMJLyricInfo> {
    struct XMJLyricInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XMJMaasCore> {
    struct XMJMaasCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XMJMusicInfo> {
    struct XMJMusicInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XMJRenderView> {
    struct XMJRenderView *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XMJTaskTrace> {
    struct XMJTaskTrace *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<XVAVideoMultiTaskClassifier> {
    struct XVAVideoMultiTaskClassifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<__WCSN::__WCSBCP> {
    struct __WCSBCP *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<__WCSN::__WCSTECP> {
    struct __WCSTECP *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<blink::BindingApp> {
    struct BindingApp *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<blink::HTMLCanvasViewNG> {
    struct HTMLCanvasViewNG *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<blink::IOSCanvasViewDelegateGL> {
    struct IOSCanvasViewDelegateGL *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<blink::ImageDecodeCache> {
    struct ImageDecodeCache *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<blink::ResourceLoader> {
    struct ResourceLoader *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const fml::Mapping> {
    struct Mapping *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<cv::Mat> {
    struct Mat *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<flutter::AssetManager> {
    struct AssetManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<flutter::FlutterPlatformViewsController> {
    struct FlutterPlatformViewsController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<flutter::PlatformMessageRouter> {
    struct PlatformMessageRouter *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<flutter::ProfilerMetricsIOS> {
    struct ProfilerMetricsIOS *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<flutter::SamplingProfiler> {
    struct SamplingProfiler *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<flutter::ThreadHost> {
    struct ThreadHost *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<fml::stat::StatEventRecorder> {
    struct StatEventRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<gogcv::MediaChecker> {
    struct MediaChecker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::CppUtil> {
    struct CppUtil *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::IAppKinda> {
    struct IAppKinda *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::IAsyncTask> {
    struct IAsyncTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::ITransmitKvData> {
    struct ITransmitKvData *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::IUIModal> {
    struct IUIModal *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::IUIPage> {
    struct IUIPage *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KBankCardTypePickerViewOnSelectCallback> {
    struct KBankCardTypePickerViewOnSelectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KBankEditViewOnSeletBankCallback> {
    struct KBankEditViewOnSeletBankCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KCardNumberEditViewOnTextChangedCallback> {
    struct KCardNumberEditViewOnTextChangedCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KCardNumberEditViewOnTextEndEditingCallback> {
    struct KCardNumberEditViewOnTextEndEditingCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KCardTypePickerViewOnSelectCallback> {
    struct KCardTypePickerViewOnSelectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KCgi> {
    struct KCgi *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KCountPickerViewOnSelectCallback> {
    struct KCountPickerViewOnSelectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KCountryCallingCodeViewOnSelectCallback> {
    struct KCountryCallingCodeViewOnSelectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KDatePickerViewOnSelectCallback> {
    struct KDatePickerViewOnSelectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KEditTextOnEditorActionCallback> {
    struct KEditTextOnEditorActionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KEditTextOnFocusChangeCallback> {
    struct KEditTextOnFocusChangeCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KEditTextOnTextBeginChangeCallback> {
    struct KEditTextOnTextBeginChangeCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KEditTextOnTextChangedCallback> {
    struct KEditTextOnTextChangedCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KEditTextOnTextEndEditingCallback> {
    struct KEditTextOnTextEndEditingCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KHorizontalScrollViewOnScrollCallback> {
    struct KHorizontalScrollViewOnScrollCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KListViewCallback> {
    struct KListViewCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KListViewOnScrollCallback> {
    struct KListViewOnScrollCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KNetworkMockManager> {
    struct KNetworkMockManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KPatternLockViewEndWithPatternCallback> {
    struct KPatternLockViewEndWithPatternCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KPatternLockViewOnInputInvalidPatternCallback> {
    struct KPatternLockViewOnInputInvalidPatternCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KProfessionEditViewOnSelectProfessionCallback> {
    struct KProfessionEditViewOnSelectProfessionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KPwdInputViewOnEndEnterPasswordCallback> {
    struct KPwdInputViewOnEndEnterPasswordCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KPwdInputViewOnPasswordChangeCallback> {
    struct KPwdInputViewOnPasswordChangeCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KRegionEditViewOnRegionSelectedCallback> {
    struct KRegionEditViewOnRegionSelectedCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KScrollViewOnScrollCallback> {
    struct KScrollViewOnScrollCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KSecureEditTextOnTextChangedCallback> {
    struct KSecureEditTextOnTextChangedCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KSwitchViewOnChangeSwitchCallback> {
    struct KSwitchViewOnChangeSwitchCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KTableViewCellEditAction> {
    struct KTableViewCellEditAction *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KTableViewCellManager> {
    struct KTableViewCellManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KValidDatePickerViewOnSelectCallback> {
    struct KValidDatePickerViewOnSelectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KViewOnClickCallback> {
    struct KViewOnClickCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KViewOnLongClickCallback> {
    struct KViewOnLongClickCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::KViewOnTouchCallback> {
    struct KViewOnTouchCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::TenpayCgiCallback> {
    struct TenpayCgiCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::UseCase> {
    struct UseCase *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidBinaryI32Callback> {
    struct VoidBinaryI32Callback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidBoolCallback> {
    struct VoidBoolCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidBoolI32Callback> {
    struct VoidBoolI32Callback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidBoolOptionCallback> {
    struct VoidBoolOptionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidBoolStringCallback> {
    struct VoidBoolStringCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidBoolStringI32StringCallback> {
    struct VoidBoolStringI32StringCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidCallback> {
    struct VoidCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidF32F32BoolCallback> {
    struct VoidF32F32BoolCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidI64Callback> {
    struct VoidI64Callback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidITransmitKvDataCallback> {
    struct VoidITransmitKvDataCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidITransmitKvDataNoticeItemCallback> {
    struct VoidITransmitKvDataNoticeItemCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidKRectCallback> {
    struct VoidKRectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidListCallback> {
    struct VoidListCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidStringBinaryCallback> {
    struct VoidStringBinaryCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidStringBoolCallback> {
    struct VoidStringBoolCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidStringCallback> {
    struct VoidStringCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidStringStringBinaryCallback> {
    struct VoidStringStringBinaryCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kinda::VoidStringStringCallback> {
    struct VoidStringStringCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::live::TXLiveBaseObserverImpl> {
    struct TXLiveBaseObserverImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::live::TXLivePlayerObserverImpl> {
    struct TXLivePlayerObserverImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::live::TXLivePushObserverImpl> {
    struct TXLivePushObserverImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::live::V2TXLivePlayerObserverImpl> {
    struct V2TXLivePlayerObserverImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::live::V2TXLivePusherObserverImpl> {
    struct V2TXLivePusherObserverImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::manager::AudioEffectManager> {
    struct AudioEffectManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<liteav::manager::BeautyManagerProxy> {
    struct BeautyManagerProxy *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<liteav::replayKit::AudioTypeHeader> {
    struct AudioTypeHeader *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<liteav::trtc::TRTCPipelineClient> {
    struct TRTCPipelineClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::video::RPSFramerateCallback> {
    struct RPSFramerateCallback *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<liteav::video::TXCVideoRpsFramerateCallback> {
    struct TXCVideoRpsFramerateCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<liteav::video::VideoConsumer::Client> {
    struct Client *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<liteav::video::VideoProducer::Client> {
    struct Client *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<liteav::video::VideoStats> {
    struct VideoStats *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mars::cdn::Get3rdDnsCallback> {
    struct Get3rdDnsCallback *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<mars::cdn::SNSVideoProfile> {
    struct SNSVideoProfile *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mars::cdn::TaskCallback> {
    struct TaskCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mars::cdn::VideoInfo> {
    struct VideoInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<pag::PAGFilter> {
    struct PAGFilter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<pag::PAGImage> {
    struct PAGImage *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<pag::PAGLayer> {
    struct PAGLayer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<pag::PAGSurface> {
    struct PAGSurface *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<skyline::PageConfig> {
    struct PageConfig *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::atomic<int>> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::vector<vm_region_info>> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tp_utils::TPAudioAttributes> {
    struct TPAudioAttributes *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<unit_rc::BaseRC> {
    struct BaseRC *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<unsigned char> {
    char *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<unsigned int> {
    unsigned int *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<vlog::EffectManager> {
    struct EffectManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vlog::VLogDirector> {
    struct VLogDirector *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<vlog::VLogEffect> {
    struct VLogEffect *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<wechat::RerankStrategy> {
    struct RerankStrategy *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<wesvg::RenderElement> {
    struct RenderElement *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<wesvg::RenderModel> {
    struct RenderModel *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<wevision::HardwareBuffer> {
    struct HardwareBuffer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<wevision::WeImage<unsigned char>::Imp> {
    struct Imp *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<wevision::XImageFeat> {
    struct XImageFeat *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<wevision::XOneshotDet> {
    struct XOneshotDet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<wxvoipsdk::ILinkPusherAudioDataCallback> {
    struct ILinkPusherAudioDataCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<wxvoipsdk::TRTCAudioEffectCallback> {
    struct TRTCAudioEffectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<xnet::InferenceSession> {
    struct InferenceSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<xnet::Status> {
    struct Status *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sk_sp<GrDirectContext> {
    struct GrDirectContext *fPtr;
};

struct sk_sp<SkData> {
    struct SkData *_field1;
};

struct sk_sp<SkImage> {
    struct SkImage *fPtr;
};

struct sk_sp<SkSurface> {
    struct SkSurface *fPtr;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stCmd {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct stEntryRow {
    int _field1;
    Class _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    id _field9;
    id _field10;
    id _field11;
    id _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    _Bool _field15;
    id _field16;
    _Bool _field17;
};

struct stSvrCtrlNewS2P_OUT {
    unsigned short iKbps;
    unsigned char cFps;
    unsigned char cIPeriod;
    unsigned char cRSLevel;
    unsigned char cQPmin;
    unsigned char cQPmax;
    unsigned char cHPPMaxLyr;
    unsigned char cSwitch;
    unsigned char cResolution;
    unsigned char cRsvd1;
    unsigned char cRsvd2;
    unsigned char cSkipFlag;
    unsigned char cIReqFlag;
};

struct stat {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    struct timespec _field11;
    long long _field12;
    long long _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    long long _field18[2];
};

struct tagAVQualityReportInfo {
    struct tagMultiSendReport _field1[2];
    struct tagMultiRecvReport _field2[2];
    struct tagMultiRecvSubscribeReport _field3[2];
    struct tagScreenSendReport _field4;
    struct tagScreenRecvReport _field5;
    struct tagVHWEngineReport _field6;
    struct tagVCodec2EngineReport _field7;
    struct tagVideoArqSendReport _field8;
    struct tagVideoArqRecvReport _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    unsigned short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    unsigned short _field26;
    unsigned short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    unsigned short _field34;
    unsigned short _field35;
    unsigned short _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    unsigned short _field40;
    unsigned short _field41;
    unsigned short _field42;
    unsigned short _field43;
    unsigned short _field44;
    unsigned short _field45;
    unsigned short _field46;
    unsigned short _field47;
    unsigned short _field48;
    unsigned short _field49;
    unsigned short _field50;
    unsigned short _field51;
    unsigned short _field52;
    unsigned short _field53;
    unsigned short _field54;
    unsigned short _field55;
    unsigned short _field56;
    unsigned short _field57;
    unsigned short _field58;
    unsigned short _field59;
    unsigned short _field60;
    unsigned short _field61;
    unsigned short _field62;
    unsigned short _field63;
    unsigned short _field64;
    unsigned short _field65;
    unsigned short _field66;
    unsigned short _field67;
    unsigned short _field68;
    unsigned short _field69;
    unsigned short _field70;
    unsigned short _field71;
    unsigned short _field72;
    unsigned short _field73;
    unsigned short _field74;
    unsigned short _field75;
    unsigned short _field76;
    unsigned short _field77;
    unsigned short _field78;
    unsigned short _field79;
    unsigned short _field80;
    unsigned short _field81;
    unsigned short _field82;
    unsigned short _field83;
    unsigned short _field84;
    unsigned short _field85;
    unsigned short _field86;
    unsigned short _field87;
    unsigned short _field88;
    unsigned short _field89;
    unsigned short _field90;
    unsigned short _field91;
    unsigned char _field92;
    unsigned char _field93;
    unsigned char _field94;
    unsigned int _field95;
    unsigned int _field96;
    unsigned short _field97;
    unsigned short _field98;
    unsigned short _field99;
    unsigned short _field100;
    unsigned int _field101;
    unsigned int _field102;
    unsigned short _field103;
    unsigned char _field104;
    unsigned char _field105;
    unsigned char _field106;
    unsigned char _field107;
    unsigned char _field108;
    unsigned int _field109;
    unsigned int _field110;
    unsigned char _field111;
    unsigned char _field112;
    unsigned char _field113;
    unsigned char _field114;
    unsigned char _field115;
    unsigned char _field116;
    int _field117;
    int _field118;
    int _field119;
    unsigned int _field120;
    unsigned short _field121;
    unsigned short _field122;
    unsigned short _field123;
    unsigned char _field124;
    unsigned char _field125;
    unsigned int _field126;
    unsigned int _field127;
    unsigned int _field128;
    unsigned int _field129;
    unsigned int _field130;
    unsigned int _field131;
    unsigned int _field132;
    unsigned int _field133;
    unsigned int _field134;
    unsigned int _field135;
    unsigned int _field136;
    unsigned int _field137;
    unsigned int _field138;
    unsigned int _field139;
    unsigned int _field140;
    unsigned int _field141;
    unsigned int _field142;
    unsigned int _field143;
    unsigned int _field144;
    unsigned int _field145;
    unsigned int _field146;
    unsigned int _field147;
    unsigned int _field148;
    unsigned int _field149;
    unsigned int _field150;
    unsigned int _field151;
    unsigned int _field152;
    unsigned int _field153;
    unsigned int _field154;
    unsigned int _field155;
    unsigned int _field156;
    unsigned int _field157;
    unsigned int _field158;
    unsigned int _field159;
    int _field160;
    int _field161;
    int _field162;
    int _field163;
    int _field164;
    unsigned int _field165;
    unsigned int _field166;
    unsigned int _field167;
    unsigned int _field168;
    unsigned char _field169;
    unsigned char _field170;
    unsigned short _field171;
    unsigned short _field172;
    unsigned short _field173;
    unsigned short _field174;
    unsigned short _field175;
    unsigned short _field176;
    unsigned short _field177;
    unsigned short _field178;
    unsigned short _field179;
    unsigned short _field180;
    unsigned char _field181;
    unsigned char _field182;
    unsigned char _field183;
    unsigned char _field184;
    unsigned char _field185;
    unsigned short _field186;
    unsigned short _field187;
    unsigned short _field188;
    unsigned short _field189;
    unsigned short _field190;
    unsigned short _field191;
    unsigned short _field192;
    unsigned short _field193;
    unsigned short _field194;
    unsigned short _field195;
    unsigned short _field196;
    unsigned short _field197;
    unsigned short _field198;
    unsigned short _field199;
    unsigned short _field200;
    unsigned short _field201;
    unsigned short _field202;
    unsigned short _field203;
    unsigned short _field204;
    unsigned short _field205;
    unsigned short _field206;
    unsigned short _field207;
    unsigned short _field208;
    unsigned short _field209;
    unsigned short _field210;
    unsigned short _field211;
    unsigned short _field212;
    unsigned short _field213;
    unsigned short _field214;
    unsigned short _field215;
    unsigned short _field216;
    unsigned short _field217;
    unsigned short _field218;
    unsigned short _field219;
    unsigned short _field220;
    unsigned short _field221;
    unsigned short _field222;
    unsigned short _field223;
    unsigned short _field224;
    unsigned short _field225;
    unsigned int _field226;
    unsigned int _field227;
    unsigned int _field228;
    unsigned int _field229;
    unsigned int _field230;
    unsigned int _field231;
    unsigned int _field232;
    unsigned int _field233;
    unsigned int _field234;
    unsigned int _field235;
    unsigned int _field236;
    unsigned int _field237;
    unsigned int _field238;
    unsigned int _field239;
    unsigned int _field240;
    unsigned int _field241;
    unsigned int _field242;
    unsigned int _field243;
    unsigned int _field244;
    unsigned int _field245;
    unsigned char _field246;
    unsigned char _field247;
    unsigned char _field248;
    unsigned char _field249;
    unsigned char _field250;
    int _field251;
    unsigned int _field252;
    unsigned int _field253;
    unsigned int _field254;
    int _field255;
    unsigned short _field256;
    unsigned short _field257;
    unsigned short _field258;
    unsigned short _field259;
    unsigned short _field260;
    unsigned short _field261;
    unsigned short _field262;
    unsigned short _field263;
    unsigned short _field264;
    unsigned short _field265;
    unsigned short _field266;
    unsigned short _field267;
    unsigned short _field268;
    unsigned short _field269;
    unsigned short _field270;
    unsigned short _field271;
    unsigned int _field272;
    unsigned int _field273;
    unsigned int _field274;
    unsigned short _field275;
    unsigned short _field276;
    unsigned short _field277;
    unsigned short _field278;
    unsigned short _field279;
    unsigned short _field280;
    unsigned short _field281;
    unsigned short _field282;
    unsigned int _field283;
    unsigned int _field284;
    unsigned int _field285;
    unsigned int _field286;
    unsigned int _field287;
    unsigned int _field288;
    unsigned int _field289;
    unsigned int _field290;
    unsigned int _field291;
    unsigned int _field292;
    unsigned int _field293;
    unsigned int _field294;
    unsigned int _field295;
    unsigned int _field296;
    unsigned int _field297;
    unsigned int _field298;
    unsigned int _field299;
    unsigned int _field300;
    unsigned int _field301;
    unsigned int _field302;
    unsigned int _field303;
    unsigned int _field304;
    unsigned int _field305;
    unsigned int _field306;
    unsigned int _field307;
    unsigned int _field308;
    unsigned int _field309;
    unsigned int _field310;
    unsigned int _field311;
    unsigned int _field312;
    unsigned int _field313;
    unsigned int _field314;
    unsigned int _field315;
    int _field316;
    int _field317;
    unsigned int _field318;
    unsigned int _field319;
    int _field320;
    int _field321;
    int _field322;
    int _field323;
    int _field324;
    int _field325;
    int _field326;
    int _field327;
    int _field328;
    int _field329;
    int _field330;
    int _field331;
    unsigned short _field332;
    unsigned short _field333;
    unsigned short _field334;
    unsigned short _field335;
    unsigned short _field336;
    unsigned short _field337;
    unsigned short _field338;
    unsigned short _field339;
    unsigned char _field340;
    unsigned char _field341;
    unsigned char _field342;
    unsigned char _field343;
    unsigned char _field344;
    unsigned char _field345;
    int _field346;
    unsigned int _field347;
    unsigned int _field348;
    unsigned int _field349;
    unsigned int _field350;
    unsigned int _field351;
    unsigned int _field352;
    unsigned int _field353;
    unsigned int _field354;
    unsigned int _field355;
    unsigned int _field356;
    unsigned int _field357;
    unsigned int _field358;
    unsigned int _field359;
    unsigned int _field360;
    int _field361;
    int _field362;
    int _field363;
    int _field364;
    int _field365;
    int _field366;
    int _field367;
    int _field368;
    int _field369;
    int _field370;
    unsigned int _field371;
    unsigned int _field372;
    unsigned int _field373;
    unsigned int _field374;
    unsigned int _field375;
    unsigned int _field376;
    unsigned int _field377;
    unsigned int _field378;
    unsigned int _field379;
    unsigned int _field380;
    unsigned int _field381;
    unsigned int _field382;
    unsigned int _field383;
    unsigned int _field384;
    unsigned int _field385;
    unsigned int _field386;
    unsigned int _field387;
    unsigned int _field388;
    unsigned int _field389;
    unsigned int _field390;
    unsigned int _field391;
    unsigned int _field392;
    unsigned int _field393;
    unsigned int _field394;
    unsigned int _field395;
    unsigned int _field396;
    unsigned int _field397;
    unsigned int _field398;
    unsigned int _field399;
    unsigned int _field400;
    unsigned int _field401;
    unsigned int _field402;
    unsigned int _field403;
    unsigned int _field404;
    unsigned int _field405;
    unsigned int _field406;
    unsigned int _field407;
    unsigned int _field408;
    unsigned int _field409;
    unsigned int _field410;
    unsigned int _field411;
    unsigned int _field412;
    unsigned int _field413;
    unsigned int _field414;
    unsigned int _field415;
    unsigned int _field416;
    unsigned int _field417;
    unsigned int _field418;
    unsigned int _field419;
    unsigned int _field420;
    unsigned int _field421;
    unsigned int _field422;
    unsigned int _field423;
    unsigned int _field424;
    unsigned int _field425;
    unsigned int _field426;
    unsigned int _field427;
    unsigned int _field428;
    unsigned short _field429;
    unsigned short _field430;
    unsigned int _field431;
    unsigned int _field432;
    unsigned int _field433;
    unsigned int _field434;
    unsigned int _field435;
    unsigned int _field436;
    unsigned int _field437;
    unsigned int _field438;
    long long _field439;
    unsigned short _field440;
    unsigned int _field441;
    int _field442;
    int _field443;
    int _field444;
    int _field445;
    unsigned int _field446;
    unsigned int _field447;
    unsigned int _field448;
    unsigned int _field449;
    unsigned int _field450;
    unsigned int _field451;
    unsigned int _field452;
    unsigned int _field453;
    unsigned int _field454;
    int _field455;
    int _field456;
    unsigned short _field457;
    unsigned short _field458;
    unsigned short _field459;
    unsigned int _field460;
    unsigned int _field461;
    unsigned int _field462;
    unsigned int _field463;
    int _field464;
    int _field465;
    unsigned int _field466;
    unsigned int _field467;
    unsigned int _field468;
    char _field469[256];
    unsigned int _field470;
    unsigned int _field471;
    unsigned int _field472;
    unsigned int _field473;
    unsigned int _field474;
    unsigned int _field475;
    unsigned int _field476;
    unsigned int _field477;
    unsigned int _field478;
    unsigned int _field479;
    unsigned int _field480;
    unsigned int _field481;
    unsigned int _field482;
    unsigned short _field483;
    unsigned int _field484;
    unsigned int _field485;
    unsigned int _field486;
    unsigned int _field487;
    unsigned int _field488;
    unsigned int _field489;
    struct tagVCodec2HWEngineReport _field490;
    unsigned int _field491;
    unsigned int _field492;
    unsigned int _field493;
    unsigned int _field494;
    unsigned int _field495;
    unsigned int _field496;
    unsigned int _field497;
    unsigned int _field498;
    unsigned int _field499;
    unsigned int _field500;
    unsigned int _field501;
    unsigned int _field502;
    unsigned int _field503;
    unsigned int _field504;
    unsigned int _field505;
    unsigned int _field506;
    unsigned int _field507;
    unsigned int _field508;
    unsigned int _field509;
    unsigned int _field510;
    unsigned int _field511;
    unsigned int _field512;
    unsigned int _field513;
    unsigned int _field514;
    unsigned int _field515;
    unsigned int _field516;
    unsigned int _field517;
    unsigned int _field518;
    unsigned int _field519;
    unsigned int _field520;
    unsigned int _field521;
    unsigned int _field522;
    unsigned int _field523;
    unsigned int _field524;
    unsigned int _field525;
    unsigned int _field526;
    unsigned int _field527;
    unsigned int _field528;
    unsigned int _field529;
    unsigned int _field530;
    unsigned int _field531;
    unsigned int _field532;
    unsigned int _field533;
    unsigned int _field534;
    unsigned int _field535;
    unsigned int _field536;
    unsigned int _field537;
    unsigned int _field538;
    unsigned int _field539;
    unsigned int _field540;
    unsigned int _field541;
    unsigned int _field542;
    unsigned int _field543;
    unsigned int _field544;
    unsigned int _field545;
    unsigned int _field546;
    unsigned int _field547;
    unsigned int _field548;
    unsigned int _field549;
    unsigned int _field550;
    unsigned int _field551;
    unsigned int _field552;
    unsigned int _field553;
    unsigned int _field554;
    unsigned int _field555;
    unsigned int _field556;
    unsigned int _field557;
    unsigned int _field558;
    unsigned int _field559;
    unsigned int _field560;
    unsigned int _field561;
    unsigned int _field562;
    unsigned int _field563;
    unsigned int _field564;
    unsigned int _field565;
    unsigned int _field566;
    unsigned int _field567;
    unsigned int _field568;
    unsigned int _field569;
    unsigned int _field570;
    unsigned int _field571;
    unsigned int _field572;
    unsigned int _field573;
    unsigned int _field574;
    unsigned int _field575;
    unsigned int _field576;
    unsigned int _field577;
    unsigned int _field578;
    unsigned int _field579;
    unsigned int _field580;
    unsigned int _field581;
    unsigned int _field582;
    unsigned int _field583;
    unsigned int _field584;
    unsigned int _field585;
    unsigned int _field586;
    unsigned int _field587;
    unsigned int _field588;
    unsigned int _field589;
    unsigned int _field590;
    unsigned int _field591;
    unsigned int _field592;
    unsigned int _field593;
    unsigned int _field594;
    unsigned int _field595;
    unsigned int _field596;
    unsigned int _field597;
    unsigned int _field598;
    unsigned short _field599;
    unsigned short _field600;
    unsigned short _field601;
    unsigned short _field602;
    unsigned short _field603;
    unsigned short _field604;
    unsigned short _field605;
    unsigned short _field606;
    unsigned short _field607;
    unsigned short _field608;
    unsigned short _field609;
    unsigned short _field610;
    unsigned short _field611;
    unsigned short _field612;
    unsigned short _field613;
    unsigned short _field614;
    unsigned int _field615;
    unsigned int _field616;
    unsigned int _field617;
    unsigned int _field618;
    unsigned int _field619;
    unsigned int _field620;
    unsigned int _field621;
    unsigned int _field622;
    unsigned int _field623;
    unsigned int _field624;
    unsigned int _field625;
    unsigned int _field626;
    unsigned int _field627;
    unsigned int _field628;
    unsigned int _field629;
    unsigned int _field630;
    unsigned int _field631;
    unsigned int _field632;
    unsigned int _field633;
    unsigned int _field634;
    unsigned int _field635;
    unsigned int _field636;
    unsigned int _field637;
    unsigned int _field638;
    unsigned int _field639;
    unsigned int _field640;
    unsigned int _field641;
    unsigned int _field642;
    unsigned int _field643;
    unsigned int _field644;
    unsigned int _field645;
    unsigned short _field646;
    unsigned short _field647;
    unsigned short _field648;
    unsigned short _field649;
    unsigned short _field650;
    unsigned short _field651;
    unsigned short _field652;
    unsigned short _field653;
    unsigned short _field654;
    unsigned short _field655;
    unsigned short _field656;
    unsigned int _field657;
    unsigned short _field658[256];
    unsigned short _field659[256];
    unsigned int _field660;
    unsigned int _field661;
    unsigned int _field662;
    unsigned int _field663;
    unsigned int _field664;
    unsigned int _field665;
    int _field666;
    int _field667;
    int _field668;
    int _field669;
    int _field670;
    int _field671;
    unsigned int _field672;
    unsigned int _field673;
    unsigned int _field674;
    unsigned int _field675;
    unsigned int _field676;
    unsigned int _field677;
    unsigned int _field678;
    unsigned int _field679;
    unsigned int _field680;
    unsigned int _field681;
    unsigned int _field682;
    unsigned int _field683;
    unsigned int _field684;
    unsigned int _field685;
    unsigned int _field686;
    unsigned int _field687;
    unsigned int _field688;
    unsigned int _field689;
    unsigned int _field690;
    unsigned int _field691;
    unsigned int _field692;
    unsigned int _field693;
    unsigned int _field694;
    unsigned int _field695;
    unsigned int _field696;
    unsigned int _field697;
    unsigned int _field698;
    unsigned int _field699;
    unsigned int _field700;
    unsigned int _field701;
    unsigned int _field702;
    unsigned int _field703;
    unsigned int _field704;
    unsigned int _field705;
    unsigned int _field706;
    unsigned int _field707;
    unsigned int _field708;
    unsigned int _field709;
    char _field710[256];
    unsigned int _field711;
    unsigned int _field712;
    unsigned int _field713;
    unsigned int _field714;
    unsigned int _field715;
    unsigned int _field716;
    unsigned int _field717;
    unsigned int _field718;
    unsigned int _field719;
    unsigned int _field720;
    unsigned int _field721;
    unsigned int _field722;
    unsigned int _field723;
    unsigned int _field724;
    unsigned int _field725;
    unsigned int _field726;
    unsigned int _field727;
    unsigned int _field728;
    unsigned int _field729;
    unsigned int _field730;
    unsigned int _field731;
    unsigned int _field732;
    unsigned int _field733;
    unsigned int _field734;
    unsigned int _field735;
    unsigned int _field736;
    unsigned int _field737;
    unsigned int _field738;
    unsigned int _field739;
    unsigned int _field740;
    unsigned int _field741;
    unsigned int _field742;
    unsigned int _field743;
    unsigned int _field744;
    unsigned int _field745;
    unsigned int _field746;
    unsigned int _field747;
    unsigned int _field748;
    unsigned int _field749;
    unsigned int _field750;
    unsigned int _field751;
    unsigned int _field752;
    unsigned int _field753;
    unsigned int _field754;
    unsigned int _field755;
    unsigned int _field756;
    unsigned int _field757;
    unsigned int _field758;
    unsigned int _field759;
    unsigned int _field760;
    unsigned int _field761;
    unsigned int _field762;
    unsigned int _field763;
    unsigned int _field764;
    unsigned int _field765;
    unsigned int _field766;
    unsigned int _field767;
    unsigned int _field768;
    unsigned int _field769;
    unsigned int _field770;
    unsigned int _field771;
    unsigned int _field772;
    unsigned int _field773;
    unsigned int _field774;
    unsigned int _field775;
    unsigned int _field776;
    unsigned int _field777;
    unsigned int _field778;
    unsigned int _field779;
    unsigned int _field780;
    unsigned int _field781;
    unsigned int _field782;
    unsigned int _field783;
    unsigned int _field784;
    unsigned int _field785;
    unsigned int _field786;
    unsigned int _field787;
    unsigned int _field788;
    unsigned int _field789;
    unsigned int _field790;
    unsigned int _field791;
    unsigned int _field792;
    unsigned int _field793;
    unsigned int _field794;
    int _field795;
    unsigned int _field796;
    unsigned int _field797;
    unsigned int _field798;
    int _field799;
    int _field800;
    int _field801;
    int _field802;
    int _field803;
    unsigned int _field804;
    unsigned int _field805;
    unsigned int _field806;
    unsigned int _field807;
    unsigned int _field808;
    unsigned int _field809;
    unsigned int _field810;
    unsigned int _field811;
    unsigned int _field812;
    unsigned int _field813;
    unsigned int _field814;
    unsigned int _field815;
    unsigned int _field816;
    unsigned int _field817;
    unsigned int _field818;
    unsigned int _field819;
    unsigned int _field820;
    unsigned int _field821;
    unsigned int _field822;
    unsigned int _field823;
    unsigned int _field824;
    unsigned int _field825;
    unsigned int _field826;
    unsigned int _field827;
    unsigned int _field828;
    unsigned int _field829;
    unsigned int _field830;
    unsigned int _field831;
    unsigned int _field832;
    unsigned int _field833;
    unsigned int _field834;
    unsigned int _field835;
    unsigned int _field836;
    unsigned int _field837;
    int _field838;
    int _field839;
    int _field840;
    unsigned int _field841;
    unsigned int _field842;
    unsigned int _field843;
    unsigned int _field844;
    unsigned int _field845;
    unsigned int _field846;
    unsigned int _field847;
    unsigned int _field848;
    unsigned int _field849;
    unsigned int _field850;
    unsigned int _field851;
    int _field852;
    char _field853[256];
    char _field854[256];
    int _field855;
    int _field856;
    unsigned int _field857;
    unsigned int _field858;
    unsigned int _field859;
    unsigned int _field860;
    unsigned int _field861;
    unsigned int _field862;
    unsigned int _field863;
    unsigned int _field864;
    unsigned int _field865;
    unsigned int _field866;
    unsigned int _field867;
};

struct tagMultiRecvReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned int _field55;
    unsigned int _field56;
    unsigned int _field57;
    unsigned int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    unsigned int _field63;
    unsigned int _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
    unsigned int _field68;
    unsigned int _field69;
    unsigned int _field70;
    unsigned int _field71;
    unsigned int _field72;
    unsigned int _field73;
    unsigned int _field74;
    unsigned int _field75;
    unsigned int _field76;
    unsigned int _field77;
    unsigned int _field78;
    unsigned int _field79;
    unsigned int _field80;
    unsigned int _field81;
    unsigned int _field82;
    unsigned int _field83;
    unsigned int _field84;
    unsigned int _field85;
    unsigned int _field86;
    unsigned int _field87;
    unsigned int _field88;
    unsigned int _field89;
    unsigned int _field90;
    unsigned int _field91;
    unsigned int _field92;
    unsigned int _field93;
    unsigned int _field94;
    unsigned int _field95;
    unsigned int _field96;
    unsigned int _field97;
    unsigned int _field98;
    struct tagVideoArqRecvReport _field99;
    unsigned int _field100;
    unsigned int _field101;
    unsigned int _field102;
};

struct tagMultiRecvSubscribeReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
};

struct tagMultiSendReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    unsigned int _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    unsigned int _field55;
    unsigned int _field56;
    unsigned int _field57;
    unsigned int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    unsigned int _field62;
    unsigned int _field63;
    unsigned int _field64;
    unsigned int _field65;
    unsigned int _field66;
    unsigned int _field67;
    unsigned int _field68;
    unsigned int _field69;
    unsigned int _field70;
    struct tagVideoArqSendReport _field71;
    unsigned int _field72;
    unsigned int _field73;
    unsigned int _field74;
};

struct tagScreenRecvReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tagScreenSendReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct tagVCodec2EngineReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
};

struct tagVCodec2HWEngineReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
};

struct tagVHWEngineReport {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned char _field6;
    unsigned char _field7;
};

struct tagVideoArqRecvReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct tagVideoArqSendReport {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct tagVoipCallInfo {
    NSString *callerName;
    NSString *calleeName;
    int roomType;
    unsigned long long roomId;
    long long roomkey;
    long long timeStamp;
};

struct thread {
    struct _opaque_pthread_t *__t_;
};

struct timespec {
    long long _field1;
    long long _field2;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tuple<bool, bool, CGPoint> {
    struct __tuple_impl<std::__tuple_indices<0, 1, 2>, bool, bool, CGPoint> {
        _Bool _field1;
        _Bool _field2;
        struct CGPoint _field3;
    } _field1;
};

struct tuple<bool, double> {
    struct __tuple_impl<std::__tuple_indices<0, 1>, bool, double> {
        _Bool _field1;
        double _field2;
    } _field1;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<WeEffect::TrackerManager::TrackerManagerImpl, std::default_delete<WeEffect::TrackerManager::TrackerManagerImpl>> {
    struct __compressed_pair<WeEffect::TrackerManager::TrackerManagerImpl *, std::default_delete<WeEffect::TrackerManager::TrackerManagerImpl>> {
        struct TrackerManagerImpl *__value_;
    } __ptr_;
};

struct unique_ptr<WeEffect::X3DEffect, std::default_delete<WeEffect::X3DEffect>> {
    struct __compressed_pair<WeEffect::X3DEffect *, std::default_delete<WeEffect::X3DEffect>> {
        struct X3DEffect *__value_;
    } __ptr_;
};

struct unique_ptr<XPathOpaque, std::default_delete<XPathOpaque>> {
    struct __compressed_pair<XPathOpaque *, std::default_delete<XPathOpaque>> {
        struct XPathOpaque *__value_;
    } __ptr_;
};

struct unique_ptr<flutter::ConnectionCollection, std::default_delete<flutter::ConnectionCollection>> {
    struct __compressed_pair<flutter::ConnectionCollection *, std::default_delete<flutter::ConnectionCollection>> {
        struct ConnectionCollection *__value_;
    } __ptr_;
};

struct unique_ptr<flutter::IsolateConfiguration, std::default_delete<flutter::IsolateConfiguration>> {
    struct __compressed_pair<flutter::IsolateConfiguration *, std::default_delete<flutter::IsolateConfiguration>> {
        struct IsolateConfiguration *_field1;
    } _field1;
};

struct unique_ptr<flutter::PointerDataPacket, std::default_delete<flutter::PointerDataPacket>> {
    struct __compressed_pair<flutter::PointerDataPacket *, std::default_delete<flutter::PointerDataPacket>> {
        struct PointerDataPacket *_field1;
    } _field1;
};

struct unique_ptr<flutter::Shell, std::default_delete<flutter::Shell>> {
    struct __compressed_pair<flutter::Shell *, std::default_delete<flutter::Shell>> {
        struct Shell *__value_;
    } __ptr_;
};

struct unique_ptr<fml::Thread, std::default_delete<fml::Thread>> {
    struct __compressed_pair<fml::Thread *, std::default_delete<fml::Thread>> {
        struct Thread *_field1;
    } _field1;
};

struct unique_ptr<fml::WeakPtrFactory<FlutterEngine>, std::default_delete<fml::WeakPtrFactory<FlutterEngine>>> {
    struct __compressed_pair<fml::WeakPtrFactory<FlutterEngine>*, std::default_delete<fml::WeakPtrFactory<FlutterEngine>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<fml::WeakPtrFactory<FlutterKeyboardManager>, std::default_delete<fml::WeakPtrFactory<FlutterKeyboardManager>>> {
    struct __compressed_pair<fml::WeakPtrFactory<FlutterKeyboardManager>*, std::default_delete<fml::WeakPtrFactory<FlutterKeyboardManager>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<fml::WeakPtrFactory<FlutterViewController>, std::default_delete<fml::WeakPtrFactory<FlutterViewController>>> {
    struct __compressed_pair<fml::WeakPtrFactory<FlutterViewController>*, std::default_delete<fml::WeakPtrFactory<FlutterViewController>>> {
        void *__value_;
    } __ptr_;
};

struct unique_ptr<lite_base::Thread, std::default_delete<lite_base::Thread>> {
    struct __compressed_pair<lite_base::Thread *, std::default_delete<lite_base::Thread>> {
        struct Thread *__value_;
    } __ptr_;
};

struct unique_ptr<liteav::CustomDecodeCallback, std::default_delete<liteav::CustomDecodeCallback>> {
    struct __compressed_pair<liteav::CustomDecodeCallback *, std::default_delete<liteav::CustomDecodeCallback>> {
        struct CustomDecodeCallback *__value_;
    } __ptr_;
};

struct unique_ptr<liteav::Event4XReporter, std::default_delete<liteav::Event4XReporter>> {
    struct __compressed_pair<liteav::Event4XReporter *, std::default_delete<liteav::Event4XReporter>> {
        struct Event4XReporter *__value_;
    } __ptr_;
};

struct unique_ptr<liteav::HttpClient::Request, std::default_delete<liteav::HttpClient::Request>> {
    struct __compressed_pair<liteav::HttpClient::Request *, std::default_delete<liteav::HttpClient::Request>> {
        struct Request *_field1;
    } _field1;
};

struct unique_ptr<liteav::audio::AudioFrame, std::__1::default_delete<liteav::audio::AudioFrame>> {
    struct __compressed_pair<liteav::audio::AudioFrame *, std::__1::default_delete<liteav::audio::AudioFrame>> {
        struct AudioFrame *__value_;
    } __ptr_;
};

struct unique_ptr<liteav::audio::AudioFrame, std::default_delete<liteav::audio::AudioFrame>> {
    struct __compressed_pair<liteav::audio::AudioFrame *, std::default_delete<liteav::audio::AudioFrame>> {
        struct AudioFrame *_field1;
    } _field1;
};

struct unique_ptr<liteav::audio::SilkResamplerWrapper, std::__1::default_delete<liteav::audio::SilkResamplerWrapper>> {
    struct __compressed_pair<liteav::audio::SilkResamplerWrapper *, std::__1::default_delete<liteav::audio::SilkResamplerWrapper>> {
        struct SilkResamplerWrapper *__value_;
    } __ptr_;
};

struct unique_ptr<liteav::live::TXLogCallbackWrapper, std::default_delete<liteav::live::TXLogCallbackWrapper>> {
    struct __compressed_pair<liteav::live::TXLogCallbackWrapper *, std::default_delete<liteav::live::TXLogCallbackWrapper>> {
        struct TXLogCallbackWrapper *__value_;
    } __ptr_;
};

struct unique_ptr<liteav::live::TXNtpServiceCallbackImpl, std::default_delete<liteav::live::TXNtpServiceCallbackImpl>> {
    struct __compressed_pair<liteav::live::TXNtpServiceCallbackImpl *, std::default_delete<liteav::live::TXNtpServiceCallbackImpl>> {
        struct TXNtpServiceCallbackImpl *__value_;
    } __ptr_;
};

struct unique_ptr<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>>> {
    struct __compressed_pair<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>*, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>>> {
        void *_field1;
    } _field1;
};

struct unique_ptr<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>>> {
    struct __compressed_pair<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>*, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>>> {
        void *_field1;
    } _field1;
};

struct unique_ptr<liteav::video::VideoFrame, std::default_delete<liteav::video::VideoFrame>> {
    struct __compressed_pair<liteav::video::VideoFrame *, std::default_delete<liteav::video::VideoFrame>> {
        struct VideoFrame *__value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<wevision::XChatCls::Impl, std::default_delete<wevision::XChatCls::Impl>> {
    struct __compressed_pair<wevision::XChatCls::Impl *, std::default_delete<wevision::XChatCls::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<wevision::XFaceCluster::Impl, std::default_delete<wevision::XFaceCluster::Impl>> {
    struct __compressed_pair<wevision::XFaceCluster::Impl *, std::default_delete<wevision::XFaceCluster::Impl>> {
        struct Impl *__value_;
    } __ptr_;
};

struct unique_ptr<wxvoipsdk::AudioFrame, std::default_delete<wxvoipsdk::AudioFrame>> {
    struct __compressed_pair<wxvoipsdk::AudioFrame *, std::default_delete<wxvoipsdk::AudioFrame>> {
        struct AudioFrame *__value_;
    } __ptr_;
};

struct unique_ptr<wxvoipsdk::audio::AudioFrameRingBuffer, std::default_delete<wxvoipsdk::audio::AudioFrameRingBuffer>> {
    struct __compressed_pair<wxvoipsdk::audio::AudioFrameRingBuffer *, std::default_delete<wxvoipsdk::audio::AudioFrameRingBuffer>> {
        struct AudioFrameRingBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<wxvoipsdk::audio::HardwareCallbackImpl, std::default_delete<wxvoipsdk::audio::HardwareCallbackImpl>> {
    struct __compressed_pair<wxvoipsdk::audio::HardwareCallbackImpl *, std::default_delete<wxvoipsdk::audio::HardwareCallbackImpl>> {
        struct HardwareCallbackImpl *__value_;
    } __ptr_;
};

struct unique_ptr<wxvoipsdk::audio::HardwareManager, std::default_delete<wxvoipsdk::audio::HardwareManager>> {
    struct __compressed_pair<wxvoipsdk::audio::HardwareManager *, std::default_delete<wxvoipsdk::audio::HardwareManager>> {
        struct HardwareManager *__value_;
    } __ptr_;
};

struct unique_ptr<wxvoipsdk::audio::SilkResampler, std::default_delete<wxvoipsdk::audio::SilkResampler>> {
    struct __compressed_pair<wxvoipsdk::audio::SilkResampler *, std::default_delete<wxvoipsdk::audio::SilkResampler>> {
        struct SilkResampler *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::ClarityFilter, std::default_delete<xeffect::ClarityFilter>> {
    struct __compressed_pair<xeffect::ClarityFilter *, std::default_delete<xeffect::ClarityFilter>> {
        struct ClarityFilter *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::DenosingFragment, std::default_delete<xeffect::DenosingFragment>> {
    struct __compressed_pair<xeffect::DenosingFragment *, std::default_delete<xeffect::DenosingFragment>> {
        struct DenosingFragment *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::ImageCropFilter, std::default_delete<xeffect::ImageCropFilter>> {
    struct __compressed_pair<xeffect::ImageCropFilter *, std::default_delete<xeffect::ImageCropFilter>> {
        struct ImageCropFilter *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::ImageView, std::default_delete<xeffect::ImageView>> {
    struct __compressed_pair<xeffect::ImageView *, std::default_delete<xeffect::ImageView>> {
        struct ImageView *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::RenderGraph, std::default_delete<xeffect::RenderGraph>> {
    struct __compressed_pair<xeffect::RenderGraph *, std::default_delete<xeffect::RenderGraph>> {
        struct RenderGraph *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::SharpenFilter, std::default_delete<xeffect::SharpenFilter>> {
    struct __compressed_pair<xeffect::SharpenFilter *, std::default_delete<xeffect::SharpenFilter>> {
        struct SharpenFilter *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::XMMGPUSpatiotemporalDenosing, std::default_delete<xeffect::XMMGPUSpatiotemporalDenosing>> {
    struct __compressed_pair<xeffect::XMMGPUSpatiotemporalDenosing *, std::default_delete<xeffect::XMMGPUSpatiotemporalDenosing>> {
        struct XMMGPUSpatiotemporalDenosing *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::XRgba2UVFilter, std::default_delete<xeffect::XRgba2UVFilter>> {
    struct __compressed_pair<xeffect::XRgba2UVFilter *, std::default_delete<xeffect::XRgba2UVFilter>> {
        struct XRgba2UVFilter *__value_;
    } __ptr_;
};

struct unique_ptr<xeffect::XRgba2YFilter, std::default_delete<xeffect::XRgba2YFilter>> {
    struct __compressed_pair<xeffect::XRgba2YFilter *, std::default_delete<xeffect::XRgba2YFilter>> {
        struct XRgba2YFilter *__value_;
    } __ptr_;
};

struct unordered_map<NSString *, id, KeyHasher, KeyEqualer, std::allocator<std::pair<NSString *const, id>>> {
    struct __hash_table<std::__hash_value_type<NSString *, id>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, id>, KeyHasher, KeyEqualer, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, id>, KeyEqualer, KeyHasher, true>, std::allocator<std::__hash_value_type<NSString *, id>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, id>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, id>, KeyHasher, KeyEqualer, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, id>, KeyEqualer, KeyHasher, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<SEL *, NSMethodSignature *, std::hash<SEL *>, std::equal_to<SEL *>, std::allocator<std::pair<SEL *const, NSMethodSignature *>>> {
    struct __hash_table<std::__hash_value_type<SEL *, NSMethodSignature *>, std::__unordered_map_hasher<SEL *, std::__hash_value_type<SEL *, NSMethodSignature *>, std::hash<SEL *>, std::equal_to<SEL *>, true>, std::__unordered_map_equal<SEL *, std::__hash_value_type<SEL *, NSMethodSignature *>, std::equal_to<SEL *>, std::hash<SEL *>, true>, std::allocator<std::__hash_value_type<SEL *, NSMethodSignature *>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<SEL *, NSMethodSignature *>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<SEL *, std::__hash_value_type<SEL *, NSMethodSignature *>, std::hash<SEL *>, std::equal_to<SEL *>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<SEL *, std::__hash_value_type<SEL *, NSMethodSignature *>, std::equal_to<SEL *>, std::hash<SEL *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<SnsUserBehaviourInfoPageType, unsigned int, std::hash<SnsUserBehaviourInfoPageType>, std::equal_to<SnsUserBehaviourInfoPageType>, std::allocator<std::pair<const SnsUserBehaviourInfoPageType, unsigned int>>> {
    struct __hash_table<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, std::__unordered_map_hasher<SnsUserBehaviourInfoPageType, std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, std::hash<SnsUserBehaviourInfoPageType>, std::equal_to<SnsUserBehaviourInfoPageType>, true>, std::__unordered_map_equal<SnsUserBehaviourInfoPageType, std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, std::equal_to<SnsUserBehaviourInfoPageType>, std::hash<SnsUserBehaviourInfoPageType>, true>, std::allocator<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<SnsUserBehaviourInfoPageType, std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, std::hash<SnsUserBehaviourInfoPageType>, std::equal_to<SnsUserBehaviourInfoPageType>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<SnsUserBehaviourInfoPageType, std::__hash_value_type<SnsUserBehaviourInfoPageType, unsigned int>, std::equal_to<SnsUserBehaviourInfoPageType>, std::hash<SnsUserBehaviourInfoPageType>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<WCAppLaunchTimeEvent, unsigned long long, std::hash<WCAppLaunchTimeEvent>, std::equal_to<WCAppLaunchTimeEvent>, std::allocator<std::pair<const WCAppLaunchTimeEvent, unsigned long long>>> {
    struct __hash_table<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, std::__unordered_map_hasher<WCAppLaunchTimeEvent, std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, std::hash<WCAppLaunchTimeEvent>, std::equal_to<WCAppLaunchTimeEvent>, true>, std::__unordered_map_equal<WCAppLaunchTimeEvent, std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, std::equal_to<WCAppLaunchTimeEvent>, std::hash<WCAppLaunchTimeEvent>, true>, std::allocator<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<WCAppLaunchTimeEvent, std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, std::hash<WCAppLaunchTimeEvent>, std::equal_to<WCAppLaunchTimeEvent>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<WCAppLaunchTimeEvent, std::__hash_value_type<WCAppLaunchTimeEvent, unsigned long long>, std::equal_to<WCAppLaunchTimeEvent>, std::hash<WCAppLaunchTimeEvent>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<double, NSMutableArray *, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, NSMutableArray *>>> {
    struct __hash_table<std::__hash_value_type<double, NSMutableArray *>, std::__unordered_map_hasher<double, std::__hash_value_type<double, NSMutableArray *>, std::hash<double>, std::equal_to<double>, true>, std::__unordered_map_equal<double, std::__hash_value_type<double, NSMutableArray *>, std::equal_to<double>, std::hash<double>, true>, std::allocator<std::__hash_value_type<double, NSMutableArray *>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<double, NSMutableArray *>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<double, std::__hash_value_type<double, NSMutableArray *>, std::hash<double>, std::equal_to<double>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<double, std::__hash_value_type<double, NSMutableArray *>, std::equal_to<double>, std::hash<double>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<double, double, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<const double, double>>> {
    struct __hash_table<std::__hash_value_type<double, double>, std::__unordered_map_hasher<double, std::__hash_value_type<double, double>, std::hash<double>, std::equal_to<double>, true>, std::__unordered_map_equal<double, std::__hash_value_type<double, double>, std::equal_to<double>, std::hash<double>, true>, std::allocator<std::__hash_value_type<double, double>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<double, double>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<double, double>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<double, std::__hash_value_type<double, double>, std::hash<double>, std::equal_to<double>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<double, std::__hash_value_type<double, double>, std::equal_to<double>, std::hash<double>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, _NativeBuffer, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, _NativeBuffer>>> {
    struct __hash_table<std::__hash_value_type<int, _NativeBuffer>, std::__unordered_map_hasher<int, std::__hash_value_type<int, _NativeBuffer>, std::hash<int>, std::equal_to<int>, true>, std::__unordered_map_equal<int, std::__hash_value_type<int, _NativeBuffer>, std::equal_to<int>, std::hash<int>, true>, std::allocator<std::__hash_value_type<int, _NativeBuffer>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<int, _NativeBuffer>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<int, std::__hash_value_type<int, _NativeBuffer>, std::hash<int>, std::equal_to<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<int, std::__hash_value_type<int, _NativeBuffer>, std::equal_to<int>, std::hash<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::string>>> {
    struct __hash_table<std::__hash_value_type<std::string, std::string>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::string>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::string>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::string>, std::hash<std::string>, std::equal_to<std::string>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::string>, std::equal_to<std::string>, std::hash<std::string>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::string, unsigned long, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned long>>> {
    struct __hash_table<std::__hash_value_type<std::string, unsigned long>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned long>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned long>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, unsigned long>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned long>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned long>, std::hash<std::string>, std::equal_to<std::string>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned long>, std::equal_to<std::string>, std::hash<std::string>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>> {
    struct __hash_table<std::__hash_value_type<unsigned int, unsigned int>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, unsigned int>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, EJFontGlyphInfo, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, EJFontGlyphInfo>>> {
    struct __hash_table<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>>> {
            struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, EJFontGlyphInfo>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct uregex;

struct vImage_ARGBToYpCbCr {
    unsigned char opaque[128];
};

struct vImage_Buffer {
    void *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct vec2 {
    double _field1;
    double _field2;
};

struct vec<3, float, glm::packed_highp> {
    CDUnion_04d6de92 _field1;
    CDUnion_04d6de92 _field2;
    CDUnion_04d6de92 _field3;
};

struct vector<CronetTaskProfile::HeaderMap, std::allocator<CronetTaskProfile::HeaderMap>> {
    struct HeaderMap *__begin_;
    struct HeaderMap *__end_;
    struct __compressed_pair<CronetTaskProfile::HeaderMap *, std::allocator<CronetTaskProfile::HeaderMap>> {
        struct HeaderMap *__value_;
    } __end_cap_;
};

struct vector<CronetTaskProfile::HostIpMap, std::allocator<CronetTaskProfile::HostIpMap>> {
    struct HostIpMap *__begin_;
    struct HostIpMap *__end_;
    struct __compressed_pair<CronetTaskProfile::HostIpMap *, std::allocator<CronetTaskProfile::HostIpMap>> {
        struct HostIpMap *__value_;
    } __end_cap_;
};

struct vector<CronetTaskProfile::QuicForceHost, std::allocator<CronetTaskProfile::QuicForceHost>> {
    struct QuicForceHost *__begin_;
    struct QuicForceHost *__end_;
    struct __compressed_pair<CronetTaskProfile::QuicForceHost *, std::allocator<CronetTaskProfile::QuicForceHost>> {
        struct QuicForceHost *__value_;
    } __end_cap_;
};

struct vector<CronetTaskProfile::QuicHostMap, std::allocator<CronetTaskProfile::QuicHostMap>> {
    struct QuicHostMap *__begin_;
    struct QuicHostMap *__end_;
    struct __compressed_pair<CronetTaskProfile::QuicHostMap *, std::allocator<CronetTaskProfile::QuicHostMap>> {
        struct QuicHostMap *__value_;
    } __end_cap_;
};

struct vector<EJVector2, std::allocator<EJVector2>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<EJVector2 *, std::allocator<EJVector2>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<Entry, std::allocator<Entry>> {
    struct Entry *__begin_;
    struct Entry *__end_;
    struct __compressed_pair<Entry *, std::allocator<Entry>> {
        struct Entry *__value_;
    } __end_cap_;
};

struct vector<FFE::BoxInfo, std::allocator<FFE::BoxInfo>> {
    struct BoxInfo *__begin_;
    struct BoxInfo *__end_;
    struct __compressed_pair<FFE::BoxInfo *, std::allocator<FFE::BoxInfo>> {
        struct BoxInfo *__value_;
    } __end_cap_;
};

struct vector<NSString *__unsafe_unretained, std::allocator<NSString *__unsafe_unretained>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<NSString *__unsafe_unretained *, std::allocator<NSString *__unsafe_unretained>> {
        id *__value_;
    } __end_cap_;
};

struct vector<PixelBufferPoolDesc, std::allocator<PixelBufferPoolDesc>> {
    struct PixelBufferPoolDesc *__begin_;
    struct PixelBufferPoolDesc *__end_;
    struct __compressed_pair<PixelBufferPoolDesc *, std::allocator<PixelBufferPoolDesc>> {
        struct PixelBufferPoolDesc *__value_;
    } __end_cap_;
};

struct vector<QBAR_INFO, std::allocator<QBAR_INFO>> {
    struct QBAR_INFO *_field1;
    struct QBAR_INFO *_field2;
    struct __compressed_pair<QBAR_INFO *, std::allocator<QBAR_INFO>> {
        struct QBAR_INFO *_field1;
    } _field3;
};

struct vector<QBAR_POINT, std::allocator<QBAR_POINT>> {
    struct QBAR_POINT *_field1;
    struct QBAR_POINT *_field2;
    struct __compressed_pair<QBAR_POINT *, std::allocator<QBAR_POINT>> {
        struct QBAR_POINT *_field1;
    } _field3;
};

struct vector<QBAR_RESULT, std::allocator<QBAR_RESULT>> {
    struct QBAR_RESULT *_field1;
    struct QBAR_RESULT *_field2;
    struct __compressed_pair<QBAR_RESULT *, std::allocator<QBAR_RESULT>> {
        struct QBAR_RESULT *_field1;
    } _field3;
};

struct vector<RawYuvData, std::allocator<RawYuvData>> {
    struct RawYuvData *__begin_;
    struct RawYuvData *__end_;
    struct __compressed_pair<RawYuvData *, std::allocator<RawYuvData>> {
        struct RawYuvData *__value_;
    } __end_cap_;
};

struct vector<TPAVProgramInfo, std::allocator<TPAVProgramInfo>> {
    struct TPAVProgramInfo *_field1;
    struct TPAVProgramInfo *_field2;
    struct __compressed_pair<TPAVProgramInfo *, std::allocator<TPAVProgramInfo>> {
        struct TPAVProgramInfo *_field1;
    } _field3;
};

struct vector<TPMediaTrackInfo, std::allocator<TPMediaTrackInfo>> {
    struct TPMediaTrackInfo *_field1;
    struct TPMediaTrackInfo *_field2;
    struct __compressed_pair<TPMediaTrackInfo *, std::allocator<TPMediaTrackInfo>> {
        struct TPMediaTrackInfo *_field1;
    } _field3;
};

struct vector<TPPlayerRichMediaFeature, std::allocator<TPPlayerRichMediaFeature>> {
    struct TPPlayerRichMediaFeature *_field1;
    struct TPPlayerRichMediaFeature *_field2;
    struct __compressed_pair<TPPlayerRichMediaFeature *, std::allocator<TPPlayerRichMediaFeature>> {
        struct TPPlayerRichMediaFeature *_field1;
    } _field3;
};

struct vector<TPPlayerRichMediaTimeRange, std::allocator<TPPlayerRichMediaTimeRange>> {
    struct TPPlayerRichMediaTimeRange *_field1;
    struct TPPlayerRichMediaTimeRange *_field2;
    struct __compressed_pair<TPPlayerRichMediaTimeRange *, std::allocator<TPPlayerRichMediaTimeRange>> {
        struct TPPlayerRichMediaTimeRange *_field1;
    } _field3;
};

struct vector<TensorData, std::__1::allocator<TensorData>> {
    struct TensorData *_field1;
    struct TensorData *_field2;
    struct __compressed_pair<TensorData *, std::__1::allocator<TensorData>> {
        struct TensorData *_field1;
    } _field3;
};

struct vector<WCFinderProfileCard, std::allocator<WCFinderProfileCard>> {
    struct WCFinderProfileCard *_field1;
    struct WCFinderProfileCard *_field2;
    struct __compressed_pair<WCFinderProfileCard *, std::allocator<WCFinderProfileCard>> {
        struct WCFinderProfileCard *_field1;
    } _field3;
};

struct vector<WeVisDataReport22049Field, std::allocator<WeVisDataReport22049Field>> {
    struct WeVisDataReport22049Field *__begin_;
    struct WeVisDataReport22049Field *__end_;
    struct __compressed_pair<WeVisDataReport22049Field *, std::allocator<WeVisDataReport22049Field>> {
        struct WeVisDataReport22049Field *__value_;
    } __end_cap_;
};

struct vector<YTRawImgData, std::allocator<YTRawImgData>> {
    struct YTRawImgData *__begin_;
    struct YTRawImgData *__end_;
    struct __compressed_pair<YTRawImgData *, std::allocator<YTRawImgData>> {
        struct YTRawImgData *__value_;
    } __end_cap_;
};

struct vector<bool, std::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::allocator<unsigned long>> {
        unsigned long long __value_;
    } __cap_alloc_;
};

struct vector<cacheElement, std::allocator<cacheElement>> {
    struct cacheElement *__begin_;
    struct cacheElement *__end_;
    struct __compressed_pair<cacheElement *, std::allocator<cacheElement>> {
        struct cacheElement *__value_;
    } __end_cap_;
};

struct vector<cv::Mat, std::allocator<cv::Mat>> {
    struct Mat *__begin_;
    struct Mat *__end_;
    struct __compressed_pair<cv::Mat *, std::allocator<cv::Mat>> {
        struct Mat *__value_;
    } __end_cap_;
};

struct vector<cv::Point_<float>, std::allocator<cv::Point_<float>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<cv::Point_<float>*, std::allocator<cv::Point_<float>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<cv::Point_<int>, std::allocator<cv::Point_<int>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<cv::Point_<int>*, std::allocator<cv::Point_<int>>> {
        void *_field1;
    } _field3;
};

struct vector<double, std::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<float, std::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<fml::CFRef<const CGPath *>, std::allocator<fml::CFRef<const CGPath *>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<fml::CFRef<const CGPath *>*, std::allocator<fml::CFRef<const CGPath *>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<fml::ScopedBlock<void (^)(NSData *)>, std::allocator<fml::ScopedBlock<void (^)(NSData *)>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<fml::ScopedBlock<void (^)(NSData *)>*, std::allocator<fml::ScopedBlock<void (^)(NSData *)>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<int, std::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<lite_base::internal::UncheckedObserverAdapter, std::__1::allocator<lite_base::internal::UncheckedObserverAdapter>> {
    struct UncheckedObserverAdapter *_field1;
    struct UncheckedObserverAdapter *_field2;
    struct __compressed_pair<lite_base::internal::UncheckedObserverAdapter *, std::__1::allocator<lite_base::internal::UncheckedObserverAdapter>> {
        struct UncheckedObserverAdapter *_field1;
    } _field3;
};

struct vector<liteav::live::LiveMixStream, std::allocator<liteav::live::LiveMixStream>> {
    struct LiveMixStream *_field1;
    struct LiveMixStream *_field2;
    struct __compressed_pair<liteav::live::LiveMixStream *, std::allocator<liteav::live::LiveMixStream>> {
        struct LiveMixStream *_field1;
    } _field3;
};

struct vector<long long, std::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::BatchSnsReqImageData, std::allocator<mars::cdn::BatchSnsReqImageData>> {
    struct BatchSnsReqImageData *__begin_;
    struct BatchSnsReqImageData *__end_;
    struct __compressed_pair<mars::cdn::BatchSnsReqImageData *, std::allocator<mars::cdn::BatchSnsReqImageData>> {
        struct BatchSnsReqImageData *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::CheckHitFileInfo, std::allocator<mars::cdn::CheckHitFileInfo>> {
    struct CheckHitFileInfo *__begin_;
    struct CheckHitFileInfo *__end_;
    struct __compressed_pair<mars::cdn::CheckHitFileInfo *, std::allocator<mars::cdn::CheckHitFileInfo>> {
        struct CheckHitFileInfo *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::FileID, std::allocator<mars::cdn::FileID>> {
    struct FileID *__begin_;
    struct FileID *__end_;
    struct __compressed_pair<mars::cdn::FileID *, std::allocator<mars::cdn::FileID>> {
        struct FileID *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::HostIpMap, std::allocator<mars::cdn::HostIpMap>> {
    struct HostIpMap *__begin_;
    struct HostIpMap *__end_;
    struct __compressed_pair<mars::cdn::HostIpMap *, std::allocator<mars::cdn::HostIpMap>> {
        struct HostIpMap *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::QuicForceHost, std::allocator<mars::cdn::QuicForceHost>> {
    struct QuicForceHost *__begin_;
    struct QuicForceHost *__end_;
    struct __compressed_pair<mars::cdn::QuicForceHost *, std::allocator<mars::cdn::QuicForceHost>> {
        struct QuicForceHost *__value_;
    } __end_cap_;
};

struct vector<mars::cdn::QuicHostMap, std::allocator<mars::cdn::QuicHostMap>> {
    struct QuicHostMap *__begin_;
    struct QuicHostMap *__end_;
    struct __compressed_pair<mars::cdn::QuicHostMap *, std::allocator<mars::cdn::QuicHostMap>> {
        struct QuicHostMap *__value_;
    } __end_cap_;
};

struct vector<mars::smc::STIDKeyInfo, std::allocator<mars::smc::STIDKeyInfo>> {
    struct STIDKeyInfo *__begin_;
    struct STIDKeyInfo *__end_;
    struct __compressed_pair<mars::smc::STIDKeyInfo *, std::allocator<mars::smc::STIDKeyInfo>> {
        struct STIDKeyInfo *__value_;
    } __end_cap_;
};

struct vector<objc_method_description, std::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
};

struct vector<qmapkit::Mapsdk_trafficevent::Detail, std::allocator<qmapkit::Mapsdk_trafficevent::Detail>> {
    struct Detail *_field1;
    struct Detail *_field2;
    struct __compressed_pair<qmapkit::Mapsdk_trafficevent::Detail *, std::allocator<qmapkit::Mapsdk_trafficevent::Detail>> {
        struct Detail *_field1;
    } _field3;
};

struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<std::basic_string<char>*, std::allocator<std::basic_string<char>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>, std::allocator<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>*, std::allocator<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>>> {
        void *_field1;
    } _field3;
};

struct vector<std::pair<LSMFileItem *, NSData *__unsafe_unretained>, std::allocator<std::pair<LSMFileItem *, NSData *__unsafe_unretained>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::pair<LSMFileItem *, NSData *__unsafe_unretained>*, std::allocator<std::pair<LSMFileItem *, NSData *__unsafe_unretained>>> {
        void *_field1;
    } _field3;
};

struct vector<std::shared_ptr<ChatLogDataItem>, std::allocator<std::shared_ptr<ChatLogDataItem>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<std::shared_ptr<ChatLogDataItem>*, std::allocator<std::shared_ptr<ChatLogDataItem>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<std::shared_ptr<ChatLogSessionItem>, std::allocator<std::shared_ptr<ChatLogSessionItem>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<std::shared_ptr<ChatLogSessionItem>*, std::allocator<std::shared_ptr<ChatLogSessionItem>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<std::shared_ptr<XMJMusicInfo>, std::allocator<std::shared_ptr<XMJMusicInfo>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::shared_ptr<XMJMusicInfo>*, std::allocator<std::shared_ptr<XMJMusicInfo>>> {
        void *_field1;
    } _field3;
};

struct vector<std::shared_ptr<flutter::StringAttribute>, std::allocator<std::shared_ptr<flutter::StringAttribute>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<std::shared_ptr<flutter::StringAttribute>*, std::allocator<std::shared_ptr<flutter::StringAttribute>>> {
        void *__value_;
    } __end_cap_;
};

struct vector<std::string, std::allocator<std::string>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<std::string *, std::allocator<std::string>> {
        void *__value_;
    } __end_cap_;
};

struct vector<subpath_t, std::allocator<subpath_t>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<subpath_t *, std::allocator<subpath_t>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<tcmapkit::ArcLineCell *, std::allocator<tcmapkit::ArcLineCell *>> {
    struct ArcLineCell **_field1;
    struct ArcLineCell **_field2;
    struct __compressed_pair<tcmapkit::ArcLineCell **, std::allocator<tcmapkit::ArcLineCell *>> {
        struct ArcLineCell **_field1;
    } _field3;
};

struct vector<tcmapkit::IAggregatable *, std::allocator<tcmapkit::IAggregatable *>> {
    struct IAggregatable **_field1;
    struct IAggregatable **_field2;
    struct __compressed_pair<tcmapkit::IAggregatable **, std::allocator<tcmapkit::IAggregatable *>> {
        struct IAggregatable **_field1;
    } _field3;
};

struct vector<tcmapkit::RGBColor, std::allocator<tcmapkit::RGBColor>> {
    struct RGBColor *_field1;
    struct RGBColor *_field2;
    struct __compressed_pair<tcmapkit::RGBColor *, std::allocator<tcmapkit::RGBColor>> {
        struct RGBColor *_field1;
    } _field3;
};

struct vector<tpdrm::DrmSchemeType, std::allocator<tpdrm::DrmSchemeType>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<tpdrm::DrmSchemeType *, std::allocator<tpdrm::DrmSchemeType>> {
        int *_field1;
    } _field3;
};

struct vector<trtc::MixedUserConfig, std::allocator<trtc::MixedUserConfig>> {
    struct MixedUserConfig *_field1;
    struct MixedUserConfig *_field2;
    struct __compressed_pair<trtc::MixedUserConfig *, std::allocator<trtc::MixedUserConfig>> {
        struct MixedUserConfig *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct vector<unsigned char, std::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<wxvoipsdk::_AudioDeviceInfo, std::allocator<wxvoipsdk::_AudioDeviceInfo>> {
    struct _AudioDeviceInfo *_field1;
    struct _AudioDeviceInfo *_field2;
    struct __compressed_pair<wxvoipsdk::_AudioDeviceInfo *, std::allocator<wxvoipsdk::_AudioDeviceInfo>> {
        struct _AudioDeviceInfo *_field1;
    } _field3;
};

struct weak_ptr<CronetTaskCallback> {
    struct CronetTaskCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<liteav::manager::AudioEffectManager> {
    struct AudioEffectManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<liteav::manager::BeautyManagerProxy> {
    struct BeautyManagerProxy *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<liteav::manager::DeviceManager> {
    struct DeviceManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<liteav::video::VideoConsumer::Client> {
    struct Client *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<liteav::video::VideoProducer::Client> {
    struct Client *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<mars::cdn::Get3rdDnsCallback> {
    struct Get3rdDnsCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<unit_rc::BaseRC> {
    struct BaseRC *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<wxvoipsdk::IWXConfAudioCallback> {
    struct IWXConfAudioCallback *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<wxvoipsdk::audio::AudioDeviceCapCallback> {
    struct AudioDeviceCapCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<wxvoipsdk::audio::AudioDevicePlayCallback> {
    struct AudioDevicePlayCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct ?<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
    void *ptr_;
} scoped_refptr_0bc7f72b;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
} RGBColor_87c90449;

typedef struct {
    CDUnknownFunctionPointerType *_vptr$AudioFrame;
    int sample_rate;
    int channels;
    int bits;
    int frame_size_ms;
    int frame_size_byte;
    _Bool frame_size_desc_byte;
    int samples_per_channel;
    _Bool has_trae_header;
    unsigned int timestamp_ms;
    unsigned int timestamp_sample;
    unsigned short seq_number;
    int packet_type;
    int codec_format;
    int frame_type;
    int stream_format;
    unsigned short energy;
    char *buffer;
    int data_size;
    int capacity;
    _Bool is_buffer_malloc_by_self;
} AudioFrame_99e89bc4;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} RGBColor_7aedc9dc;

typedef struct ?<bool> {
    _Bool _field1;
    CDUnion_2739e4df _field2;
} Optional_046ca505;

typedef struct ?<lite_base::RefCountedData<liteav::BufferT<unsigned char, false>>> {
    struct RefCountedData<liteav::BufferT<unsigned char, false>> *_field1;
} scoped_refptr_20702a9c;

typedef struct {
    scoped_refptr_0bc7f72b buffer_;
    unsigned long long offset_;
    unsigned long long size_;
} CopyOnWriteBuffer_235b5354;

typedef struct ?<bool> {
    struct OptionalStorage<bool, true, true> _field1;
} Optional_7a78c1a9;

typedef struct {
    basic_string_0ec669f3 url;
    map_afe8ac17 headers;
    _Bool enable_mete_data;
    basic_string_0ec669f3 flv_session_key;
    unsigned int connect_timeout_ms;
    unsigned int read_timeout_ms;
    unsigned int write_timeout_ms;
    struct set<std::string, std::less<std::string>, std::allocator<std::string>> target_rsp_headers_keys;
    unsigned char retry_limits;
    unsigned int retry_intervals_ms;
    _Bool enable_realtime;
    basic_string_0ec669f3 leb_domain;
} Config_fcbe28c0;

typedef struct {
    basic_string_0ec669f3 _field1;
    char *_field2;
    basic_string_0ec669f3 _field3;
    basic_string_0ec669f3 _field4;
    int _field5;
    basic_string_0ec669f3 _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    int _field9;
    int _field10;
    basic_string_0ec669f3 _field11;
    basic_string_0ec669f3 _field12;
    int _field13;
    _Bool _field14;
    _Bool _field15;
    int _field16;
    int _field17;
    unsigned long long _field18;
    basic_string_0ec669f3 _field19;
    struct vector<CronetTaskProfile::HeaderMap, std::allocator<CronetTaskProfile::HeaderMap>> _field20;
    int _field21;
    _Bool _field22;
    basic_string_0ec669f3 _field23;
    long long _field24;
    struct WebPageNeedProfile _field25;
    struct WxDownloadFileProfile _field26;
} CronetTaskResult_6bb1c50b;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct Identifier *_field2;
    struct shared_ptr<WCDB::StringView> _field3;
    _Bool _field4;
    struct Expression {
        CDUnknownFunctionPointerType *_field1;
        char _field2;
        char _field3;
        char _field4;
        union {
            struct LiteralValue _field1;
            struct BindParameter _field2;
            struct Column _field3;
            struct RaiseFunction _field4;
            struct WindowDef _field5;
            struct StringView _field6;
        } _field5;
        union {
            struct Shadow<WCDB::Syntax::SelectSTMT> _field1;
            struct StringView _field2;
            struct Schema _field3;
            struct Filter _field4;
        } _field6;
        union {
            struct StringView _field1;
            struct StringView _field2;
        } _field7;
        struct list<WCDB::Syntax::Expression, std::allocator<WCDB::Syntax::Expression>> _field8;
        CDUnion_7c34b7b7 _field9;
        char _field10;
        char _field11;
        _Bool _field12;
        _Bool _field13;
        char _field14;
        _Bool _field15;
        _Bool _field16;
        _Bool _field17;
        _Bool _field18;
        char _field19;
    } _field5;
    CDUnknownFunctionPointerType *_field6;
    CDUnknownFunctionPointerType *_field7;
    CDUnknownFunctionPointerType *_field8;
    CDUnknownFunctionPointerType *_field9;
    CDUnknownFunctionPointerType *_field10;
    CDUnknownFunctionPointerType *_field11;
    CDUnknownFunctionPointerType *_field12;
    CDUnknownFunctionPointerType *_field13;
} Expression_95f83ded;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
} CDStruct_bd2f613f;

typedef struct {
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
} CDStruct_6181342a;

typedef struct {
    unsigned char encStatus;
    unsigned char capStatus;
    unsigned char encType[2];
} CDStruct_6fac3b9d;

typedef struct {
    unsigned int _field1;
    unsigned short _field2;
    unsigned int _field3;
} CDStruct_91b80c38;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long x;
    unsigned long long y;
} CDStruct_73b5d383;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    double _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    char *_field6;
    _Bool _field7;
} CDStruct_c93d0401;

typedef struct {
    unsigned short bits;
    unsigned char modulus[256];
    unsigned char publicExponent[256];
    unsigned char exponent[256];
    unsigned char prime[2][128];
    unsigned char primeExponent[2][128];
    unsigned char coefficient[128];
} CDStruct_a8765c43;

typedef struct {
    unsigned short bits;
    unsigned char modulus[256];
    unsigned char exponent[256];
} CDStruct_757f3dd8;

typedef struct {
    char root_path[512];
    char device_id[65];
    char business_id[65];
    char user_id[65];
    int flag;
} CDStruct_088880ef;

typedef struct {
    double x1;
    double y1;
    double x2;
    double y2;
    double offset[3];
    double reds[3];
    double greens[3];
    double blues[3];
    double alphas[3];
} CDStruct_25202d3c;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
} CDStruct_1388058e;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
} CDStruct_a6fa95e6;

typedef struct {
    double minX;
    double minY;
    double maxX;
    double maxY;
} CDStruct_c519178c;

typedef struct {
    double x;
    double y;
    double r;
} CDStruct_78c249a6;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
} CDStruct_ee569e91;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
} CDStruct_0d450d55;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    int localRet;
    int svrRet;
    NSData *passwdSig;
    NSArray *sigArray;
    WloginUserInfo *userInfo;
    WloginErrInfo *errInfo;
    NSData *pictureData;
} CDStruct_e485254d;

typedef struct {
    int _field1;
    int _field2;
    unsigned int *_field3;
    int *_field4;
} CDStruct_dbd3b7f8;

typedef struct {
    int r;
    int g;
    int b;
    double a;
} CDStruct_abf36e01;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
} CDStruct_77932685;

typedef struct {
    int _field1;
    short _field2;
    int _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    double _field8;
    double _field9;
    short _field10;
    short _field11;
    double _field12;
    double _field13;
    short _field14;
    short _field15;
    double _field16;
    double _field17;
    short _field18;
    short _field19;
    double _field20;
    double _field21;
    short _field22;
    short _field23;
    double _field24;
    double _field25;
    short _field26;
    short _field27;
    double _field28;
    double _field29;
    short _field30;
    short _field31;
    double _field32;
    double _field33;
    short _field34;
    short _field35;
    double _field36;
    double _field37;
    short _field38;
    short _field39;
    double _field40;
    double _field41;
    short _field42;
    short _field43;
    double _field44;
    double _field45;
    short _field46;
    short _field47;
} CDStruct_3cf45a09;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long _field1;
    double _field2;
} CDStruct_7f320dbc;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    double _field5;
} CDStruct_7e23819f;

typedef struct {
    long long fps;
    long long time;
    long long drawcall;
    long long vertex;
    long long triangle;
    long long jank;
    long long bigJank;
    long long stutter;
    long long jankPerSecond;
    long long bigJankPerSecond;
    long long stutterPerSecond;
} CDStruct_b6d5f750;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long x;
    long long y;
    short z;
    long long language;
} CDStruct_f583c974;

typedef struct {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    short _field13;
    short _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
} CDStruct_259f0c51;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
    float _field3;
    CDStruct_183601bc *_field4;
    unsigned long long _field5;
} CDStruct_7244e0df;

typedef struct {
    WAEJTexture *texture[4];
    struct OpaqueJSValue *jsTexture[4];
} CDStruct_b80c0459;

typedef struct {
    char *_field1;
    struct OpaqueJSValue *_field2;
} CDStruct_a447ca18;

typedef struct {
    double scale;
    double rotation;
    struct CGVector translation;
} CDStruct_94e04e92;

typedef struct {
    int _field1;
    unsigned char _field2;
    unsigned char _field3;
    _Bool _field4;
    int _field5;
    char *_field6;
    union {
        void *_field1;
        char *_field2;
        Class _field3;
        CDUnknownFunctionPointerType _field4;
    } _field7;
} CDStruct_c15bdbc8;

typedef struct {
    long long options;
    struct CGSize size;
    long long mediaType;
    long long cacheType;
} CDStruct_4b68193d;

typedef struct {
    CDStruct_bd2f613f _field1;
    CDStruct_bd2f613f _field2;
} CDStruct_2c0d991e;

typedef struct {
    CDStruct_34734122 origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct {
    CDStruct_1b6d18a9 _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
} CDStruct_d2aef016;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGSize scale;
    double rotation;
} CDStruct_76c2da79;

typedef struct {
    struct CLLocationCoordinate2D center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_b7cb895d;

typedef struct {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
} CDStruct_3ec1b870;

typedef struct {
    struct CGAffineTransform transform;
    int globalCompositeOperation;
    CDUnion_a0760c36 fillColor;
    NSObject *fillObject;
    CDUnion_a0760c36 strokeColor;
    NSObject *strokeObject;
    float globalAlpha;
    float lineWidth;
    int lineCap;
    int lineJoin;
    float miterLimit;
    int textAlign;
    int textBaseline;
    WAEJFontDescriptor *font;
    WAEJPath *clipPath;
} CDStruct_917c3236;

typedef struct {
    struct MMTextLayoutParam param;
    unsigned long long fastCount;
    unsigned long long sysCount;
    long long duration;
    int type;
} CDStruct_e4889e99;

typedef struct {
    struct TC_FaceShape faceShape;
    vector_8ca568ff facePointsVis;
    float cls;
} CDStruct_c559757e;

typedef struct {
    int _field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    basic_string_0ec669f3 _field5;
    float _field6;
    float _field7;
    unsigned int _field8;
    unsigned int _field9;
    float _field10;
    unsigned int _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
} CDStruct_1b95e4bb;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double x;
    double y;
} CDStruct_34734122;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float width;
    float ascent;
    float descent;
} CDStruct_de2edefb;

typedef struct CFRef<const CGPath *> {
    struct CGPath *_field1;
} CFRef_9a097741;

typedef struct IPCTunnelPacket<liteav::replayKit::AudioTypeHeader> {
    struct IPCTunnelPacketHeader _field1;
    struct shared_ptr<liteav::replayKit::AudioTypeHeader> _field2;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field3;
} IPCTunnelPacket_b129adc4;

typedef struct ObjectRef<xeffect::RGDummyResource> {
    struct RGDummyResource *_field1;
} ObjectRef_0aa351a3;

typedef struct ObjectRef<xeffect::RGTexture> {
    struct RGTexture *_field1;
} ObjectRef_6bda2462;

typedef struct ObjectRef<xnet::rci::RciSwapChain> {
    struct RciSwapChain *mpObject;
} ObjectRef_edd3069f;

typedef struct OnceCallback<void (liteav::HttpClient::State, const liteav::HttpClient::Request &, std::unique_ptr<liteav::HttpClient::Response>)> {
    struct scoped_refptr<lite_base::internal::BindStateBase> _field1;
} OnceCallback_88fa0ee2;

typedef struct Optional<liteav::audio::AudioFrame> {
    struct OptionalStorage<liteav::audio::AudioFrame, false, false> _field1;
} Optional_1f4d77f6;

typedef struct RefPtr<fml::TaskRunner> {
    struct TaskRunner *_field1;
} RefPtr_c4449933;

typedef struct RepeatingCallback<void (liteav::HttpClient::State, const liteav::HttpClient::Request &, std::unique_ptr<liteav::HttpClient::Response>)> {
    struct scoped_refptr<lite_base::internal::BindStateBase> _field1;
} RepeatingCallback_b3d05fce;

typedef struct SharedPtr<XAKAsset> {
    struct XAKAsset *_field1;
} SharedPtr_3892eb03;

typedef struct SharedPtr<XIKImage> {
    struct XIKImage *_field1;
} SharedPtr_99ee5f5a;

typedef struct SharedPtr<XMFAudioTrack> {
    struct XMFAudioTrack *_ptr;
} SharedPtr_dc2152c3;

typedef struct SharedPtr<XMFClip> {
    struct XMFClip *_field1;
} SharedPtr_def310aa;

typedef struct SharedPtr<XMFImageFileClip> {
    struct XMFImageFileClip *_field1;
} SharedPtr_50463839;

typedef struct SharedPtr<XMFImageTrack> {
    struct XMFImageTrack *_ptr;
} SharedPtr_18dc3c11;

typedef struct SharedPtr<XMFMediaFile> {
    struct XMFMediaFile *_ptr;
} SharedPtr_9e2e1e0b;

typedef struct SharedPtr<XMFVideoClip> {
    struct XMFVideoClip *_ptr;
} SharedPtr_cbbc2efe;

typedef struct SharedPtr<XMFVideoFrame> {
    struct XMFVideoFrame *_field1;
} SharedPtr_43d2f63a;

typedef struct SharedPtr<XMFVideoTrack> {
    struct XMFVideoTrack *_ptr;
} SharedPtr_43668d6b;

typedef struct SharedPtr<XMJCamFunSession> {
    struct XMJCamFunSession *_ptr;
} SharedPtr_200f9ba2;

typedef struct SharedPtr<XMJCamResourceManager> {
    struct XMJCamResourceManager *_ptr;
} SharedPtr_8810e4e6;

typedef struct SharedPtr<XMJCamSession> {
    struct XMJCamSession *_ptr;
} SharedPtr_8d35978a;

typedef struct SharedPtr<XMJClipSegment> {
    struct XMJClipSegment *_ptr;
} SharedPtr_67e01d81;

typedef struct SharedPtr<XMJMaterialInfo> {
    struct XMJMaterialInfo *_ptr;
} SharedPtr_3c77faaa;

typedef struct SharedPtr<XMJMovieSessionV3> {
    struct XMJMovieSessionV3 *_ptr;
} SharedPtr_4dc38317;

typedef struct SharedPtr<XMJSegment> {
    struct XMJSegment *_ptr;
} SharedPtr_3fcb0b09;

typedef struct SharedPtr<XMJServiceManager> {
    struct XMJServiceManager *_ptr;
} SharedPtr_3bf8917f;

typedef struct SharedPtr<XMSExportSettings> {
    struct XMSExportSettings *_field1;
} SharedPtr_49b709ef;

typedef struct SharedPtr<XVIOnDemandPreprocManager> {
    struct XVIOnDemandPreprocManager *_ptr;
} SharedPtr_b1b13439;

typedef struct SharedPtr<XVIPreprocTask> {
    struct XVIPreprocTask *_field1;
} SharedPtr_6de59d61;

typedef struct StrongShape<tflite::gpu::Layout::BHWC> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} StrongShape_90d9bb64;

typedef struct SyntaxList<WCDB::OrderingTerm> {
    CDUnknownFunctionPointerType *_field1;
    struct __list_node_base<WCDB::OrderingTerm, void *> {
        void *_field1;
        void *_field2;
    } _field2;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<WCDB::OrderingTerm, void *>>> {
        unsigned long long _field1;
    } _field3;
} SyntaxList_943f464f;

typedef struct WeImage<unsigned char> {
    struct shared_ptr<wevision::WeImage<unsigned char>::Imp> _field1;
} WeImage_f6985655;

typedef struct WeakPtr<FlutterEngine> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    FlutterEngine *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
} WeakPtr_193805a4;

typedef struct WeakPtr<FlutterKeyboardManager> {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct RefPtr<fml::internal::WeakPtrFlag> _field3;
    struct DebugThreadChecker _field4;
} WeakPtr_989ab64a;

typedef struct WeakPtr<FlutterViewController> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    FlutterViewController *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
} WeakPtr_f9f8f011;

typedef struct WeakPtr<XMJResourcePreloader> {
    struct XMJResourcePreloader *_ptr;
    struct WeakRefType *m_refs;
} WeakPtr_55ba20e6;

typedef struct WeakPtr<flutter::AccessibilityBridgeIos> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    struct AccessibilityBridgeIos *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
} WeakPtr_97ded356;

typedef struct WeakPtr<flutter::FlutterPlatformViewsController> {
    CDUnknownFunctionPointerType *_vptr$WeakPtr;
    struct FlutterPlatformViewsController *ptr_;
    struct RefPtr<fml::internal::WeakPtrFlag> flag_;
    struct DebugThreadChecker checker_;
} WeakPtr_48c555cd;

typedef struct WeakPtr<flutter::PlatformView> {
    CDUnknownFunctionPointerType *_field1;
    struct PlatformView *_field2;
    struct RefPtr<fml::internal::WeakPtrFlag> _field3;
    struct DebugThreadChecker _field4;
} WeakPtr_e6f89922;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char>::__rep, std::__1::allocator<char>> {
        struct __rep {
            CDUnion_de1179c4 _field1;
        } _field1;
    } _field1;
} basic_string_8a3d048a;

typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> {
        struct __rep {
            CDUnion_de1179c4 ;
        } __value_;
    } __r_;
} basic_string_0ec669f3;

typedef struct deque<TPAudioRouteDescription, std::allocator<TPAudioRouteDescription>> {
    struct __split_buffer<TPAudioRouteDescription *, std::allocator<TPAudioRouteDescription *>> {
        struct TPAudioRouteDescription **__first_;
        struct TPAudioRouteDescription **__begin_;
        struct TPAudioRouteDescription **__end_;
        struct __compressed_pair<TPAudioRouteDescription **, std::allocator<TPAudioRouteDescription *>> {
            struct TPAudioRouteDescription **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<TPAudioRouteDescription>> {
        unsigned long long __value_;
    } __size_;
} deque_19df0b0c;

typedef struct function<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
    struct __value_func<bool (const char *, const char *, int (*)(void *, int, const char **, const char **), void *, char **)> {
        struct type _field1;
        void *_field2;
    } _field1;
} function_fdb5bcff;

typedef struct function<void ()> {
    struct __value_func<void ()> {
        struct type __buf_;
        void *__f_;
    } __f_;
} function_ffe40f9b;

typedef struct function<void (CGSize, CGAffineTransform)> {
    struct __value_func<void (CGSize, CGAffineTransform)> {
        struct type __buf_;
        void *__f_;
    } __f_;
} function_07344cbc;

typedef struct function<void (CGSize, CGAffineTransform, double)> {
    struct __value_func<void (CGSize, CGAffineTransform, double)> {
        struct type __buf_;
        void *__f_;
    } __f_;
} function_8a9ca1d4;

typedef struct function<void (const char *, std::vector<sqlitelint::Issue>)> {
    struct __value_func<void (const char *, std::vector<sqlitelint::Issue>)> {
        struct type _field1;
        void *_field2;
    } _field1;
} function_ddadd5d5;

typedef struct function<void (const puppet::fdn::Memory *, unsigned int, unsigned int)> {
    struct __value_func<void (const puppet::fdn::Memory *, unsigned int, unsigned int)> {
        struct type __buf_;
        void *__f_;
    } __f_;
} function_2b6ca66c;

typedef struct function<void (std::unique_ptr<flutter::FrameTimingsRecorder>)> {
    struct __value_func<void (std::unique_ptr<flutter::FrameTimingsRecorder>)> {
        struct type __buf_;
        void *__f_;
    } __f_;
} function_a9bd7188;

typedef struct list<std::shared_ptr<POPAnimatorItem>, std::allocator<std::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::shared_ptr<POPAnimatorItem>, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<std::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
} list_e34ef07f;

typedef struct list<std::string, std::allocator<std::string>> {
    struct __list_node_base<std::string, void *> {
        void *__prev_;
        void *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::allocator<std::__list_node<std::string, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
} list_ea53b405;

typedef struct map<TPCodecID, TPVCodecMaxCapability, std::less<TPCodecID>, std::allocator<std::pair<const TPCodecID, TPVCodecMaxCapability>>> {
    struct __tree<std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>, std::allocator<std::__value_type<TPCodecID, TPVCodecMaxCapability>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<TPCodecID, TPVCodecMaxCapability>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<TPCodecID, std::__value_type<TPCodecID, TPVCodecMaxCapability>, std::less<TPCodecID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_64ffd165;

typedef struct map<WeEffect::CORE_MODEL, std::string, std::less<WeEffect::CORE_MODEL>, std::allocator<std::pair<const WeEffect::CORE_MODEL, std::string>>> {
    struct __tree<std::__value_type<WeEffect::CORE_MODEL, std::string>, std::__map_value_compare<WeEffect::CORE_MODEL, std::__value_type<WeEffect::CORE_MODEL, std::string>, std::less<WeEffect::CORE_MODEL>, true>, std::allocator<std::__value_type<WeEffect::CORE_MODEL, std::string>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<WeEffect::CORE_MODEL, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<WeEffect::CORE_MODEL, std::__value_type<WeEffect::CORE_MODEL, std::string>, std::less<WeEffect::CORE_MODEL>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_e9b2dfc9;

typedef struct map<char *, char *, std::less<char *>, std::allocator<std::pair<char *const, char *>>> {
    struct __tree<std::__value_type<char *, char *>, std::__map_value_compare<char *, std::__value_type<char *, char *>, std::less<char *>, true>, std::allocator<std::__value_type<char *, char *>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<char *, char *>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<char *, std::__value_type<char *, char *>, std::less<char *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_38b9e7e1;

typedef struct map<int, std::string, std::less<int>, std::allocator<std::pair<const int, std::string>>> {
    struct __tree<std::__value_type<int, std::string>, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>, std::allocator<std::__value_type<int, std::string>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<int, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<int, std::__value_type<int, std::string>, std::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_3f958a91;

typedef struct map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>> {
    struct __tree<std::__value_type<std::string, std::string>, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::string>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, std::string>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_afe8ac17;

typedef struct map<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>, std::less<std::string>, std::allocator<std::pair<const std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>>> {
    struct __tree<std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, std::__map_value_compare<std::string, std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>>> {
        void *_field1;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, xnet::Tensor<xnet::Storage<DeviceKindCPU, ResourceKindBuffer>>>, std::less<std::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_90ee714d;

typedef struct map<unsigned int, unsigned long long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long long>>> {
    struct __tree<std::__value_type<unsigned int, unsigned long long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long long>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long long>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long long>, std::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_0a64c3eb;

typedef struct mat<3, 3, float, glm::packed_highp> {
    struct vec<3, float, glm::packed_highp> _field1[3];
} mat_1cb8bd66;

typedef struct multimap<NSString *, CGRect, WCFinderKeywordEqualId, std::allocator<std::pair<NSString *const, CGRect>>> {
    struct __tree<std::__value_type<NSString *, CGRect>, std::__map_value_compare<NSString *, std::__value_type<NSString *, CGRect>, WCFinderKeywordEqualId, true>, std::allocator<std::__value_type<NSString *, CGRect>>> {
        void *__begin_node_;
        struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *>*>, std::allocator<std::__tree_node<std::__value_type<NSString *, CGRect>, void *>>> {
            struct __tree_end_node<std::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, CGRect>, WCFinderKeywordEqualId, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} multimap_8acdc1b4;

typedef struct optional<CGRect> {
    union {
        char __null_state_;
        struct CGRect __val_;
    } ;
    _Bool __engaged_;
} optional_865a0c94;

typedef struct optional<MediaSource> {
    CDUnion_0506adf3 _field1;
    _Bool _field2;
} optional_2c4c9049;

typedef struct optional<bool> {
    CDUnion_2739e4df _field1;
    _Bool _field2;
} optional_a953c506;

typedef struct optional<std::string> {
    union {
        char _field1;
        basic_string_0ec669f3 _field2;
    } _field1;
    _Bool _field2;
} optional_bb4384b7;

typedef struct optional<wesvg::RGBColor> {
    union {
        char _field1;
        struct RGBColor {
            unsigned char _field1;
            unsigned char _field2;
            unsigned char _field3;
        } _field2;
    } _field1;
    _Bool _field2;
} optional_91f618e0;

typedef struct pair<NSData *, unsigned long> {
    id _field1;
    unsigned long long _field2;
} pair_e4c09457;

typedef struct pair<bool, KeyValueHolder> {
    _Bool _field1;
    struct KeyValueHolder _field2;
} pair_95c78d76;

typedef struct pair<double, double> {
    double _field1;
    double _field2;
} pair_b2618ff2;

typedef struct queue<std::string, std::deque<std::string>> {
    struct deque<std::string, std::allocator<std::string>> c;
} queue_7efded04;

typedef struct scoped_refptr<lite_base::SingleThreadTaskRunner> {
    struct SingleThreadTaskRunner *ptr_;
} scoped_refptr_249dff9e;

typedef struct scoped_refptr<liteav::OnlineLogger> {
    struct OnlineLogger *ptr_;
} scoped_refptr_c1332177;

typedef struct shared_ptr<ChatLogDataItem> {
    struct ChatLogDataItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_2a489de3;

typedef struct shared_ptr<ChatLogSessionItem> {
    struct ChatLogSessionItem *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5102c92c;

typedef struct shared_ptr<ExpandUIConfig> {
    struct ExpandUIConfig *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_448daa3e;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<TPThumbPlayerEventRecordCallbackWrapper> {
    struct TPThumbPlayerEventRecordCallbackWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_61da5af9;

typedef struct shared_ptr<WCDBSharedLock> {
    struct WCDBSharedLock *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_45de587b;

typedef struct shared_ptr<WCURLSessionTaskCallBack> {
    struct WCURLSessionTaskCallBack *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_70ca3131;

typedef struct shared_ptr<XMJAssetInfo> {
    struct XMJAssetInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5d30c34f;

typedef struct shared_ptr<XMJLyricInfo> {
    struct XMJLyricInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_10b9d6f7;

typedef struct shared_ptr<XMJMaasCore> {
    struct XMJMaasCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_32a93604;

typedef struct shared_ptr<XMJMusicInfo> {
    struct XMJMusicInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c29e59e1;

typedef struct shared_ptr<XMJRenderView> {
    struct XMJRenderView *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_85cde1ea;

typedef struct shared_ptr<XMJTaskTrace> {
    struct XMJTaskTrace *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1988f396;

typedef struct shared_ptr<XVAVideoMultiTaskClassifier> {
    struct XVAVideoMultiTaskClassifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_81e3b62c;

typedef struct shared_ptr<blink::BindingApp> {
    struct BindingApp *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_013fd618;

typedef struct shared_ptr<blink::HTMLCanvasViewNG> {
    struct HTMLCanvasViewNG *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3299e206;

typedef struct shared_ptr<blink::IOSCanvasViewDelegateGL> {
    struct IOSCanvasViewDelegateGL *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0ffddd04;

typedef struct shared_ptr<blink::ImageDecodeCache> {
    struct ImageDecodeCache *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_bf7a578a;

typedef struct shared_ptr<blink::ResourceLoader> {
    struct ResourceLoader *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_34631cd5;

typedef struct shared_ptr<cv::Mat> {
    struct Mat *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8d48a68a;

typedef struct shared_ptr<flutter::PlatformMessageRouter> {
    struct PlatformMessageRouter *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_971e8b7f;

typedef struct shared_ptr<liteav::manager::AudioEffectManager> {
    struct AudioEffectManager *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_08ab110d;

typedef struct shared_ptr<liteav::manager::BeautyManagerProxy> {
    struct BeautyManagerProxy *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_a0f684fb;

typedef struct shared_ptr<liteav::video::RPSFramerateCallback> {
    struct RPSFramerateCallback *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_315ac7d2;

typedef struct shared_ptr<liteav::video::VideoConsumer::Client> {
    struct Client *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b57d0861;

typedef struct shared_ptr<liteav::video::VideoProducer::Client> {
    struct Client *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_79c0c4be;

typedef struct shared_ptr<liteav::video::VideoStats> {
    struct VideoStats *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_679b269c;

typedef struct shared_ptr<mars::cdn::Get3rdDnsCallback> {
    struct Get3rdDnsCallback *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_5585d7e6;

typedef struct shared_ptr<pag::PAGFilter> {
    struct PAGFilter *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_812241da;

typedef struct shared_ptr<pag::PAGImage> {
    struct PAGImage *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d87a8cf2;

typedef struct shared_ptr<pag::PAGLayer> {
    struct PAGLayer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_69e1d727;

typedef struct shared_ptr<pag::PAGSurface> {
    struct PAGSurface *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d7de483d;

typedef struct shared_ptr<skyline::PageConfig> {
    struct PageConfig *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d0a3146a;

typedef struct shared_ptr<std::vector<vm_region_info>> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c96e8858;

typedef struct shared_ptr<unit_rc::BaseRC> {
    struct BaseRC *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ec19df4a;

typedef struct shared_ptr<unsigned char> {
    char *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b948f23b;

typedef struct shared_ptr<unsigned int> {
    unsigned int *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_72b6fdaf;

typedef struct shared_ptr<vlog::EffectManager> {
    struct EffectManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1fb3139e;

typedef struct shared_ptr<vlog::VLogDirector> {
    struct VLogDirector *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_294a3a94;

typedef struct shared_ptr<vlog::VLogEffect> {
    struct VLogEffect *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_588f9d5a;

typedef struct shared_ptr<wesvg::RenderElement> {
    struct RenderElement *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3de03f82;

typedef struct shared_ptr<wesvg::RenderModel> {
    struct RenderModel *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_fa695132;

typedef struct shared_ptr<wevision::HardwareBuffer> {
    struct HardwareBuffer *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4854a30e;

typedef struct shared_ptr<wevision::XImageFeat> {
    struct XImageFeat *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_772c274f;

typedef struct shared_ptr<wevision::XOneshotDet> {
    struct XOneshotDet *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_17e3e5e7;

typedef struct shared_ptr<wxvoipsdk::ILinkPusherAudioDataCallback> {
    struct ILinkPusherAudioDataCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f88d11c8;

typedef struct shared_ptr<wxvoipsdk::TRTCAudioEffectCallback> {
    struct TRTCAudioEffectCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e3b70170;

typedef struct sk_sp<GrDirectContext> {
    struct GrDirectContext *fPtr;
} sk_sp_f030eba7;

typedef struct sk_sp<SkImage> {
    struct SkImage *fPtr;
} sk_sp_851faaab;

typedef struct sk_sp<SkSurface> {
    struct SkSurface *fPtr;
} sk_sp_ce222020;

typedef struct tuple<bool, bool, CGPoint> {
    struct __tuple_impl<std::__tuple_indices<0, 1, 2>, bool, bool, CGPoint> {
        _Bool _field1;
        _Bool _field2;
        struct CGPoint _field3;
    } _field1;
} tuple_4c565a4a;

typedef struct tuple<bool, double> {
    struct __tuple_impl<std::__tuple_indices<0, 1>, bool, double> {
        _Bool _field1;
        double _field2;
    } _field1;
} tuple_1f478d1c;

typedef struct unique_ptr<flutter::PointerDataPacket, std::default_delete<flutter::PointerDataPacket>> {
    struct __compressed_pair<flutter::PointerDataPacket *, std::default_delete<flutter::PointerDataPacket>> {
        struct PointerDataPacket *_field1;
    } _field1;
} unique_ptr_efd15f96;

typedef struct unique_ptr<flutter::Shell, std::default_delete<flutter::Shell>> {
    struct __compressed_pair<flutter::Shell *, std::default_delete<flutter::Shell>> {
        struct Shell *__value_;
    } __ptr_;
} unique_ptr_49980375;

typedef struct unique_ptr<liteav::HttpClient::Request, std::default_delete<liteav::HttpClient::Request>> {
    struct __compressed_pair<liteav::HttpClient::Request *, std::default_delete<liteav::HttpClient::Request>> {
        struct Request *_field1;
    } _field1;
} unique_ptr_0164a445;

typedef struct unique_ptr<liteav::audio::AudioFrame, std::default_delete<liteav::audio::AudioFrame>> {
    struct __compressed_pair<liteav::audio::AudioFrame *, std::default_delete<liteav::audio::AudioFrame>> {
        struct AudioFrame *_field1;
    } _field1;
} unique_ptr_a32b0653;

typedef struct unique_ptr<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>>> {
    struct __compressed_pair<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>*, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::AudioTypeHeader>>> {
        void *_field1;
    } _field1;
} unique_ptr_100b2e14;

typedef struct unique_ptr<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>>> {
    struct __compressed_pair<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>*, std::default_delete<liteav::replayKit::IPCTunnelPacket<liteav::replayKit::VideoTypeHeader>>> {
        void *_field1;
    } _field1;
} unique_ptr_fc608599;

typedef struct unique_ptr<liteav::video::VideoFrame, std::default_delete<liteav::video::VideoFrame>> {
    struct __compressed_pair<liteav::video::VideoFrame *, std::default_delete<liteav::video::VideoFrame>> {
        struct VideoFrame *__value_;
    } __ptr_;
} unique_ptr_4b64f7fb;

typedef struct vector<QBAR_INFO, std::allocator<QBAR_INFO>> {
    struct QBAR_INFO *_field1;
    struct QBAR_INFO *_field2;
    struct __compressed_pair<QBAR_INFO *, std::allocator<QBAR_INFO>> {
        struct QBAR_INFO *_field1;
    } _field3;
} vector_95637d69;

typedef struct vector<QBAR_POINT, std::allocator<QBAR_POINT>> {
    struct QBAR_POINT *_field1;
    struct QBAR_POINT *_field2;
    struct __compressed_pair<QBAR_POINT *, std::allocator<QBAR_POINT>> {
        struct QBAR_POINT *_field1;
    } _field3;
} vector_d4107ee0;

typedef struct vector<QBAR_RESULT, std::allocator<QBAR_RESULT>> {
    struct QBAR_RESULT *_field1;
    struct QBAR_RESULT *_field2;
    struct __compressed_pair<QBAR_RESULT *, std::allocator<QBAR_RESULT>> {
        struct QBAR_RESULT *_field1;
    } _field3;
} vector_04675aae;

typedef struct vector<TPAVProgramInfo, std::allocator<TPAVProgramInfo>> {
    struct TPAVProgramInfo *_field1;
    struct TPAVProgramInfo *_field2;
    struct __compressed_pair<TPAVProgramInfo *, std::allocator<TPAVProgramInfo>> {
        struct TPAVProgramInfo *_field1;
    } _field3;
} vector_5a53d670;

typedef struct vector<TPMediaTrackInfo, std::allocator<TPMediaTrackInfo>> {
    struct TPMediaTrackInfo *_field1;
    struct TPMediaTrackInfo *_field2;
    struct __compressed_pair<TPMediaTrackInfo *, std::allocator<TPMediaTrackInfo>> {
        struct TPMediaTrackInfo *_field1;
    } _field3;
} vector_fdf80d0c;

typedef struct vector<TPPlayerRichMediaFeature, std::allocator<TPPlayerRichMediaFeature>> {
    struct TPPlayerRichMediaFeature *_field1;
    struct TPPlayerRichMediaFeature *_field2;
    struct __compressed_pair<TPPlayerRichMediaFeature *, std::allocator<TPPlayerRichMediaFeature>> {
        struct TPPlayerRichMediaFeature *_field1;
    } _field3;
} vector_f4e3e6bf;

typedef struct vector<TPPlayerRichMediaTimeRange, std::allocator<TPPlayerRichMediaTimeRange>> {
    struct TPPlayerRichMediaTimeRange *_field1;
    struct TPPlayerRichMediaTimeRange *_field2;
    struct __compressed_pair<TPPlayerRichMediaTimeRange *, std::allocator<TPPlayerRichMediaTimeRange>> {
        struct TPPlayerRichMediaTimeRange *_field1;
    } _field3;
} vector_d4921383;

typedef struct vector<TensorData, std::__1::allocator<TensorData>> {
    struct TensorData *_field1;
    struct TensorData *_field2;
    struct __compressed_pair<TensorData *, std::__1::allocator<TensorData>> {
        struct TensorData *_field1;
    } _field3;
} vector_1994dafb;

typedef struct vector<WCFinderProfileCard, std::allocator<WCFinderProfileCard>> {
    struct WCFinderProfileCard *_field1;
    struct WCFinderProfileCard *_field2;
    struct __compressed_pair<WCFinderProfileCard *, std::allocator<WCFinderProfileCard>> {
        struct WCFinderProfileCard *_field1;
    } _field3;
} vector_7cafffa0;

typedef struct vector<cv::Mat, std::allocator<cv::Mat>> {
    struct Mat *__begin_;
    struct Mat *__end_;
    struct __compressed_pair<cv::Mat *, std::allocator<cv::Mat>> {
        struct Mat *__value_;
    } __end_cap_;
} vector_982f241f;

typedef struct vector<cv::Point_<float>, std::allocator<cv::Point_<float>>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<cv::Point_<float>*, std::allocator<cv::Point_<float>>> {
        void *__value_;
    } __end_cap_;
} vector_dc67b4ed;

typedef struct vector<cv::Point_<int>, std::allocator<cv::Point_<int>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<cv::Point_<int>*, std::allocator<cv::Point_<int>>> {
        void *_field1;
    } _field3;
} vector_e6b6e210;

typedef struct vector<float, std::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::allocator<float>> {
        float *__value_;
    } __end_cap_;
} vector_8ca568ff;

typedef struct vector<int, std::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_cd3186ef;

typedef struct vector<long long, std::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
} vector_1ee95920;

typedef struct vector<mars::smc::STIDKeyInfo, std::allocator<mars::smc::STIDKeyInfo>> {
    struct STIDKeyInfo *__begin_;
    struct STIDKeyInfo *__end_;
    struct __compressed_pair<mars::smc::STIDKeyInfo *, std::allocator<mars::smc::STIDKeyInfo>> {
        struct STIDKeyInfo *__value_;
    } __end_cap_;
} vector_0827168c;

typedef struct vector<objc_method_description, std::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
} vector_c11dd721;

typedef struct vector<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>, std::allocator<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>*, std::allocator<std::pair<FinderStreamDivider *, NSArray<WCFinderDataItem *>*>>> {
        void *_field1;
    } _field3;
} vector_c9a4c9eb;

typedef struct vector<std::pair<LSMFileItem *, NSData *__unsafe_unretained>, std::allocator<std::pair<LSMFileItem *, NSData *__unsafe_unretained>>> {
    void *_field1;
    void *_field2;
    struct __compressed_pair<std::pair<LSMFileItem *, NSData *__unsafe_unretained>*, std::allocator<std::pair<LSMFileItem *, NSData *__unsafe_unretained>>> {
        void *_field1;
    } _field3;
} vector_90b82a4e;

typedef struct vector<std::string, std::allocator<std::string>> {
    void *__begin_;
    void *__end_;
    struct __compressed_pair<std::string *, std::allocator<std::string>> {
        void *__value_;
    } __end_cap_;
} vector_bfe5b09a;

typedef struct vector<tcmapkit::ArcLineCell *, std::allocator<tcmapkit::ArcLineCell *>> {
    struct ArcLineCell **_field1;
    struct ArcLineCell **_field2;
    struct __compressed_pair<tcmapkit::ArcLineCell **, std::allocator<tcmapkit::ArcLineCell *>> {
        struct ArcLineCell **_field1;
    } _field3;
} vector_60e76471;

typedef struct vector<tcmapkit::IAggregatable *, std::allocator<tcmapkit::IAggregatable *>> {
    struct IAggregatable **_field1;
    struct IAggregatable **_field2;
    struct __compressed_pair<tcmapkit::IAggregatable **, std::allocator<tcmapkit::IAggregatable *>> {
        struct IAggregatable **_field1;
    } _field3;
} vector_fdbda47e;

typedef struct vector<tcmapkit::RGBColor, std::allocator<tcmapkit::RGBColor>> {
    struct RGBColor *_field1;
    struct RGBColor *_field2;
    struct __compressed_pair<tcmapkit::RGBColor *, std::allocator<tcmapkit::RGBColor>> {
        struct RGBColor *_field1;
    } _field3;
} vector_59af8ef9;

typedef struct vector<tpdrm::DrmSchemeType, std::allocator<tpdrm::DrmSchemeType>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<tpdrm::DrmSchemeType *, std::allocator<tpdrm::DrmSchemeType>> {
        int *_field1;
    } _field3;
} vector_e6ac3340;

typedef struct vector<wxvoipsdk::_AudioDeviceInfo, std::allocator<wxvoipsdk::_AudioDeviceInfo>> {
    struct _AudioDeviceInfo *_field1;
    struct _AudioDeviceInfo *_field2;
    struct __compressed_pair<wxvoipsdk::_AudioDeviceInfo *, std::allocator<wxvoipsdk::_AudioDeviceInfo>> {
        struct _AudioDeviceInfo *_field1;
    } _field3;
} vector_c729919e;

typedef struct weak_ptr<liteav::manager::DeviceManager> {
    struct DeviceManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_65a257e1;

typedef struct weak_ptr<unit_rc::BaseRC> {
    struct BaseRC *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_cef3ecd1;

typedef struct weak_ptr<wxvoipsdk::IWXConfAudioCallback> {
    struct IWXConfAudioCallback *_field1;
    struct __shared_weak_count *_field2;
} weak_ptr_42c0f24b;

typedef struct weak_ptr<wxvoipsdk::audio::AudioDeviceCapCallback> {
    struct AudioDeviceCapCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_380cdd4f;

typedef struct weak_ptr<wxvoipsdk::audio::AudioDevicePlayCallback> {
    struct AudioDevicePlayCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_bc793f5c;

#pragma mark Named Unions

union MapVector2d {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
    struct {
        double _field1;
        double _field2;
    } _field3;
};

union MapVector2f {
    CDStruct_6e3f967a _field1;
    CDStruct_6e3f967a _field2;
};

union MapVector4ub {
    CDStruct_6181342a _field1;
    CDStruct_6181342a _field2;
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    CDStruct_6e3f967a _field1;
    CDStruct_6e3f967a _field2;
    float _field3[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

union sigval {
    int _field1;
    void *_field2;
};

#pragma mark Typedef'd Unions

typedef union {
    char _field1;
    _Bool _field2;
} CDUnion_2739e4df;

typedef union {
    char _field1;
    char _field2;
} CDUnion_7c34b7b7;

typedef union {
    char _field1;
    int _field2;
} CDUnion_0506adf3;

typedef union {
    float _field1;
    float _field2;
    float _field3;
} CDUnion_04d6de92;

typedef union {
    CDStruct_6181342a rgba;
    unsigned char components[4];
    unsigned int hex;
} CDUnion_a0760c36;

typedef union {
    struct __long {
        char *__data_;
        unsigned long long __size_;
        unsigned long long __cap_;
    } __l;
    struct __short {
        char __data_[23];
        struct {
            unsigned char __size_;
        } ;
    } __s;
    struct __raw __r;
} CDUnion_de1179c4;

